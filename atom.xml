<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Hope_Y&#39;s blog</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2020-02-28T12:23:19.727Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>Hope_Y</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Day1</title>
    <link href="http://yoursite.com/2020/02/28/Day1/"/>
    <id>http://yoursite.com/2020/02/28/Day1/</id>
    <published>2020-02-28T02:50:35.256Z</published>
    <updated>2020-02-28T12:23:19.727Z</updated>
    
    <content type="html"><![CDATA[<p>数论<del>共产党</del>$gcd$，欧拉函数</p><a id="more"></a><h5 id="CF-1295D"><a href="#CF-1295D" class="headerlink" title="CF-1295D"></a><a href="https://codeforces.com/contest/1295/problem/D" target="_blank" rel="noopener">CF-1295D</a></h5><p>题意：</p><p>给定两个整数$a$和$m$，计算使得$gcd(a+x,m)=gcd(a,m) \ (0\le x \le m \ \  1\le a &lt; m \le  10^{10} )$成立的$x$的数量</p><p>题解：</p><p>如果$a\ge b$，$gcd(a,b)=gcd(a-b,b)$</p><p>如果$a+x \ge m$</p><p>那么$gcd(a+x,m)=gcd(a+x-m,m)$</p><p>$a+x-m=(a+x)%m$</p><p>$x’=(a+x)%m \ (0 \le x’ &lt; m)$</p><p>$gcd(x’,m)=gcd(a,m)=d$</p><p>$gcd(\frac{x’}{d},\frac{m}{d})=1$</p><p>答案就是在区间$(0,\frac{m}{d}]$中与$\frac{m}{d}$互质的个数，即$\varphi (\frac{m}{d})$。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;ctime&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;map&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> F first</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> S second</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> pair&lt;<span class="keyword">int</span>,<span class="keyword">int</span>&gt; pii;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="function">ll <span class="title">phi</span><span class="params">(ll n)</span></span>&#123;</span><br><span class="line">    ll i,rea=n;</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">2</span>;i*i&lt;=n;i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(n%i==<span class="number">0</span>)&#123;</span><br><span class="line">            rea=rea-rea/i;</span><br><span class="line">            <span class="keyword">while</span>(n%i==<span class="number">0</span>)</span><br><span class="line">                n/=i;</span><br><span class="line">         &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(n&gt;<span class="number">1</span>)</span><br><span class="line">        rea=rea-rea/n;</span><br><span class="line">    <span class="keyword">return</span> rea;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">solve</span><span class="params">()</span></span>&#123;</span><br><span class="line">    ll a,m,d;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%lld %lld"</span>,&amp;a,&amp;m);</span><br><span class="line">    d=__gcd(a,m);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,phi(m/d));</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> T_T=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">clock_t</span> t0=clock();</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;T_T);</span><br><span class="line">    <span class="keyword">while</span>(T_T--)&#123;</span><br><span class="line">        solve();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">clock_t</span> t1=clock();</span><br><span class="line">    <span class="comment">//printf("%.3fms\n",(double)(t1-t0)/CLOCKS_PER_SEC*1000.0);</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;数论&lt;del&gt;共产党&lt;/del&gt;$gcd$，欧拉函数&lt;/p&gt;
    
    </summary>
    
      <category term="day++" scheme="http://yoursite.com/categories/day/"/>
    
    
  </entry>
  
  <entry>
    <title>软件工程</title>
    <link href="http://yoursite.com/2020/02/27/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B/"/>
    <id>http://yoursite.com/2020/02/27/软件工程/</id>
    <published>2020-02-27T07:47:16.752Z</published>
    <updated>2020-02-28T09:08:16.754Z</updated>
    
    <content type="html"><![CDATA[<p>软件工程笔记</p><a id="more"></a><h4 id="第一章-软件与软件工程的概念"><a href="#第一章-软件与软件工程的概念" class="headerlink" title="第一章 软件与软件工程的概念"></a>第一章 软件与软件工程的概念</h4><h5 id="1-1-软件的概念、特性和分类"><a href="#1-1-软件的概念、特性和分类" class="headerlink" title="1.1 软件的概念、特性和分类"></a>1.1 软件的概念、特性和分类</h5><h6 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h6><p>$$<br>软件（与硬件相互依存）<br>\begin{cases}<br>程序：按事先设计的功能和性能要求执行的指令序列<br>\newline<br>数据：使程序能正常操纵信息的数据结构<br>\newline<br>文档：与程序开发、维护和使用有关的图文材料<br>\end{cases}<br>$$</p><h6 id="特性"><a href="#特性" class="headerlink" title="特性"></a>特性</h6><p>形态特性：无形的逻辑实体</p><p>智能特性：复杂的智力产品</p><p>开发特性：软件的开发至今没有完全摆脱手艺的开发方式</p><p>质量特性：目前还没有得到完全没有缺陷的软件产品</p><p>生产特性：无明显制造过程，按需制作</p><p>管理特性：开发管理特性</p><p>环境特性：依赖编译环境</p><p>维护特性：比硬件更加复杂的维护</p><p>废弃特性：没有老化而被废弃的问题，但是存在退化问题</p><p>应用特性：无可取代的地位</p><h6 id="分类"><a href="#分类" class="headerlink" title="分类"></a>分类</h6><p>系统软件：底层软件，服务于其他程序的程序</p><p>应用软件：解决特定业务所需要的独立应用程序</p><p>工程/科学软件：“数值计算”</p><p>嵌入式软件：某个产品中特定功能的软件</p><p>产品线软件：为多个不同用户提供特定功能</p><p>Web/移动应用软件：App</p><p>人工智能软件：智能</p><h5 id="1-2-软件危机与软件工程"><a href="#1-2-软件危机与软件工程" class="headerlink" title="1.2 软件危机与软件工程"></a>1.2 软件危机与软件工程</h5><p>软件危机：计算机软件的开发、运行和维护过程所遇到的一系列严重问题</p><p>主要表现（征兆）：软件发展速度远远滞后于硬件的发展（判断时只需判断是否对该软件有负面反馈）</p><p>原因：开发周期长、成本高、质量差、维护困难</p><h5 id="1-3-软件工程的目标"><a href="#1-3-软件工程的目标" class="headerlink" title="1.3 软件工程的目标"></a>1.3 软件工程的目标</h5><p>运用先进的开发技术和管理方法提高软件的质量和生产率（花更少的代价做最好产品）</p><p>功能性、可靠性、易于使用性、效率、可维护性、可移植性</p><h5 id="1-4-软件生存期"><a href="#1-4-软件生存期" class="headerlink" title="1.4 软件生存期"></a>1.4 软件生存期</h5><p>三时期：软件定义—-&gt;软件开发—-&gt;运行维护</p><h5 id="1-5-软件工程方法概述"><a href="#1-5-软件工程方法概述" class="headerlink" title="1.5 软件工程方法概述"></a>1.5 软件工程方法概述</h5><p>软件开发全过程中使用的一整套技术方案成为方法学（范型）</p><p>方法学三要素：过程、方法和工具</p><h5 id="1-6-软件工具概述"><a href="#1-6-软件工具概述" class="headerlink" title="1.6 软件工具概述"></a>1.6 软件工具概述</h5><p>支持软件开发过程的工具、支持软件维护过程的工具、支持软件管理过程和支持过程的工具</p><h5 id="1-7-软件工程知识体系及知识域"><a href="#1-7-软件工程知识体系及知识域" class="headerlink" title="1.7 软件工程知识体系及知识域"></a>1.7 软件工程知识体系及知识域</h5>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;软件工程笔记&lt;/p&gt;
    
    </summary>
    
      <category term="课堂笔记" scheme="http://yoursite.com/categories/%E8%AF%BE%E5%A0%82%E7%AC%94%E8%AE%B0/"/>
    
    
  </entry>
  
  <entry>
    <title>工程经济学</title>
    <link href="http://yoursite.com/2020/02/26/%E5%B7%A5%E7%A8%8B%E7%BB%8F%E6%B5%8E%E5%AD%A6/"/>
    <id>http://yoursite.com/2020/02/26/工程经济学/</id>
    <published>2020-02-26T06:36:24.612Z</published>
    <updated>2020-02-28T09:10:53.864Z</updated>
    
    <content type="html"><![CDATA[<p>工程经济学笔记</p><a id="more"></a><h4 id="引言"><a href="#引言" class="headerlink" title="引言"></a>引言</h4><p>企业的目的：赚钱、全社会范围内利益团体价值最大化</p><p>工程-经济系统：资金投入（投资）—&gt;工程准备阶段的经济性（工程）—&gt;产品卖出（经济）【社会环境产生巨大的影响，是社会环境的很小的系统】</p><p>如何有效达成投资的目的：<strong>前期做好论证、评估、选择（工程经济的使命）</strong> ,中期做好监管；后期做好运营</p><p>工程经济学的概念：工程经济学是研究工程与经济相结合的发展规律的学科，<strong>以工程经济关系为起点</strong>，<strong>以工程-经济系统为客体</strong>，以实现工程中资源的合理配置和有效使用，<strong>提高工程有效性为目的</strong>。</p><p>工程师最基本的责任：分析成本，以达到真正的经济性，即赢得最大可能数量的货币，获得最佳财务效率</p><p>发展：1930年格兰特，以复利计算为基础，讨论判别因子（影响因素）和短期投资评价的重要性</p><p>工程经济分析的原则：</p><ol><li><p>经济效益原则（核心）：经济效益是一个比较的概念</p><p>绝对量的比较：净效益=效益-耗费</p><p>相对量的比较：（净）效益耗费比=（净）效益/耗费</p><p>效益分为有形和无形；直接和相关；宏观和微观等</p></li><li><p>可持续发展原则：首先要注意资源的可持续利用；其次应该注意项目和生态-社会系统的协调与优化；再次要在长远和全局角度来分析问题、研究问题。</p></li><li><p>资源合理配置和有效使用原则</p></li><li><p>可比性原则：需求、价格、时间可比</p></li><li><p>“有无对比”原则：分别对有项目和五项目两种状态进行对比</p></li><li><p>定量分析和定性分析相结合定量为主原则：以定量分析为重点</p></li><li><p>静态评价与动态评价相结合动态评价为主原则</p></li><li><p>利益和风险权衡原则</p></li></ol><p>边际收益：是指增加一单位产品的销售所增加的收益，即最后一单位产品的售出所取得的收益</p><p>资源的合理配置 具体举措有哪些：</p><p>工程-经济系统，工程经济与环境，工程经济学概念，工程经济学发展史，工程经济学方法和原则，课程思政重点</p><h4 id="资金的时间价值与现金流量"><a href="#资金的时间价值与现金流量" class="headerlink" title="资金的时间价值与现金流量"></a>资金的时间价值与现金流量</h4><p>社会生产再生产过程（类似工程-经济系统）</p><p>资金时间价值的影响因素：时间、本金、利率</p><p>边际收益就是指一个增加资金而使收益减少的一个点，相当于导数为0</p><p>社会资金时间价值(率)=边际项目的边际受益</p><p>资金时间价值（率）=资金的机会成本（选择$A$放弃其他方案而带来的损失的成本）+投资风险率+通货膨胀率</p><p>单利：$F=P * (1+n * i)$</p><p>复利：$F=P * (1+i)^n$</p><p>现金是价值风险最小的一种资产</p><p>现金流入和流出主要的鉴别依据是：目标价值政策</p><p>​    在微观层面，主要对于个人或企业，如果是亏损就是流出，否则为流入<br>​    在宏观层面，主要对于国家层面，如果对于社会福利做出正贡献，则是流入，否则是流出</p><p>​        税金在微观属于现金流出，宏观属于现金流入</p><p>NCF 净现金流量图三要素：<strong>大小、流向、时点</strong></p><p>​    坐标轴以上就是增加的钱，坐标轴以下就是减少的钱</p><p>在工程经济分析实务中，一般认为：建设项目的<strong>投资活动</strong>现金流发生在<strong>期初</strong>，建设项目的<strong>生产活动</strong>现金流发生在<strong>期末</strong><br>建设项目的计算期一般以其<strong>经济寿命期</strong>计算</p><p>由于资金时间价值的客观存在，存在于不同时点 的两笔或多笔绝对值不相等的现金流，当其具有 相同的经济价值时，称之为<strong>资金等值</strong>。最为明显的例子就是向银行存钱，最初的本金和取出来的钱为资金等值</p><p>将现金流由一种时点分布换算为另一种时点分布 的过程称之为资金的<strong>等值换算</strong></p><p>影响资金等值的因素有：资金的数额、资金发生的时点、期利率</p><p>现值$P$：建设初期0时坐标轴以上的资金价值</p><p>终值$F$：计算期期末的资金价值</p><p>年金$A$：连续地发生在每年年末且绝对数值相等的现金流序列</p><p><strong>六大公式</strong></p><p>1、一次支付终值公式</p><p>​        已知$P,i,n$，求$F$<br>$$<br>F=P * (1+i)^n=P(F/P,i,n)<br>$$<br>2、一次支付现值公式</p><p>​        已知$F,i,n$，求$P$<br>$$<br>P=F * (1+i)^{-n}=F(P/F,i,n)<br>$$<br>3、年金终值公式</p><p>​        已知$A,i,n$，求$F$</p><p>​        每次所产生的利息就是$A*(1+i)^{n-1}$<br>$$<br>F=\sum_{j=0}^{n}{A * (1+i)^{j-1}}=\frac{A * [(1+i)^n-1]}{i}=A(F/A,i,n)<br>$$<br>4、偿债基金公式</p><p>​        已知$F,i,n$，求$A$</p><p>​<br>$$<br>A=\frac{F * i}{(1+i)^n-1}=F(A/F,i,n)<br>$$<br>5、年金现值公式</p><p>​        已知$A,i,n$，求$P$</p><p>​        由于上面两个$F$的公式，联立得<br>$$<br>P * (1+i)^n= \frac{A * [(1+i)^n-1]}{i}<br>$$</p><p>$$<br>P=\frac{A * [(1+i)^n-1]}{i * (1+i)^n}=A(P/A,i,n)<br>$$<br>​        例题：小A从建设银行贷款60万付首套房按揭，贷款利率为4.9%，按年计息，贷款15年，等额本息还款，试计算每年应还银行本金，利息分别是多少。<br>$$<br>F=P(F/P,i,n)=P * (1+i)^n = 60 * (1+0.049)^{10} = 122.97(万元)<br>$$</p><p>$$<br>F=A(F/A,i,n)=\frac{A * [(1+i)^n-1]}{i}<br>$$</p><p>联立上两式，可以得到$A$<br>$$<br>A=\frac{F * i}{(1+i)^n-1}=\frac{122.97 * 0.049}{1.049^{10}-1}=5.74(万元)<br>$$<br>第一年利息：$60 * 0.049=2.94(万元)$</p><p>第一年本金：$5.74-2.94=2.80(万元)$</p><p>第二年利息：$(60-2.80) * 0.049 = 2.80(万元)$</p><p>第二年本金：$5.74-2.80=2.94(万元)$</p><p>第三年利息：$(60-2.80-2.94) * 0.049 = 2.66(万元)$</p><p>第三年本金：$5.74-2.66=3.08(万元)$</p><p>…</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">double</span> F,A,i,P;</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">puts</span>(<span class="string">"请输入贷款金额,利率,年份:(单位:万元)"</span>);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%lf %lf %d"</span>,&amp;P,&amp;i,&amp;n);</span><br><span class="line">    <span class="keyword">double</span> tmp=<span class="number">1.0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>; j&lt;n; j++) tmp*=(<span class="number">1.0</span>+i);</span><br><span class="line">    F=P*tmp;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"F=%.6f(万元)\n"</span>,F);</span><br><span class="line">    A=F*i/(tmp<span class="number">-1</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"A=%.6f(万元)\n"</span>,A);</span><br><span class="line">    <span class="keyword">double</span> pre=P;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>; j&lt;=n; j++)&#123;</span><br><span class="line">        <span class="keyword">double</span> l=pre*i;</span><br><span class="line">        <span class="keyword">double</span> x=A-l;</span><br><span class="line">        pre-=x;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"第%d年利息:%.6f(万元)\t第%d年本金:%.6f(万元)\n"</span>,j,l,j,x);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><ul><li><strong>Input</strong></li></ul><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">60</span> <span class="number">0.049</span> <span class="number">15</span></span><br></pre></td></tr></table></figure><ul><li><strong>Output</strong></li></ul><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">请输入贷款金额,利率,年份:(单位:万元)</span><br><span class="line"><span class="number">60</span> <span class="number">0.049</span> <span class="number">15</span></span><br><span class="line">F=<span class="number">122.965583</span>(万元)</span><br><span class="line">A=<span class="number">5.741530</span>(万元)</span><br><span class="line">第<span class="number">1</span>年利息:<span class="number">2.940000</span>(万元)        第<span class="number">1</span>年本金:<span class="number">2.801530</span>(万元)</span><br><span class="line">第<span class="number">2</span>年利息:<span class="number">2.802725</span>(万元)        第<span class="number">2</span>年本金:<span class="number">2.938805</span>(万元)</span><br><span class="line">第<span class="number">3</span>年利息:<span class="number">2.658724</span>(万元)        第<span class="number">3</span>年本金:<span class="number">3.082807</span>(万元)</span><br><span class="line">第<span class="number">4</span>年利息:<span class="number">2.507666</span>(万元)        第<span class="number">4</span>年本金:<span class="number">3.233864</span>(万元)</span><br><span class="line">第<span class="number">5</span>年利息:<span class="number">2.349207</span>(万元)        第<span class="number">5</span>年本金:<span class="number">3.392324</span>(万元)</span><br><span class="line">第<span class="number">6</span>年利息:<span class="number">2.182983</span>(万元)        第<span class="number">6</span>年本金:<span class="number">3.558548</span>(万元)</span><br><span class="line">第<span class="number">7</span>年利息:<span class="number">2.008614</span>(万元)        第<span class="number">7</span>年本金:<span class="number">3.732917</span>(万元)</span><br><span class="line">第<span class="number">8</span>年利息:<span class="number">1.825701</span>(万元)        第<span class="number">8</span>年本金:<span class="number">3.915829</span>(万元)</span><br><span class="line">第<span class="number">9</span>年利息:<span class="number">1.633825</span>(万元)        第<span class="number">9</span>年本金:<span class="number">4.107705</span>(万元)</span><br><span class="line">第<span class="number">10</span>年利息:<span class="number">1.432548</span>(万元)       第<span class="number">10</span>年本金:<span class="number">4.308983</span>(万元)</span><br><span class="line">第<span class="number">11</span>年利息:<span class="number">1.221408</span>(万元)       第<span class="number">11</span>年本金:<span class="number">4.520123</span>(万元)</span><br><span class="line">第<span class="number">12</span>年利息:<span class="number">0.999922</span>(万元)       第<span class="number">12</span>年本金:<span class="number">4.741609</span>(万元)</span><br><span class="line">第<span class="number">13</span>年利息:<span class="number">0.767583</span>(万元)       第<span class="number">13</span>年本金:<span class="number">4.973948</span>(万元)</span><br><span class="line">第<span class="number">14</span>年利息:<span class="number">0.523859</span>(万元)       第<span class="number">14</span>年本金:<span class="number">5.217671</span>(万元)</span><br><span class="line">第<span class="number">15</span>年利息:<span class="number">0.268194</span>(万元)       第<span class="number">15</span>年本金:<span class="number">5.473337</span>(万元)</span><br></pre></td></tr></table></figure><p>6、资金回收公式</p><p>​        已知$P,i,n$，求$A$<br>$$<br>A=\frac {P * i * (1+i)^n} {(1+i)^n-1} =A(A/P,i,n)<br>$$</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;工程经济学笔记&lt;/p&gt;
    
    </summary>
    
      <category term="课堂笔记" scheme="http://yoursite.com/categories/%E8%AF%BE%E5%A0%82%E7%AC%94%E8%AE%B0/"/>
    
    
  </entry>
  
  <entry>
    <title>人工智能</title>
    <link href="http://yoursite.com/2020/02/26/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD/"/>
    <id>http://yoursite.com/2020/02/26/人工智能/</id>
    <published>2020-02-26T06:36:24.557Z</published>
    <updated>2020-02-28T09:08:28.407Z</updated>
    
    <content type="html"><![CDATA[<p>人工智能学习笔记</p><a id="more"></a><h4 id="第一讲-人工智能概述"><a href="#第一讲-人工智能概述" class="headerlink" title="第一讲 人工智能概述"></a>第一讲 人工智能概述</h4><h5 id="1-1-简介"><a href="#1-1-简介" class="headerlink" title="1.1 简介"></a>1.1 简介</h5><p>1956年正式提出，被誉为20世纪三大科学技术成就（空间技术、原子能技术、人工智能技术）</p><h5 id="1-2-人工智能的概念"><a href="#1-2-人工智能的概念" class="headerlink" title="1.2 人工智能的概念"></a>1.2 人工智能的概念</h5><p>对于智能到现在为止暂时没有一个准确的定义，只有一些主要流派。计算机人工智能暂时定义为<strong>智能是知识与智力的总和</strong>。</p><p>智能的特征：</p><p>1、感知能力（感知外部世界的能力，主要是视觉和听觉）</p><p>2、记忆与思维能力（存储与对于记忆信息的处理）</p><p>3、学习能力（分自主和无意识的学习）</p><p>4、行为能力（对于信息的输出）</p><h5 id="1-3-人工智能的发展简史"><a href="#1-3-人工智能的发展简史" class="headerlink" title="1.3 人工智能的发展简史"></a>1.3 人工智能的发展简史</h5><p>提出(-1956年)-&gt;形成(1956-1969)-&gt;发展(1970-)</p><h5 id="1-4-人工智能研究的基本内容"><a href="#1-4-人工智能研究的基本内容" class="headerlink" title="1.4 人工智能研究的基本内容"></a>1.4 人工智能研究的基本内容</h5><p>机器学习：监督学习、强化学习、非监督学习</p><h4 id="第二讲-一阶谓词逻辑知识表示法"><a href="#第二讲-一阶谓词逻辑知识表示法" class="headerlink" title="第二讲 一阶谓词逻辑知识表示法"></a>第二讲 一阶谓词逻辑知识表示法</h4><h5 id="2-1-命题逻辑"><a href="#2-1-命题逻辑" class="headerlink" title="2.1 命题逻辑"></a>2.1 命题逻辑</h5><p>$$<br>逻辑<br>\begin{cases}<br>经典逻辑(二值逻辑)<br>\begin{cases}<br>经典命题逻辑<br>\newline<br>一阶谓词逻辑<br>\end{cases}<br>\newline<br>非经典逻辑<br>\begin{cases}<br>三值逻辑<br>\newline<br>多值逻辑<br>\newline<br>模糊逻辑<br>\end{cases}<br>\end{cases}<br>$$</p><p>命题：一个<strong>非真即假</strong>的<strong>陈述句</strong></p><h5 id="2-2-谓词逻辑"><a href="#2-2-谓词逻辑" class="headerlink" title="2.2 谓词逻辑"></a>2.2 谓词逻辑</h5><h6 id="谓词"><a href="#谓词" class="headerlink" title="谓词"></a>谓词</h6><p>一般形式：$P(X_1,X_2,…,X_N)$</p><p>个体$P(X_1,X_2,…,X_N)$：某个独立存在的事物或者某个抽象的概念。</p><p>谓词名$P$：刻画个体的性质、状态或个体间的关系。</p><p>个体是一个常量；一个或者一组指定的个体，一元谓词、二元谓词…</p><p>个体也可以是一个变量；此时真假可能不确定</p><p>个体还可以是函数；一个个体到另一个个体的映射</p><p>个体可以是谓词；二阶谓词等</p><h6 id="谓词公式"><a href="#谓词公式" class="headerlink" title="谓词公式"></a>谓词公式</h6><p>非($!$)<del>(markdown好像没有非的符号)</del>；或($\vee$)；与($\wedge$)；蕴含，表如果…那么…($\rightarrow $)；等价($\leftrightarrow$)</p><p>谓词逻辑真值表<del>(或且非就不列了)</del></p><table><thead><tr><th align="center">$P$</th><th align="center">$Q$</th><th align="center">$P \rightarrow Q$ （真假即假）</th><th align="center">$P \leftrightarrow Q$ （相当于同或）</th></tr></thead><tbody><tr><td align="center">$T$</td><td align="center">$T$</td><td align="center">$T$</td><td align="center">$T$</td></tr><tr><td align="center">$T$</td><td align="center">$F$</td><td align="center">$F$</td><td align="center">$F$</td></tr><tr><td align="center">$F$</td><td align="center">$T$</td><td align="center">$T$</td><td align="center">$F$</td></tr><tr><td align="center">$F$</td><td align="center">$F$</td><td align="center">$T$</td><td align="center">$T$</td></tr></tbody></table><p>全称量词$\forall$；存在量词$\exists$</p><p>全称量词和存在量词的次序可能会影响命题的真假性</p><p>连接词的优先级从高到低($!\ &gt;\ \wedge \ &gt;\  \vee \  &gt; \ \rightarrow \  &gt; \ \leftrightarrow $)</p><p>量词的辖域：位于两次后面的单个谓词或者用括弧括起来的谓词公式（一般用全称量词和存在量词表示）</p><p>约束变量与自由变元：辖域内的变量就是约束变元，其他就是自由变元，但是这个是相对的。</p><h6 id="谓词公式的性质"><a href="#谓词公式的性质" class="headerlink" title="谓词公式的性质"></a>谓词公式的性质</h6><p>假言推理：$P, P \rightarrow Q \Rightarrow Q$</p><p>拒取式推理：$!Q , P \rightarrow Q \Rightarrow !P$</p><p>假言三段论：$A \rightarrow B , B \rightarrow C \Rightarrow A \rightarrow C$</p><p>反证法：正难则反</p><h5 id="2-3-一阶谓词逻辑知识表示法"><a href="#2-3-一阶谓词逻辑知识表示法" class="headerlink" title="2.3 一阶谓词逻辑知识表示法"></a>2.3 一阶谓词逻辑知识表示法</h5><h6 id="一阶谓词逻辑知识表示法"><a href="#一阶谓词逻辑知识表示法" class="headerlink" title="一阶谓词逻辑知识表示法"></a>一阶谓词逻辑知识表示法</h6><p>1、定义谓词及个体</p><p>2、变元赋值</p><p>3、用连接词连接各个谓词，形成谓词公式</p><h6 id="一阶谓词逻辑知识表示法特点"><a href="#一阶谓词逻辑知识表示法特点" class="headerlink" title="一阶谓词逻辑知识表示法特点"></a>一阶谓词逻辑知识表示法特点</h6><p>优点：自然性；精确性；严密性；容易实现</p><p>缺点：不能表示不确定的知识；组合爆炸；效率低</p><p>应用：自动问答系统；机器人行动规划系统；机器博弈系统；问题求解系统</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;人工智能学习笔记&lt;/p&gt;
    
    </summary>
    
      <category term="课堂笔记" scheme="http://yoursite.com/categories/%E8%AF%BE%E5%A0%82%E7%AC%94%E8%AE%B0/"/>
    
    
  </entry>
  
  <entry>
    <title>算法</title>
    <link href="http://yoursite.com/2020/02/26/%E7%AE%97%E6%B3%95/"/>
    <id>http://yoursite.com/2020/02/26/算法/</id>
    <published>2020-02-26T06:36:24.554Z</published>
    <updated>2020-02-28T09:10:24.535Z</updated>
    
    <content type="html"><![CDATA[<p>算法笔记</p><a id="more"></a><h4 id="绪论"><a href="#绪论" class="headerlink" title="绪论"></a>绪论</h4><h5 id="算法和过程"><a href="#算法和过程" class="headerlink" title="算法和过程"></a>算法和过程</h5><p>过程(Procedure)与算法(Algorithm)是解决问题的一种方法的逐步描述：</p><p>相同点：由若干条指令组成的有穷序列；每条指令的意义都是确定的；具有零个或多个输入；产生若干个输出。</p><p>不同点：算法要求其执行时间是有限的(终止性)，过程的执行时间可能是限的</p><p>算法的复杂性取决于：求解问题的规模；具体的输入数据；算法本身的设计。</p><p>时间复杂性$T(N,I)=\sum_{i=1}^{k}{t_i * e_i(N,I)}$</p><p>其中$t_i$为执行抽象计算机的第$i$种指令一次所需时间，这里假定抽象计算机共有$k$种指令。</p><p>$e_i(N,I)$为经过统计后得到的执行抽象计算机的第$i$种指令的次数。</p><h5 id="常见符号及概念"><a href="#常见符号及概念" class="headerlink" title="常见符号及概念"></a>常见符号及概念</h5><p>上界记号$O$：如果存在整的常数$C$和自然数$N_0$，使得当$N \ge N_0$时有$f(N) \le C*g(N)$，则$f(N)$有上界函数$g(N)$，记为$f(N)=O(g(N))$。</p><p>下界记号$\Omega$：如果存在整的常数$C$和自然数$N_0$，使得当$N \ge N_0$时有$f(N) \ge C*g(N)$，则$f(N)$有下界函数$g(N)$，记为$f(N)=\Omega(g(N))$。</p><p>同阶记号$\Theta$：$f(N)=\Theta(g(N))$表示$f(N)$和$g(N)$同阶。</p><p>低阶记号$o$：$f(N) = o(g(N))$表示$f(N)$比$g(N)$阶低。</p><p>五种确定性算法，都使用递归的思想：</p><p>分支法，动态规划法(dp)，贪心法，回溯法，分支界限法。</p><p>算法所具有的五大特性：有穷性，确定性、输入、输出、可行性</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;算法笔记&lt;/p&gt;
    
    </summary>
    
      <category term="课堂笔记" scheme="http://yoursite.com/categories/%E8%AF%BE%E5%A0%82%E7%AC%94%E8%AE%B0/"/>
    
    
  </entry>
  
  <entry>
    <title>计算机系统结构</title>
    <link href="http://yoursite.com/2019/09/08/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%B3%BB%E7%BB%9F%E7%BB%93%E6%9E%84/"/>
    <id>http://yoursite.com/2019/09/08/计算机系统结构/</id>
    <published>2019-09-08T03:06:09.017Z</published>
    <updated>2019-09-25T14:06:38.537Z</updated>
    
    <content type="html"><![CDATA[<p>yqw还是依旧开口脆</p><a id="more"></a><h2 id="基本概念"><a href="#基本概念" class="headerlink" title="基本概念"></a>基本概念</h2><h3 id="层次结构"><a href="#层次结构" class="headerlink" title="层次结构"></a>层次结构</h3><p>共分为7个层次，第0级和第1级由硬件实现，第2级至第6级由软件实现，称为虚拟计算机。<br>从科学领域来划分：<br>第0级和第1级属于“计算机组成与系统结构”；<br>第2级至第5级是系统软件；<br>第6级是应用软件。<br>它们之间有交叉，如第3级必须依赖第4级和第5级来实现。</p><table><thead><tr><th></th><th></th></tr></thead><tbody><tr><td>第6级：应用程序</td><td>应用软件</td></tr><tr><td>第5级：高级语言</td><td>系统软件</td></tr><tr><td>第4级：汇编语言</td><td>系统软件</td></tr><tr><td>第3级：操作系统</td><td>系统软件</td></tr><tr><td>第2级：机器语言</td><td>软硬件分界</td></tr><tr><td>第1级：微程序</td><td>硬件</td></tr><tr><td>第0级：硬联逻辑</td><td>硬件</td></tr></tbody></table><h3 id="透明性"><a href="#透明性" class="headerlink" title="透明性"></a>透明性</h3><p>本来存在的事物或属性，从某种角度看似乎不存在。</p><h3 id="计算机系统的分类"><a href="#计算机系统的分类" class="headerlink" title="计算机系统的分类"></a>计算机系统的分类</h3><h4 id="按处理机性能分类"><a href="#按处理机性能分类" class="headerlink" title="按处理机性能分类:"></a>按处理机性能分类:</h4><p>按大小、用途、数据类型、处理机个数和种数、所用的器件。</p><h4 id="佛林分类法"><a href="#佛林分类法" class="headerlink" title="佛林分类法"></a>佛林分类法</h4><p>按照指令流和数据流的多倍特征进行分类，<br>用指令流：机器执行的指令序列；<br>数据流：由指令流调用的数据序列；<br>多倍性（multiplicity):在系统性能瓶颈部件上同时处于同一执行阶段的指令或数据的最大可能个数。<br>分成 4 类：<br>单指令流单数据流SISD (Single Instruction Single Datastream)<br>单指令流多数据流SIMD Single Instruction Multiple Datastream)<br>多指令流单数据流MISD(Multiple Instruction Single Datastream)<br>多指令流多数据流MIMD(Multiple Instruction Multiple Datastream)</p><h4 id="冯泽云分类法"><a href="#冯泽云分类法" class="headerlink" title="冯泽云分类法"></a>冯泽云分类法</h4><p>用最大并行度计算机系统进行分类<br>单位时间内能处理的最大二进制位数</p><p>同时处理的字宽为$n$，位宽$m$，则<br>最大并行度定义为：$P_m=m * n$</p><p>平均并行度：假使每个时钟周期$t_i$内能同时处理的二进位$B_i$，则n个时钟周期平均并行度为：<br>$$<br>P_n = \frac {\sum_{i=1}^{n} B_i * t_i}{n}​<br>$$<br>表示方法：处理机名$(m,n)$</p><h4 id="汉德勒分类法"><a href="#汉德勒分类法" class="headerlink" title="汉德勒分类法"></a>汉德勒分类法</h4><p>程序级$k$：程序控制部件(PCU)的个数。<br>操作级$d$：算术逻辑部件（ALU）或处理部件（PU）的个数。<br>逻辑级$w$：每个算术逻辑部件包含的逻辑线路（ELC）的套数。</p><p>表示方法：<br>$t ( 系统型号 ) = ( k,d,w )$</p><p>对于流水线来说，$t(系统型号) = (k * {k}’ , d * {d}’ , w * {w}’ )$</p><p>Cray1有1个CPU，12个相当于ALU或PE的处理部件，最多8级流水线，字长为64位，可以实现$1-14$位流水线，可以表示为：<code>t(Cray1)=(1 , 12×8 , 64(1-14))</code>。</p><h3 id="Amdahl定律"><a href="#Amdahl定律" class="headerlink" title="Amdahl定律"></a>Amdahl定律</h3><p>$$<br>可改进部分的比例: Fe=\frac{可改进部分的执行时间}{改进前整个任务的执行时间}<br>$$</p><p>$$<br>改进部分的加速比: Se=\frac{改进前改进部分的执行时间}{改进后改进部分的执行时间}<br>$$</p><p>改进后整个任务的执行速度：$T_n =T_0 * (1-Fe+\frac{Fe}{Se}) $</p><p>改进后整个任务的加速比：$S_n = \frac{T_0}{T_n} = \frac{1}{(1-Fe)+\frac{Fe}{Se}}$</p><h3 id="改进性能的主要途径"><a href="#改进性能的主要途径" class="headerlink" title="改进性能的主要途径"></a>改进性能的主要途径</h3><h4 id="面向目标代码改进"><a href="#面向目标代码改进" class="headerlink" title="面向目标代码改进"></a>面向目标代码改进</h4><p>根据计算结果改进（硬件乘除）、据统计数据改进指令功能（有目的改进）、增加运算型指令的功能（函数运算指令）。</p><h4 id="面向高级语言和编译程序改进"><a href="#面向高级语言和编译程序改进" class="headerlink" title="面向高级语言和编译程序改进"></a>面向高级语言和编译程序改进</h4><p>增强对高级语言和便宜程序支持的指令功能<del>花更少的成本有效率办事</del>。</p><h4 id="面向操作系统改进"><a href="#面向操作系统改进" class="headerlink" title="面向操作系统改进"></a>面向操作系统改进</h4><p> 系统结构设计要规整，消除例外情况。比如有$A-B$，就要有$B-A$，寄存器量的设置……</p><h3 id="计算机系统设计方法"><a href="#计算机系统设计方法" class="headerlink" title="计算机系统设计方法"></a>计算机系统设计方法</h3><p>由上向下：适合专用计算机的设计，价格要求高</p><p>由下向上：早期计算机设计，容易使软硬件的脱节</p><p>中间开始：软硬件同时设计</p><h3 id="计算机系统的评价标准"><a href="#计算机系统的评价标准" class="headerlink" title="计算机系统的评价标准"></a>计算机系统的评价标准</h3><h4 id="时钟频率"><a href="#时钟频率" class="headerlink" title="时钟频率"></a>时钟频率</h4><p>运行速度与Cache、内存大小、IO、程序等均有关。</p><h4 id="指令执行速度（算数平均）"><a href="#指令执行速度（算数平均）" class="headerlink" title="指令执行速度（算数平均）"></a>指令执行速度（算数平均）</h4><p>MIPS（百万次每秒）, GIPS, TIPS</p><p>最后求出来要带单位！写成$x \ MIPS$或者写$x*10^6$<br>$$<br>MIPS = \frac{Fz}{CPI} = IPC * Fz<br>$$<br>$Fz$为处理机工作主频<br>$CPI$为每条指令所需的平均时钟周期数<br>$IPC$为每个时钟周期平均执行的指令条数(流水线)</p><h4 id="等效指令速度（加权平均）：吉普森（Gibson-法"><a href="#等效指令速度（加权平均）：吉普森（Gibson-法" class="headerlink" title="等效指令速度（加权平均）：吉普森（Gibson)法"></a>等效指令速度（加权平均）：吉普森（Gibson)法</h4><p>等效指令执行时间$T = \sum_{i=1}^{n} {Time}_i * {Weight}_i$</p><p>等效指令速度$MIPS = \frac{1}{\sum_{i=1}^{n} {Time}_i * {Weight}_i}$</p><p>等效CPI $CPI = \sum_{i=1}^{n} {CPI}_i * {Weight}_i$</p><p>Gibson法：（一般）加减法50%，乘法15%，除法5%，程序控制15%，其它15%。</p><h3 id="冯·诺依曼结构"><a href="#冯·诺依曼结构" class="headerlink" title="冯·诺依曼结构"></a>冯·诺依曼结构</h3><h4 id="特点"><a href="#特点" class="headerlink" title="特点"></a>特点</h4><p>存储程序、运算器为中心、集成控制</p><p>将指令放到<strong>存储器</strong>中，然后执行</p><h4 id="变与不变"><a href="#变与不变" class="headerlink" title="变与不变"></a>变与不变</h4><p>不变的：存储程序。改变的：存储器为中心，总线结构，分散控制</p><h3 id="软件的可移植性"><a href="#软件的可移植性" class="headerlink" title="软件的可移植性"></a>软件的可移植性</h3><h4 id="采用系列机"><a href="#采用系列机" class="headerlink" title="采用系列机"></a>采用系列机</h4><p>指有相同系统结构的机器，这就涉及到兼容性问题：向后兼容；向前兼容； 向上兼容； 向下兼容。</p><p>对于设计：向后必须兼容，向上兼容尽量满足，剩下不做要求。</p><h4 id="采用模拟与仿真"><a href="#采用模拟与仿真" class="headerlink" title="采用模拟与仿真"></a>采用模拟与仿真</h4><p>模拟：在一台现有的计算机上实现另一台计算机的指令系统</p><p>仿真：用微程序直接解释执行另一种机器指令系统</p><h4 id="采用统一高级语言方法"><a href="#采用统一高级语言方法" class="headerlink" title="采用统一高级语言方法"></a>采用统一高级语言方法</h4><h3 id="课后习题"><a href="#课后习题" class="headerlink" title="课后习题"></a>课后习题</h3><h4 id="1-8"><a href="#1-8" class="headerlink" title="1.8"></a>1.8</h4><p>从机器（汇编）语言程序员看，以下哪些是透明的？<br>指令地址寄存器；指令缓冲器；时标发生器；条件寄存器；乘法器；主存地址寄存器；磁盘外设；先行进位链；移位器；通用寄存器；中断字寄存器。</p><p>指令缓冲器，时标发生器，乘法器，主存地址寄存器，先行进位链，移位器</p><h4 id="1-9"><a href="#1-9" class="headerlink" title="1.9"></a>1.9</h4><p>哪些对系统程序员是透明的？哪些对应用程序员是透明的？</p><p>系列机各档不同的数据通路宽度；虚拟存储器；Cache存储器；程序状态字；“启动I/O”指令；“执行”指令；指令缓冲寄存器。</p><p>对系统程序员透明的有：虚拟存储器；Cache存储器；程序状态字；<br>对应用程序员透明的有：系列机各档不同的数据通路宽度；“启动I/O”指令；“执行”指令；指令缓冲寄存器。</p><p>系列机各档不同数据通路宽度、Cache存储器、指令缓冲寄存器属计算机组成，对系统程序员和应用程序员都是透明的。虚拟存储器、程序状态字、“启动I/O”指令，对系统程序员是不透明的，而对应用程序员却是透明的。</p><p>“执行”指令则对系统程序员和应用程序员都是不透明的。</p><h4 id="1-11"><a href="#1-11" class="headerlink" title="1.11"></a>1.11</h4><p>想在系列机中发展一种新型号机器，你认为下列哪些设想是可以考虑的，哪些则不行的？为什么？<br>（1）新增加字符数据类型和若干条字符处理指令，以支持事务处理程序的编译。<br>（2）为增强中断处理功能，将中断分级由原来的4级增加到5级，并重新调整中断响应的优先次序。<br>（3）在CPU和主存之间增设Cache存储器，以克服因主存访问速率过低而造成的系统性能瓶颈。<br>（4）为解决计算误差较大，将机器中浮点数的下溢处理方法由原来的恒置“1”法，改为用ROM存取下溢处理结果的查表舍入法。<br>（5）为增加寻址灵活性和减少平均指令字长，将原等长操作码指令改为有3类不同码长的扩展操作码；将源操作数寻址方式由操作码指明改成如VAX-11那种设寻址方式位字段指明。<br>（6）将CPU与主存间的数据通路宽度由16位扩展成32位，以加快主机内部信息的传送。<br>（7）为减少公用总路线的使用冲突，将单总线改为双总线。<br>（8）把原0号通用寄存器改作堆栈指示器。</p><p>答: (2)、(5)、(8)不可以，其它都可以。</p><p>对于（2）对系列机可以增加新功能,但是不能改变原来的功能。</p><p>对于（5）改变了指令的格式和功能</p><p>对于（8）导致0号寄存器无法使用</p><h4 id="1-17"><a href="#1-17" class="headerlink" title="1.17"></a>1.17</h4><p>假设高速缓存Cache 工作速度为主存的5倍，且Cache被访问命中的概率为90%，则采用Cache后，能使整个存储系统获得多高的加速比？</p><p>$Fe = 0.9\ , \ Se=5$ 所以： $S_n = \frac{1}{1-Fe+\frac{Fe}{Se}} = \frac{1}{1-0.9+\frac{0.9}{5}} = \frac{25}{7}$</p><h4 id="1-19"><a href="#1-19" class="headerlink" title="1.19"></a>1.19</h4><p>用一台40MHz处理机执行标准测试程序，它含的混合指令数和相应所需的时钟周期数如下：</p><p>指令类型        指令数       时钟周期数</p><p>整数运算        45000            1</p><p>数据传送        32000            2</p><p>浮点            15000            2 </p><p>控制传送         8000            2</p><p>求有效CPI、MIPS速率和程序的执行时间。</p><p>$IC = \sum_{i=1}^{4}I_i = 45000+32000+15000+8000=10^5$</p><p>$有效CPI = \frac{\sum_{i=1}^{4}CPI_i \times I_i}{IC} = 1.55$</p><p>$MIPS = \frac{40}{1.55} = 35.81MIPS$</p><p>$T_{有效} = \frac{IC}{MIPS \times 10^6} = 0.003875\ s$</p><h4 id="1-21"><a href="#1-21" class="headerlink" title="1.21"></a>1.21</h4><p>假设在一台$40MHz$的处理及上运行$200000$条指令的目标代码，程序主要由四种指令组成。根据程序跟踪实验结果，一直指令混合比和每种指令所需的指令数如下：</p><table><thead><tr><th>指令类型</th><th>$ CPI $</th><th>指令混合比</th></tr></thead><tbody><tr><td>算数和逻辑</td><td>1</td><td>60%​</td></tr><tr><td>高速缓存命中的加载/存储</td><td>2</td><td>18%</td></tr><tr><td>转移</td><td>4</td><td>12%</td></tr><tr><td>告诉缓存确实的存储器访问</td><td>8</td><td>10%</td></tr></tbody></table><p>平均$CPI = \sum_{i=1}^{4} CPI_i \times 指令混合比 = 2.24$</p><p>$MIPS = \frac{40}{2.24} = 17.86 \ MIPS$ </p><h4 id="1-23"><a href="#1-23" class="headerlink" title="1.23"></a>1.23</h4><p>根据下面计算算数平均、几何平均、调和平均</p><table><thead><tr><th>程序名</th><th>速率($MFLOPS$)</th></tr></thead><tbody><tr><td>$GCC$</td><td>$10.7$</td></tr><tr><td>$Espress0$</td><td>$8.9$</td></tr><tr><td>$Spice2g6$</td><td>$8.3$</td></tr><tr><td>$DODUC$</td><td>$5.0 $</td></tr><tr><td>$NASA7$</td><td>$8.7 $</td></tr><tr><td>$Li$</td><td>$9.0$</td></tr><tr><td>$Eqntott$</td><td>$9.7$</td></tr><tr><td>$Matrix300$</td><td>$11.1$</td></tr><tr><td>$FPPPP$</td><td>$7.8$</td></tr><tr><td>$TOMCATV$</td><td>$5.6$</td></tr></tbody></table><p>算数平均：$A_m = \frac{1}{n} * \sum_{i=1}^{n} R_i = 8.48 \ MFLOPS$</p><p>几何平均：$G_m = \sqrt[n]{\prod_{i=1}^{n} R_i} = 8.247 \ MFLOPS$</p><p>调和平均：$H_m = \frac{n}{\sum_{i=1}^{n} \frac{1}{R_i}} = 7.985 \ MFLOPS$</p><hr><h2 id="指令系统"><a href="#指令系统" class="headerlink" title="指令系统"></a>指令系统</h2><h3 id="数据表示"><a href="#数据表示" class="headerlink" title="数据表示"></a>数据表示</h3><p>数据表示是指计算机硬件能够直接认识，可以被指令系统直接调用的那些数据类型。</p><h4 id="数据类型"><a href="#数据类型" class="headerlink" title="数据类型"></a>数据类型</h4><p>文件、图、表、树、链表、栈、向量、队列、阵列、串、实数、整数、布尔数、字符等。</p><p>用<strong>变址寻址</strong>方式来支持向量数据表示，用<strong>字节编址</strong>支持字符串数据表示</p><p>普通需要支持向量运算，则在设计寻址方式时，一定要设置<strong>变址和自动变址</strong>寻址方式。</p><h4 id="浮点数据"><a href="#浮点数据" class="headerlink" title="浮点数据"></a>浮点数据</h4><p>$$<br>N = m \times r_m^e<br>$$</p><h5 id="两个数值"><a href="#两个数值" class="headerlink" title="两个数值"></a>两个数值</h5><p>尾数$m$：数制(小数或整数)和码制(原码或补码)。<br>阶码$e$:     整码，移码(偏码、增码、余码)或补码。（移码就是补码的符号位取反）</p><h5 id="两个基值"><a href="#两个基值" class="headerlink" title="两个基值"></a>两个基值</h5><p>$r_m$：尾数的基值，二进制，八进制…</p><p>$r_e$：阶码的基值，一般为$2$。</p><h5 id="两个字长"><a href="#两个字长" class="headerlink" title="两个字长"></a>两个字长</h5><p>长度和物理位置，均不包含符号位</p><p>尾数的长度$p$：尾数部分按照基值计算的长度，比如说$10_{(10)} = 1010_{(2)}$，$p$分别为$2$和$4$</p><p>阶码长度$q$ :  阶码部分的二进制位数</p><h5 id="阶码"><a href="#阶码" class="headerlink" title="阶码"></a>阶码</h5><p>阶码就是补码的符号位取反</p><h5 id="表数范围"><a href="#表数范围" class="headerlink" title="表数范围"></a>表数范围</h5><p>尾数用原码、纯小数时规格化浮点数的表数范围</p><table><thead><tr><th>表数范围</th><th>规格化尾数</th><th>阶码</th><th>规格化浮点数</th></tr></thead><tbody><tr><td>$N_{max}$最大正数</td><td>$1 - r_m^{-p}$</td><td>$r_e^q-1$</td><td>$(1-r_m^{-p})\times r_m^{r_e^{q}-1}$</td></tr><tr><td>$N_{min}$最小正数</td><td>$r_m^{-1}$</td><td>\</td><td>$r_m^{-1}\times r_m^{-r_e^q}$</td></tr><tr><td>$-N_{max}$最大负数</td><td>$-r_m^{-1}$</td><td>\</td><td>$-r_m^{-1}\times r_m^{-r_e^q}$</td></tr><tr><td>$-N_{min}$最小负数</td><td>$-(1-r_m^{-p})$</td><td>$-r_e^q$</td><td>$-(1-r_m^{-p}) \times r_m^{r_e^q-1}$</td></tr></tbody></table><p>尾数用补码、纯小数时规格化浮点数的表数范围</p><table><thead><tr><th>表数范围</th><th>规格化尾数</th><th>阶码</th><th>规格化浮点数</th></tr></thead><tbody><tr><td>$N_{max}$最大正数</td><td>$1 - r_m^{-p}$</td><td>$r_e^q-1$</td><td>$(1-r_m^{-p})\times r_m^{r_e^{q}-1}$</td></tr><tr><td>$N_{min}$最小正数</td><td>$r_m^{-1}$</td><td>\</td><td>$r_m^{-1}\times r_m^{-r_e^q}$</td></tr><tr><td>$-N_{max}$最大负数</td><td>$-(r_m^{-1}+r_m^{-p})$</td><td>\</td><td>$-(r_m^{-1}+r_m^{-p})\times r_m^{-r_e^q}$</td></tr><tr><td>$-N_{min}$最小负数</td><td>$-1$</td><td>$-r_e^q$</td><td>$-r_m^{r_e^q-1}$</td></tr></tbody></table><h5 id="IEEE754浮点数标准"><a href="#IEEE754浮点数标准" class="headerlink" title="IEEE754浮点数标准"></a>IEEE754浮点数标准</h5><p>32位如下：</p><table><thead><tr><th>符号$S$</th><th>阶码$e$</th><th>尾数数值$m$</th></tr></thead><tbody><tr><td>$1$位</td><td>$8$位</td><td>$23$位</td></tr></tbody></table><p>阶码用移码-127表示，即阶码的0-255分别表示阶码的真值为-127~128。尾数用原码、小数，1位符号位、23位小数和<strong>1位隐藏位</strong>的整数共25位表示。尾数和阶码的基值都是2。64位双精度浮点数，阶码用11位移移码表示</p><h5 id="浮点数的误差"><a href="#浮点数的误差" class="headerlink" title="浮点数的误差"></a>浮点数的误差</h5><p>产生误差的根本原因是浮点数的不连续性。</p><p>误差产生的直接原因有两个：<br>（1）两个浮点数都在浮点集内，而运算结果却可能不在这个浮点集内。<br>（2）数据从十进制转化为2、4、8、16进制，产生误差。</p><p>浮点数的精度：$\delta _{(r_m,p)} = \frac{1}{2} \times r_m ^{-(p-1)} $</p><h5 id="浮点数的表数效率"><a href="#浮点数的表数效率" class="headerlink" title="浮点数的表数效率"></a>浮点数的表数效率</h5><p>$\eta (r_m) = \frac{r_m-1}{r_m}$，$r_m$为尾数基值。</p><p>$\eta = \frac{可表示的规格化浮点数个数}{全部浮点数个数}$</p><h5 id="浮点数格式设计"><a href="#浮点数格式设计" class="headerlink" title="浮点数格式设计"></a>浮点数格式设计</h5><p>在字长确定的情况下，如何选择尾数基值$r_m$，使表数范围最大、表数精度和表数效率最高。</p><p>结论1：在字长和表数范围一定时，尾数基值$r_m$取2或4，浮点数具有最高的表精度。</p><p>结论2：在字长和表数精度一定时，尾数基值$r_m$取2或4，浮点数具有最大的表示数范围。</p><p>推论：在字长确定后，尾数基值$r_m$取2或4，浮点数具有最大的表数范围和最高表数精度。</p><p>当$r_m=2$时，规格化浮点数可以采用隐藏位方法表示，如果尾数用原码表示，最高位<strong>一定为1</strong>；如果尾数补码表示，最高位<strong>一定与符号位相反</strong>，这时，表数效率为100%。</p><p>尾数：多数机器用原码、小数表示</p><p>采用原码表示：加减法比补码表示复杂，乘除法比补码简单，而且非常直观。采用小数表示能简化运算，特别是乘法和除法运算。</p><p>阶码：一般机器用整数、移码表示</p><p>采用移码表示主要原因是：浮点0与机器0一致。阶码进行加减运算时，移码的加减法运算要比补码复杂。</p><p>基值：尾数的基值：$r_m=2$      阶码的基值:   $r_e=2$</p><p>采用隐藏位表示方式能够使规格化浮点数的表数的效率达到100%（当$r_m=2$时）</p><h5 id="舍入方法"><a href="#舍入方法" class="headerlink" title="舍入方法"></a>舍入方法</h5><p>方法1：恒舍法    又称截断法、必舍法等</p><p>方法2：恒置法    又称恒置r/2法、冯诺依曼法。规则：把有效字长的最低一位置成r/2</p><p>方法3：下舍上入法    又称四舍五入法、0舍1入法。</p><p>方法4：$R^*$舍入法    只有少数巨型机采用。</p><p>方法5：查表法    $ROM$舍入法，$PLA$舍入法等。</p><h5 id="警戒位"><a href="#警戒位" class="headerlink" title="警戒位"></a>警戒位</h5><p>在对阶时多设置一位来避免误差，一般设置一位警戒位就好。</p><h3 id="寻址技术"><a href="#寻址技术" class="headerlink" title="寻址技术"></a>寻址技术</h3><h4 id="编址方式"><a href="#编址方式" class="headerlink" title="编址方式"></a>编址方式</h4><p>常用的编址单位：字编址、字节编址、位编址、块编址等。</p><p>大端和小端问题：从左边开始编址就是大端(0 1 2 3…)，从右边开始编址就是小端(…3 2 1 0)。</p><p>三个零地址空间：通用寄存器、主存储器、输入输出设备独立编址。</p><p>两个零地址空间：通用寄存器，主存储与输入输出设备统一遍址。</p><p>一个零地址空间：最低端是通用寄存器，最高端是输入输出设备，中间为主存储器。</p><p>隐含编址方式：堆栈、Cache等。</p><h4 id="并行存储器的编址技术"><a href="#并行存储器的编址技术" class="headerlink" title="并行存储器的编址技术"></a>并行存储器的编址技术</h4><p>高位交叉编址：主要用来扩大存储器容量。</p><p>低位交叉编址：主要是提高存储器速度。</p><h4 id="输入输出设备编址"><a href="#输入输出设备编址" class="headerlink" title="输入输出设备编址"></a>输入输出设备编址</h4><p>一台设备一个地址：通过指令来区分地址，地址内部区分地址。</p><p>一台设备两个地址：数据寄存器、状态或控制寄存器。</p><p>多个编址寄存器共用同一个地址的方法：依靠地址内部区分，使用于被编址的寄存器的长度比较短。</p><p>“下跟法”隐含编址方式：必须按顺序读写寄存器。</p><p>一台设备多个地址：增加编程的困难。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;yqw还是依旧开口脆&lt;/p&gt;
    
    </summary>
    
      <category term="课堂笔记" scheme="http://yoursite.com/categories/%E8%AF%BE%E5%A0%82%E7%AC%94%E8%AE%B0/"/>
    
    
  </entry>
  
  <entry>
    <title>Oracle</title>
    <link href="http://yoursite.com/2019/09/06/Oracle/"/>
    <id>http://yoursite.com/2019/09/06/Oracle/</id>
    <published>2019-09-06T15:24:57.258Z</published>
    <updated>2019-09-06T15:31:39.621Z</updated>
    
    <content type="html"><![CDATA[<p><del>上谢大的课有感？</del></p><a id="more"></a><h3 id="oracle函数"><a href="#oracle函数" class="headerlink" title="oracle函数"></a>oracle函数</h3><hr><h4 id="数值型常用函数"><a href="#数值型常用函数" class="headerlink" title="数值型常用函数"></a>数值型常用函数</h4><table><thead><tr><th>函数</th><th>返回值</th><th>样例</th><th>显示</th></tr></thead><tbody><tr><td>ceil(n)</td><td>大于或等于数值n的最小整数</td><td>select ceil(10.6) from dual;</td><td>11</td></tr><tr><td>floor(n)</td><td>小于等于数值n的最大整数</td><td>select ceil(10.6) from dual;</td><td>10</td></tr><tr><td>mod(m,n)</td><td>m除以n的余数,若n=0,则返回m</td><td>select mod(7,5) from dual;</td><td>2</td></tr><tr><td>power(m,n)</td><td>$m^n$</td><td>select power(3,2) from dual;</td><td>9</td></tr><tr><td>round(n,m)</td><td>将n四舍五入,保留小数点后m位</td><td>select round(1234.5678,2) from dual;</td><td>1234.57</td></tr><tr><td>sign(n)</td><td>若n=0,则返回0,否则,n&gt;0,则返回1,n&lt;0,则返回-1</td><td>select sign(12) from dual;</td><td>1</td></tr><tr><td>sqrt(n)</td><td>$\sqrt{n}$</td><td>select sqrt(25) from dual ;</td><td>5</td></tr></tbody></table><hr><h4 id="日期型函数"><a href="#日期型函数" class="headerlink" title="日期型函数"></a>日期型函数</h4><table><thead><tr><th></th><th></th><th></th></tr></thead><tbody><tr><td>sysdate</td><td>当前日期和时间</td><td>select sysdate from dual;</td></tr><tr><td>last_day</td><td>本月最后一天</td><td>select last_day(sysdate) from dual;</td></tr><tr><td>add_months(d,n)</td><td>当前日期d后推n个月</td><td>select add_months(sysdate,2) from dual;</td></tr><tr><td>next_day(d,day)</td><td>d后第一周指定day的日期</td><td>select next_day(sysdate,’Monday’) from dual;</td></tr><tr><td>months_between(d,n)</td><td>日期d和n相差月数</td><td>select months_between(sysdate, to_date(‘20020812’,’YYYYMMDD’)) from dual;</td></tr></tbody></table><p>day 格式：’Monday’ ‘  ‘Tuesday’ ‘wednesday’ ‘Thursday’ ‘Friday’ ‘Saturday’ ‘Sunday’ </p><hr><h4 id="特殊格式的日期型函数"><a href="#特殊格式的日期型函数" class="headerlink" title="特殊格式的日期型函数"></a>特殊格式的日期型函数</h4><table><thead><tr><th></th><th></th></tr></thead><tbody><tr><td>Y或YY或YYY 年的最后一位，两位，三位</td><td>select to_char(sysdate,’YYY’) from dual;</td></tr><tr><td>Q 季度,1-3月为第一季度</td><td>select to_char(sysdate,’Q’) from dual;</td></tr><tr><td>MM 　月份数</td><td>select to_char(sysdate,’MM’) from dual;</td></tr><tr><td>RM 月份的罗马表示</td><td>select to_char(sysdate,’RM’) from dual; IV</td></tr><tr><td>month 用9个字符表示的月份名</td><td>select to_char(sysdate,’month’) from dual;</td></tr><tr><td>ww 当年第几周</td><td>select to_char(sysdate,’ww’) from dual;</td></tr><tr><td>w 本月第几周</td><td>select to_char(sysdate,’w’) from dual;</td></tr><tr><td>DDD 当年第几天,一月一日为001 ,二月一日032</td><td>select to_char(sysdate,’DDD’) from dual;</td></tr><tr><td>DD 当月第几天</td><td>select to_char(sysdate,’DD’) from dual;</td></tr><tr><td>D 周内第几天</td><td>select to_char(sysdate,’D’) from dual; 如　sunday</td></tr><tr><td>DY 周内第几天缩写</td><td>select to_char(sysdate,’DY’) from dual; 如　sun</td></tr><tr><td>hh12 12小时制小时数</td><td>select to_char(sysdate,’hh12’) from dual;</td></tr><tr><td>hh24 24小时制小时数</td><td>select to_char(sysdate,’hh24’) from dual;</td></tr><tr><td>Mi 分钟数</td><td>select to_char(sysdate,’Mi’) from dual;</td></tr><tr><td>ss 秒数</td><td>select to_char(sysdate,’ss’) from dual;</td></tr><tr><td>to_number() 将合法的数字字符串转换成数字</td><td>select to_number(‘88877’) from dual; 88877</td></tr><tr><td>to_char() 将数字转换为字符串</td><td>select to_char(88877) from dual; ‘88877’</td></tr></tbody></table><hr><h4 id="字符函数"><a href="#字符函数" class="headerlink" title="字符函数"></a>字符函数</h4><p>字符函数主要用于修改字符列。这些函数接受字符输入，返回字符或数字值。Oracle 提供的一些字符函数如下。</p><ol><li>CONCAT (char1, char2)</li></ol><p>返回连接“char2”的“char1”。</p><p>示例  SELECT CONCAT( CONCAT(ename, ‘ is a ‘), job) FROM emp;</p><ol start="2"><li>INITCAP(string)</li></ol><p>将“string”的字符转成大写。</p><p>示例 Select INITCAP(ename) from emp;</p><ol start="3"><li>LOWER (string)</li></ol><p>将“string”转成小写。</p><p>示例 Select LOWER(ENAME) from emp;</p><ol start="4"><li>LPAD(char1,n [,char2])</li></ol><p>返回“char1”，左起由“char2”中的字符补充到“n”个字符长。如果“char1”比“n”长，则函数返回“char1”的前“n”个字符。</p><p>示例 SELECT LPAD(ename,15,’*’) FROM emp;</p><ol start="5"><li>LTRIM(string,trim_set)</li></ol><p>从左边删除字符，此处“string”是数据库的列，或者是字面字符串，而“trim_set” 是我们要去掉的字符的集合。</p><p>示例 SELECT LTRIM(‘abcdab’,’a’) FROM DUAL;</p><ol start="6"><li>REPLACE(string, if, then)</li></ol><p>用 0 或其他字符代替字符串中的字符。“if”是字符或字符串，对于每个出现在“string”中的“if”，都用“then”的内容代替。</p><p>示例 SELECT REPLACE(‘JACK and JUE’,’J’,’BL’) FROM DUAL;</p><ol start="7"><li>RPAD(char1, n [,char2])</li></ol><p>返回“char1”，右侧用“char2”中的字符补充到“n”个字符长。如果 “char1”比“n” 长，则函数返回“char1”的前“n”个字符。</p><p>示例 SELECT RPAD(ename,15,’*’) FROM emp;</p><ol start="8"><li>RTRIM(string,trim_set)</li></ol><p>从右侧删除字符，此处“string”是数据库的列，或者是字面字符串，而“trim_set” 是我们要去掉的字符的集合。</p><p>示例 SELECT RTRIM(‘abcdef’, ‘f’) FROM DUAL;</p><ol start="9"><li>SOUNDEX(char)</li></ol><p>返回包含“char”的表意字符的字符串。它允许比较英语中拼写不同而发音类似的字。</p><p>示例 SELECT ename FROM emp</p><p>WHERE SOUNDEX(ename) = SoUNDEX(‘SMYTHE’);</p><ol start="10"><li>SUBSTR(string, start [,count])</li></ol><p>返回“string”中截取的一部分。该命令截取“string”的一个子集，从“start”位置开始，持续“count”个字符。如果我们不指定“count”，则从“start”开始截取到“string”的尾部。</p><p>示例 SELECT SUBSTR(‘ABCDEFGIJKLM’,3,4) FROM DUAL;</p><ol start="11"><li>TRANSLATE(string, if, then)</li></ol><p>“if”中字符的位置，并检查“then”的相同位置，然后用该位置的字符替换 “string”中的字符。</p><p>示例 SELECT TRANSLATE(ename,’AEIOU’, ‘XXXXX’) FROM emp;</p><ol start="12"><li>UPPER(string)</li></ol><p>返回大写的“string”。</p><p>示例 SELECT UPPER(‘aptech computer education’) FROM dual;</p><ol start="13"><li>ASCII(string)</li></ol><p>该命令是“American Standard Code for Information Interchange”的缩写。它是使用数字表示可打印字符的基本规则。该函数返回 “string”中第一个（最左边）字符的 ASCII 值。</p><p>示例 SELECT ASCII(‘APTECH’) from dual;</p><ol start="14"><li>INSTR (string, set[, start[, occurrence] ] )</li></ol><p>该命令“string”中从“start”位置开始查找字符集合的位置，再查找“set”出现的第一次、第二次等等的“occurrence”（次数）。“start”的值也可以是负数，代表从字符串结尾开始向反方向搜索。该函数也用于数字和日期数据类型。</p><p>示例 SELECT INSTR(‘aptech is aptech’,’ap’,1,2) FROM DUAL;</p><ol start="15"><li>LENGTH(string)</li></ol><p>返回“string”的长度值。</p><p>示例 SELECT ename, LENGTH(ename) FROM emp </p><p>WHERE empno = 7698;</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;del&gt;上谢大的课有感？&lt;/del&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="课堂笔记" scheme="http://yoursite.com/categories/%E8%AF%BE%E5%A0%82%E7%AC%94%E8%AE%B0/"/>
    
    
  </entry>
  
  <entry>
    <title>模板整理</title>
    <link href="http://yoursite.com/2019/08/22/%E6%A8%A1%E6%9D%BF%E6%95%B4%E7%90%86/"/>
    <id>http://yoursite.com/2019/08/22/模板整理/</id>
    <published>2019-08-22T15:01:37.380Z</published>
    <updated>2019-12-15T02:44:14.850Z</updated>
    
    <content type="html"><![CDATA[<p>Collected By Hope_Y…</p><a id="more"></a><h3 id="STL"><a href="#STL" class="headerlink" title="STL"></a>STL</h3><p>部分来自<a href="https://quincy.ink/" target="_blank" rel="noopener">QuincyTan</a></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;ext/pb_ds/assoc_container.hpp&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;ext/pb_ds/tree_policy.hpp&gt;//用tree</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;ext/pb_ds/hash_policy.hpp&gt;//用hash</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;ext/pb_ds/trie_policy.hpp&gt;//用trie</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;ext/pb_ds/priority_queue.hpp&gt;//用priority_queue</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> __gnu_pbds;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//hash表 用法类似map,时间复杂度O(n)</span></span><br><span class="line">cc_hash_table&lt;<span class="keyword">int</span>,<span class="keyword">bool</span>&gt; h; <span class="comment">//拉链法</span></span><br><span class="line">gp_hash_table&lt;<span class="keyword">int</span>,<span class="keyword">bool</span>&gt; h; <span class="comment">//探测法</span></span><br><span class="line">h.clear() <span class="comment">//初始化</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 平衡树 以下操作时间复杂度均为O(logn)</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">team</span>&#123;</span></span><br><span class="line">    <span class="keyword">int</span> t,p,id;</span><br><span class="line">    <span class="keyword">bool</span> <span class="keyword">operator</span> &lt;(<span class="keyword">const</span> team&amp;hs)<span class="keyword">const</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> t!=hs.t?t&gt;hs.t:p!=hs.p?p&lt;hs.p:id&lt;hs.id;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">typedef</span> tree&lt;team,null_type,less&lt;team&gt;,rb_tree_tag,tree_order_statistics_node_update&gt; rebtree;</span><br><span class="line">null_type <span class="comment">//无映射(低版本g++为null_mapped_type)</span></span><br><span class="line">less&lt;T&gt; <span class="comment">//从小到大排序</span></span><br><span class="line">rb_tree_tag <span class="comment">//红黑树</span></span><br><span class="line">tree_order_statistics_node_update <span class="comment">//更新方式</span></span><br><span class="line">tr.insert(x); <span class="comment">//插入;</span></span><br><span class="line">tr.erase(x); <span class="comment">//删除;</span></span><br><span class="line">tr.order_of_key(x); <span class="comment">//求比x小的个数 rank=res+1</span></span><br><span class="line">tr.find_by_order(k<span class="number">-1</span>); <span class="comment">//找k小值,返回迭代器 k值非法，则会返回end()</span></span><br><span class="line">tr.join(b); <span class="comment">//将b并入tr,前提是两棵树类型一样且没有重复元素</span></span><br><span class="line">tr.split(v,b); <span class="comment">//分裂,key小于等于v的元素属于tr,其余的属于b</span></span><br><span class="line">tr.lower_bound(x); <span class="comment">//返回第一个&gt;=x的元素的迭代器 x的前驱 *--tr.lower_bound(x)</span></span><br><span class="line">tr.upper_bound(x); <span class="comment">//返回第一个&gt;x的元素的迭代器  x的后继 *tr.lower_bound(x)</span></span><br><span class="line"><span class="comment">//迭代器支持++,--操作</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//堆</span></span><br><span class="line">priority_queue&lt;<span class="keyword">int</span>,greater&lt;<span class="keyword">int</span>&gt;,TAG&gt; Q; <span class="comment">//注意命名空间别和std中的那个重了</span></span><br><span class="line"><span class="comment">/*其中的TAG为类型，有以下几种：</span></span><br><span class="line"><span class="comment">pairing_heap_tag //最快</span></span><br><span class="line"><span class="comment">thin_heap_tag</span></span><br><span class="line"><span class="comment">binomial_heap_tag</span></span><br><span class="line"><span class="comment">rc_binomial_heap_tag</span></span><br><span class="line"><span class="comment">binary_heap_tag</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span>&#123;</span></span><br><span class="line">    <span class="keyword">int</span> x;</span><br><span class="line">    node()&#123;&#125;</span><br><span class="line">    node(<span class="keyword">int</span> x):x(x)&#123;&#125;</span><br><span class="line">    <span class="keyword">friend</span> <span class="keyword">bool</span> <span class="keyword">operator</span> &lt; (node i,node j)&#123;</span><br><span class="line">        <span class="keyword">return</span> i.x&gt;j.x; <span class="comment">// 队首元素是小的，即小的的优先级大，这个在sort的bool函数有点差别</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line">priority_queue&lt;<span class="keyword">int</span>,<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;,greater&lt;<span class="keyword">int</span>&gt; &gt; q;<span class="comment">/////采取最小优先策略，即按从小到大的顺序排列</span></span><br><span class="line">priority_queue&lt;<span class="keyword">int</span>,<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;,less&lt;<span class="keyword">int</span>&gt; &gt; q;  <span class="comment">////采取最大优先策略，即按从大到小的顺序排列</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">__gnu_pbds::priority_queue&lt;<span class="keyword">int</span>&gt;::point_iterator it;  <span class="comment">//支持迭代器</span></span><br><span class="line">Q.push(x); <span class="comment">//push()会返回迭代器,用一个迭代器数组保存所有进队列的元素的迭代器，就可以持久化操作</span></span><br><span class="line">Q.pop();</span><br><span class="line">Q.top();</span><br><span class="line">Q.join(b);</span><br><span class="line">Q.empty();</span><br><span class="line">Q.size();</span><br><span class="line">Q.modify(it,<span class="number">6</span>);</span><br><span class="line">Q.erase(it);</span><br><span class="line"></span><br><span class="line">sort <span class="comment">//排序中的bool函数的使用</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmp</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> x&lt;y;  <span class="comment">//就是比较x元素和y元素，如果表达式为真，就不交换</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//但是呢，当你要自定义某个元素的优先级，比如说2排最前面</span></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmp</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> t)</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> x==<span class="number">2</span>; <span class="comment">// 否则y==2</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//rope 时间复杂度O(logN)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;ext/rope&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> __gnu_cxx;</span><br><span class="line">rope&lt;<span class="keyword">int</span>&gt; r;</span><br><span class="line">push_back(x)    <span class="comment">//在末尾添加x</span></span><br><span class="line">insert(pos,x)   <span class="comment">//在pos插入x</span></span><br><span class="line">erase(pos,x)    <span class="comment">//从pos开始删除x个</span></span><br><span class="line">copy(pos,len,x) <span class="comment">//从pos开始到pos+len为止用x代替</span></span><br><span class="line">replace(pos,x)  <span class="comment">//从pos开始换成x</span></span><br><span class="line">substr(pos,x)   <span class="comment">//提取pos开始x个</span></span><br><span class="line">at(x)/[x]   <span class="comment">//访问第x个元素</span></span><br><span class="line"><span class="comment">//可持久化 O(1)复制根节点</span></span><br><span class="line">rope&lt;<span class="keyword">char</span>&gt; *his[maxn];</span><br><span class="line">his[<span class="number">0</span>] = <span class="keyword">new</span> rope&lt;<span class="keyword">char</span>&gt;();</span><br><span class="line">his[i] = <span class="keyword">new</span> rope&lt;<span class="keyword">char</span>&gt;(*his[i<span class="number">-1</span>]);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//list 合并操作</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">merge</span><span class="params">(<span class="built_in">list</span> &lt;T&gt; &amp; x)</span></span></span><br><span class="line"><span class="function"><span class="comment">//将链表x合并进来并清空x,要求链表自身和x都是有序的</span></span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">splice</span> <span class="params">( iterator position, <span class="built_in">list</span>&lt;T,Allocator&gt;&amp; x )</span></span>;</span><br><span class="line"><span class="comment">//在position后把list&amp;x所有的元素到剪接到要操作的list对象</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">splice</span> <span class="params">( iterator position, <span class="built_in">list</span>&lt;T,Allocator&gt;&amp; x, iterator it )</span></span>;</span><br><span class="line"><span class="comment">//只会把it的值剪接到要操作的list对象中</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">splice</span> <span class="params">( iterator position, <span class="built_in">list</span>&lt;T,Allocator&gt;&amp; x, iterator first, iterator last )</span></span>;</span><br><span class="line"><span class="comment">//把first到last剪接到要操作的list对象中</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//O(n)查询第k大</span></span><br><span class="line">nth_element(a+<span class="number">1</span>,a+k,a+<span class="number">1</span>+n);</span><br><span class="line"></span><br><span class="line"><span class="built_in">deque</span><span class="comment">//双向队列</span></span><br><span class="line">pop_back() <span class="comment">//删除尾部的元素 </span></span><br><span class="line">pop_front() <span class="comment">//删除头部的元素 </span></span><br><span class="line">push_back() <span class="comment">//在尾部加入一个元素 </span></span><br><span class="line">push_front() <span class="comment">//在头部加入一个元素 </span></span><br><span class="line">    </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">read</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> x=<span class="number">0</span>; <span class="keyword">bool</span> f=<span class="number">0</span>; <span class="keyword">char</span> ch=getchar();</span><br><span class="line">    <span class="keyword">while</span> (ch&lt;<span class="string">'0'</span> || <span class="string">'9'</span>&lt;ch) f|=ch==<span class="string">'-'</span>, ch=getchar();</span><br><span class="line">    <span class="keyword">while</span> (<span class="string">'0'</span>&lt;=ch &amp;&amp; ch&lt;=<span class="string">'9'</span>) x=x*<span class="number">10</span>+ch-<span class="string">'0'</span>, ch=getchar();</span><br><span class="line">    <span class="keyword">return</span> f?-x:x;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">print</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(x&lt;<span class="number">0</span>)&#123;</span><br><span class="line">        <span class="built_in">putchar</span>(<span class="string">'-'</span>);</span><br><span class="line">        x = -x;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(x&gt;<span class="number">9</span>) print(x / <span class="number">10</span>);</span><br><span class="line">    <span class="built_in">putchar</span>(x % <span class="number">10</span> + <span class="string">'0'</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">long</span> <span class="keyword">long</span> <span class="title">multi</span><span class="params">(<span class="keyword">long</span> <span class="keyword">long</span> x,<span class="keyword">long</span> <span class="keyword">long</span> y,<span class="keyword">long</span> <span class="keyword">long</span> mod)</span></span>&#123;</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> tmp=(x*y-(<span class="keyword">long</span> <span class="keyword">long</span>)((<span class="keyword">long</span> <span class="keyword">double</span>)x/mod*y+<span class="number">1.0e-8</span>)*mod);</span><br><span class="line"><span class="keyword">return</span> tmp&lt;<span class="number">0</span> ? tmp+mod : tmp;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="动态规划"><a href="#动态规划" class="headerlink" title="动态规划"></a>动态规划</h3><h4 id="引入"><a href="#引入" class="headerlink" title="引入"></a>引入</h4><p>LIS问题：最长上升子序列</p><p>$ dp_i $表示以$ i $结尾的最长上升子序列，$ dp_i=max_{0 \leq j &lt;i,a_j&lt;a_i}(dp_j+1) $。</p><p>$O(nlogn)$的解法(<a href="https://www.cnblogs.com/KYSpring/p/9021909.html" target="_blank" rel="noopener"> </a>)：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn=<span class="number">1e5</span>+<span class="number">5</span>;</span><br><span class="line"><span class="keyword">int</span> a[maxn];</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="keyword">int</span> lis[maxn];</span><br><span class="line"><span class="keyword">int</span> len=<span class="number">1</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">Find</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> l=<span class="number">1</span>,r=len,m;</span><br><span class="line">    <span class="keyword">while</span>(l&lt;r)&#123;</span><br><span class="line">        m=l+(r-l)/<span class="number">2</span>;</span><br><span class="line">        <span class="keyword">if</span>(lis[m]&gt;=a[x])&#123;<span class="comment">//这里若去掉等号即为 非严格递增序列 </span></span><br><span class="line">            r=m;</span><br><span class="line">        &#125; </span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            l=m+<span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> l;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++) <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;a[i]);</span><br><span class="line">    lis[<span class="number">1</span>]=a[<span class="number">1</span>];</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=n;i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(a[i]&gt;lis[len])&#123;</span><br><span class="line">            lis[++len]=a[i];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">int</span> pos=Find(i);</span><br><span class="line">            lis[pos]=a[i];<span class="comment">//同时记录了路径</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,len);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>LCS问题：最长公共子序列</p><p>$dp_{i,j}$表示前缀子串中$a_{1-i}$与$b_{1-j}$的最长公共子序列，$dp_{i,j} = max({dp_{i-1,j},dp_{i,j-1},if(a_i = b_j) dp_{i-1,j-1}+1})$</p><p>$O(nlogn)$的解法：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn=<span class="number">1e6</span>+<span class="number">5</span>;</span><br><span class="line"><span class="keyword">int</span> n,len=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> lis[maxn];</span><br><span class="line"><span class="keyword">int</span> a[maxn];</span><br><span class="line"><span class="keyword">int</span> b[maxn];</span><br><span class="line"><span class="keyword">int</span> loc[maxn];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">Find</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> l=<span class="number">1</span>,r=len,m;</span><br><span class="line">    <span class="keyword">while</span>(l&lt;r)&#123;</span><br><span class="line">        m=l+(r-l)/<span class="number">2</span>;</span><br><span class="line">        <span class="keyword">if</span>(lis[m]&gt;=x)&#123;</span><br><span class="line">            r=m;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>  l=m+<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> l;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)<span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;a[i]);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;b[i]);</span><br><span class="line">        loc[b[i]]=i;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">        b[i]=loc[a[i]];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(n!=<span class="number">0</span>)lis[++len]=b[<span class="number">1</span>];</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=n;i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(b[i]&gt;lis[len])&#123;</span><br><span class="line">            lis[++len]=b[i];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">int</span> pos=Find(b[i]);</span><br><span class="line">            lis[pos]=b[i];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,len);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="背包dp"><a href="#背包dp" class="headerlink" title="背包dp"></a>背包dp</h4><h5 id="01背包"><a href="#01背包" class="headerlink" title="01背包"></a>01背包</h5><p>$n$个物品放入容积为$M$的背包，第$i$个物品的容量为$v_i$，价值为$w_i$，问最大价值。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> dp[maxn];</span><br><span class="line"><span class="built_in">memset</span>(dp,-inf,<span class="keyword">sizeof</span> dp);</span><br><span class="line">dp[<span class="number">0</span>]=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=n; i++)&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> j=M; j&gt;=v[i]; j--)&#123;</span><br><span class="line">        dp[j]=max(dp[j],dp[j-v[i]]+w[i]);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> ans=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;=M; i++) ans=max(ans,dp[i]);</span><br></pre></td></tr></table></figure><h5 id="完全背包"><a href="#完全背包" class="headerlink" title="完全背包"></a>完全背包</h5><p>在01背包的基础上，每个物品是无限多的。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> dp[maxn];</span><br><span class="line"><span class="built_in">memset</span>(dp,-inf,<span class="keyword">sizeof</span> dp);</span><br><span class="line">dp[<span class="number">0</span>]=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=n; i++)&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> j=v[i]; j&lt;=M; j++)&#123;</span><br><span class="line">        dp[j]=max(dp[j],dp[j-v[i]]+w[i]);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> ans=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;=M; i++) ans=max(ans,dp[i]);</span><br></pre></td></tr></table></figure><h5 id="多重背包"><a href="#多重背包" class="headerlink" title="多重背包"></a>多重背包</h5><p>在01背包的基础上，每种物品的数量是$c_i$个。</p><p>我们将所有物品全部摊开，相当于$\sum_{i=1}^{n} {c_i}$个物品，效率不高。</p><p>我们可以使用单调队列优化。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//输入</span></span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="keyword">int</span> W; <span class="comment">//总容量</span></span><br><span class="line"><span class="keyword">int</span> w[MAX_N]; <span class="comment">//每种物品的容量</span></span><br><span class="line"><span class="keyword">int</span> v[MAX_N]; <span class="comment">//每种物品的价值</span></span><br><span class="line"><span class="keyword">int</span> m[MAX_N]; <span class="comment">//每种物品的数量</span></span><br><span class="line"><span class="keyword">int</span> dp[MAX_N+<span class="number">1</span>];</span><br><span class="line"><span class="keyword">int</span> deq[MAX_N+<span class="number">1</span>];<span class="comment">//双端队列，保存下标</span></span><br><span class="line"><span class="keyword">int</span> deqv[MAX_N+<span class="number">1</span>];<span class="comment">//双端队列，保存值</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">solve</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> a=<span class="number">0</span>;a&lt;w[i];a++)&#123;<span class="comment">//把每个分组都打一遍</span></span><br><span class="line">            <span class="keyword">int</span> s=<span class="number">0</span>;<span class="comment">//初始化双端队列头尾</span></span><br><span class="line">            <span class="keyword">int</span> t=<span class="number">0</span>;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j*w[i]+a&lt;=W;j++)&#123;<span class="comment">//每组第j个元素</span></span><br><span class="line">                <span class="keyword">int</span> val=dp[j*w[i]+a]-j*v[i];</span><br><span class="line">                <span class="keyword">while</span>(s&lt;t &amp;&amp; deqv[t<span class="number">-1</span>]&lt;=val)<span class="comment">//直到不改变单调性</span></span><br><span class="line">                    t--;</span><br><span class="line">                deq[t]=j;</span><br><span class="line">                deqv[t]=val;</span><br><span class="line">                t++;</span><br><span class="line">                <span class="comment">//利用队头求出dp</span></span><br><span class="line">                dp[j*w[i]+a]=deqv[s]+j*v[i];</span><br><span class="line">                <span class="keyword">if</span>(deq[s]==j-m[i])s++;<span class="comment">//检查过期</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="分组背包"><a href="#分组背包" class="headerlink" title="分组背包"></a>分组背包</h5><p>给定$n$组物品，第$i$组有$c_i$个物品，第$i$组的第$j$个物品的体积为$v_{i,j}$，价值为$w_{i,j}$，容积$M$的背包，求装得下的最大价值。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> dp[maxn];</span><br><span class="line"><span class="built_in">memset</span>(dp,-inf,<span class="keyword">sizeof</span> dp);</span><br><span class="line">dp[<span class="number">0</span>]=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=n; i++)&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> j=M; j&gt;=<span class="number">0</span>; j--)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> k=<span class="number">1</span>; k&lt;=c[i]; k++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(j&gt;=v[i][k]) dp[j]=max(dp[j],dp[j-v[i][k]]+w[i][k]);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> ans=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;=M; i++) ans=max(ans,dp[i]);</span><br></pre></td></tr></table></figure><h4 id="数位dp"><a href="#数位dp" class="headerlink" title="数位dp"></a>数位dp</h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">int</span> a[<span class="number">20</span>];</span><br><span class="line">ll dp[<span class="number">20</span>][state];<span class="comment">//不同题目状态不同</span></span><br><span class="line"><span class="function">ll <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> pos,<span class="comment">/*state变量*/</span>,<span class="keyword">bool</span> lead<span class="comment">/*前导零*/</span>,<span class="keyword">bool</span> limit<span class="comment">/*数位上界变量*/</span>)</span></span>&#123;</span><br><span class="line">    <span class="comment">//不是每个题都要判断前导零</span></span><br><span class="line">    <span class="comment">//递归边界，既然是按位枚举，最低位是0，那么pos==-1说明这个数我枚举完了</span></span><br><span class="line">    <span class="keyword">if</span>(pos==<span class="number">-1</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;<span class="comment">/*这里一般返回1，表示你枚举的这个数是合法的，</span></span><br><span class="line"><span class="comment">        那么这里就需要你在枚举时必须每一位都要满足题目条件，</span></span><br><span class="line"><span class="comment">        也就是说当前枚举到pos位，一定要保证前面已经枚举的数位是合法的。</span></span><br><span class="line"><span class="comment">        不过具体题目不同或者写法不同的话不一定要返回1 */</span></span><br><span class="line">    <span class="comment">//第二个就是记忆化(在此前可能不同题目还能有一些剪枝)</span></span><br><span class="line">    <span class="keyword">if</span>(!limit &amp;&amp; !lead &amp;&amp; dp[pos][state]!=<span class="number">-1</span>)</span><br><span class="line">        <span class="keyword">return</span> dp[pos][state];</span><br><span class="line">    <span class="keyword">int</span> up=limit?a[pos]:<span class="number">9</span>;<span class="comment">//根据limit判断枚举的上界up;这个的例子前面用213讲过了</span></span><br><span class="line">    ll ans=<span class="number">0</span>;</span><br><span class="line">    <span class="comment">//开始计数</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;=up; i++)&#123; <span class="comment">//枚举，然后把不同情况的个数加到ans就可以了</span></span><br><span class="line">        <span class="keyword">if</span>()</span><br><span class="line">            ...</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>()</span><br><span class="line">                ...</span><br><span class="line">                ans+=dfs(pos<span class="number">-1</span>,<span class="comment">/*状态转移*/</span>,lead &amp;&amp; i==<span class="number">0</span>,limit &amp;&amp; i==a[pos]) <span class="comment">//最后两个变量传参都是这样写的</span></span><br><span class="line">                     <span class="comment">/*这里还算比较灵活，不过做几个题就觉得这里也是套路了</span></span><br><span class="line"><span class="comment">                     大概就是说，我当前数位枚举的数是i，然后根据题目的约束条件分类讨论</span></span><br><span class="line"><span class="comment">                     去计算不同情况下的个数，还有要根据state变量来保证i的合法性，比如题目</span></span><br><span class="line"><span class="comment">                     要求数位上不能有62连续出现,那么就是state就是要保存前一位pre,然后分类，</span></span><br><span class="line"><span class="comment">                     前一位如果是6那么这意味就不能是2，这里一定要保存枚举的这个数是合法*/</span></span><br><span class="line">            &#125;</span><br><span class="line">    <span class="comment">//计算完，记录状态</span></span><br><span class="line">    <span class="keyword">if</span>(!limit &amp;&amp; !lead)</span><br><span class="line">        dp[pos][state]=ans;</span><br><span class="line">    <span class="comment">/*这里对应上面的记忆化，在一定条件下时记录，保证一致性，当然如果约束条件不需要考虑lead，这里就是lead就完全不用考虑了*/</span></span><br><span class="line">    <span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">ll <span class="title">solve</span><span class="params">(ll x)</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> pos=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(x)&#123;<span class="comment">//把数位都分解出来</span></span><br><span class="line">        a[pos++]=x%<span class="number">10</span>;</span><br><span class="line">        x/=<span class="number">10</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> dfs(pos<span class="number">-1</span><span class="comment">/*从最高位开始枚举*/</span>,<span class="comment">/*一系列状态 */</span>,<span class="literal">true</span>,<span class="literal">true</span>);</span><br><span class="line">    <span class="comment">//刚开始最高位都是有限制并且有前导零的，显然比最高位还要高的一位视为0嘛</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    ll le,ri;</span><br><span class="line">    <span class="keyword">while</span>(~<span class="built_in">scanf</span>(<span class="string">"%lld%lld"</span>,&amp;le,&amp;ri))&#123;</span><br><span class="line">        <span class="comment">//初始化dp数组为-1,这里还有更加优美的优化,后面讲</span></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,solve(ri)-solve(le<span class="number">-1</span>));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="区间dp"><a href="#区间dp" class="headerlink" title="区间dp"></a>区间dp</h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">dp[i][i]=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> len=<span class="number">2</span>; len&lt;=n; len++)&#123;<span class="comment">//长度</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=n; i++)&#123;</span><br><span class="line">        <span class="keyword">int</span> j=i+len<span class="number">-1</span>;</span><br><span class="line">        <span class="keyword">if</span>(j&gt;n) <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> k=i; k&lt;j; k++)&#123;<span class="comment">//枚举断点</span></span><br><span class="line">            <span class="comment">//</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="树形dp"><a href="#树形dp" class="headerlink" title="树形dp"></a>树形dp</h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//求树的直径和第二长的路径</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MAXN 10010</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">edge</span>&#123;</span></span><br><span class="line">    <span class="keyword">int</span> to,next,v;</span><br><span class="line">&#125;edges[MAXN*<span class="number">2</span>];</span><br><span class="line"><span class="keyword">int</span> dp[MAXN][<span class="number">3</span>],ecnt,head[MAXN],N,x,y;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> from,<span class="keyword">int</span> to,<span class="keyword">int</span> x)</span></span>&#123;</span><br><span class="line">    edges[++ecnt].to=to;</span><br><span class="line">    edges[ecnt].next=head[from];</span><br><span class="line">    edges[ecnt].v=x;</span><br><span class="line">    head[from]=ecnt;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">init</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">memset</span>(head,<span class="number">0</span>,<span class="keyword">sizeof</span>(head));</span><br><span class="line">    <span class="built_in">memset</span>(dp,<span class="number">0</span>,<span class="keyword">sizeof</span>(dp));</span><br><span class="line">    ecnt=<span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> root,<span class="keyword">int</span> par)</span></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=head[root]; i!=<span class="number">0</span>; i=edges[i].next)&#123;</span><br><span class="line">        <span class="keyword">int</span> son=edges[i].to;</span><br><span class="line">        <span class="keyword">if</span>(son!=par)&#123;</span><br><span class="line">            dfs(son,root);</span><br><span class="line">            <span class="keyword">if</span>(dp[son][<span class="number">0</span>]+edges[i].v &gt;= dp[root][<span class="number">0</span>])&#123;</span><br><span class="line">                dp[root][<span class="number">1</span>]=dp[root][<span class="number">0</span>];</span><br><span class="line">                dp[root][<span class="number">0</span>]=dp[son][<span class="number">0</span>]+edges[i].v;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> dp[root][<span class="number">1</span>]=max(dp[root][<span class="number">1</span>],dp[son][<span class="number">0</span>]+edges[i].v);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="斜率优化dp"><a href="#斜率优化dp" class="headerlink" title="斜率优化dp"></a>斜率优化dp</h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//HDU3507</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">int</span> dp[<span class="number">500005</span>];</span><br><span class="line"><span class="keyword">int</span> q[<span class="number">500005</span>];</span><br><span class="line"><span class="keyword">int</span> sum[<span class="number">500005</span>];</span><br><span class="line"><span class="keyword">int</span> head,tail,n,m;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">getDP</span><span class="params">(<span class="keyword">int</span> i,<span class="keyword">int</span> j)</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> dp[j]+m+(sum[i]-sum[j])*(sum[i]-sum[j]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">getUP</span><span class="params">(<span class="keyword">int</span> j,<span class="keyword">int</span> k)</span></span>&#123;   <span class="comment">//yj-yk的部分</span></span><br><span class="line">    <span class="keyword">return</span> dp[j]+sum[j]*sum[j]-(dp[k]+sum[k]*sum[k]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">getDOWN</span><span class="params">(<span class="keyword">int</span> j,<span class="keyword">int</span> k)</span></span>&#123;  <span class="comment">//xj-xk的部分</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">2</span>*(sum[j]-sum[k]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i;</span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;n,&amp;m)==<span class="number">2</span>)&#123;</span><br><span class="line">        <span class="keyword">for</span>(i=<span class="number">1</span>; i&lt;=n; i++)</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;sum[i]);</span><br><span class="line">        sum[<span class="number">0</span>]=dp[<span class="number">0</span>]=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(i=<span class="number">1</span>; i&lt;=n; i++)</span><br><span class="line">            sum[i]+=sum[i<span class="number">-1</span>];</span><br><span class="line">        head=tail=<span class="number">0</span>;</span><br><span class="line">        q[tail++]=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(i=<span class="number">1</span>; i&lt;=n; i++)&#123;</span><br><span class="line">            <span class="keyword">while</span>(head+<span class="number">1</span>&lt;tail &amp;&amp;</span><br><span class="line">            getUP(q[head+<span class="number">1</span>],q[head])&lt;=</span><br><span class="line">            sum[i]*getDOWN(q[head+<span class="number">1</span>],q[head]))</span><br><span class="line">                head++;</span><br><span class="line">            dp[i]=getDP(i,q[head]);</span><br><span class="line">            <span class="keyword">while</span>(head+<span class="number">1</span>&lt;tail &amp;&amp;</span><br><span class="line">            getUP(i,q[tail<span class="number">-1</span>])*getDOWN(q[tail<span class="number">-1</span>],q[tail<span class="number">-2</span>])&lt;=</span><br><span class="line">            getUP(q[tail<span class="number">-1</span>],q[tail<span class="number">-2</span>])*getDOWN(i,q[tail<span class="number">-1</span>]))</span><br><span class="line">                tail--;</span><br><span class="line">            q[tail++]=i;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,dp[n]);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h3 id="图论"><a href="#图论" class="headerlink" title="图论"></a>图论</h3><h4 id="最短路"><a href="#最短路" class="headerlink" title="最短路"></a>最短路</h4><h5 id="Dijkstra（堆优化）"><a href="#Dijkstra（堆优化）" class="headerlink" title="Dijkstra（堆优化）"></a>Dijkstra（堆优化）</h5><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span>&#123;</span></span><br><span class="line">    <span class="keyword">int</span> val,id;</span><br><span class="line">    node(<span class="keyword">int</span> id,<span class="keyword">int</span> val):id(id),val(val) &#123;&#125;</span><br><span class="line">    <span class="keyword">bool</span> <span class="keyword">operator</span> &lt;(<span class="keyword">const</span> node &amp;hs)<span class="keyword">const</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> val&gt;hs.val;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">edge</span>&#123;</span></span><br><span class="line">    <span class="keyword">int</span> next,to,w;</span><br><span class="line">&#125;e[maxm*<span class="number">2</span>];</span><br><span class="line"><span class="keyword">int</span> head[maxn],cnt;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">addedge</span><span class="params">(<span class="keyword">int</span> u,<span class="keyword">int</span> v,<span class="keyword">int</span> w)</span></span>&#123;</span><br><span class="line">    e[++cnt]=edge&#123;head[u],v,w&#125;;</span><br><span class="line">    head[u]=cnt;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> dis[maxn],vis[maxn];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dijkstra</span><span class="params">(<span class="keyword">int</span> from)</span></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">        dis[i]=INF;</span><br><span class="line">        vis[i]=<span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    priority_queue&lt;node&gt;q;</span><br><span class="line">    q.push(node(from,<span class="number">0</span>));</span><br><span class="line">    dis[from]=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(!q.empty())&#123;</span><br><span class="line">        <span class="keyword">int</span> cur=q.top().id;</span><br><span class="line">        q.pop();</span><br><span class="line">        <span class="keyword">if</span>(vis[cur])<span class="keyword">continue</span>;</span><br><span class="line">        vis[cur]=<span class="literal">true</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=head[cur]; i ; i=e[i].next)&#123;</span><br><span class="line">            <span class="keyword">int</span> v=e[i].to;</span><br><span class="line">            <span class="keyword">if</span>(dis[cur]+e[i].w &lt; dis[v])&#123;</span><br><span class="line">                dis[v]=dis[cur]+e[i].w;</span><br><span class="line">                q.push(node(v,dis[v]));</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="Floyd"><a href="#Floyd" class="headerlink" title="Floyd"></a>Floyd</h5><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> k=<span class="number">1</span>;k&lt;=n;k++)&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=n;j++)&#123;</span><br><span class="line">            dis[i][j]=min(dis[i][j],dis[i][k]+dis[k][j]);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="网络流Dinic算法"><a href="#网络流Dinic算法" class="headerlink" title="网络流Dinic算法"></a>网络流Dinic算法</h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> ll maxn = <span class="number">50100</span>;<span class="comment">//点的数量</span></span><br><span class="line"><span class="keyword">const</span> ll maxm = <span class="number">60010</span>*<span class="number">2</span>;<span class="comment">//边的数量，一般为maxn*maxn</span></span><br><span class="line"><span class="keyword">const</span> ll inf = <span class="number">0x7f7f7f7f7f7f7f7f</span>;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">edge</span>&#123;</span></span><br><span class="line">    ll to, next;</span><br><span class="line">    ll w;</span><br><span class="line">    edge()&#123;&#125;</span><br><span class="line">    edge(ll to, ll next, ll w) : to(to), next(next), w(w)&#123;&#125;</span><br><span class="line">&#125;e[maxm];</span><br><span class="line">ll head[maxn], d[maxn], num, n, m;</span><br><span class="line">ll st, ed, cur[maxn];</span><br><span class="line">ll N,M;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Init</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">memset</span>(head, <span class="number">-1</span>, <span class="keyword">sizeof</span> head);</span><br><span class="line">    num = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(ll u, ll v, ll w)</span></span>&#123;</span><br><span class="line">    e[num] = edge(v, head[u], w);head[u] = num++;</span><br><span class="line">    e[num] = edge(u, head[v], <span class="number">0</span>);head[v] = num++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">bfs</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">memset</span>(d, <span class="number">-1</span>, <span class="keyword">sizeof</span> d);</span><br><span class="line">    d[st] = <span class="number">1</span>;</span><br><span class="line">    <span class="built_in">queue</span>&lt;<span class="keyword">int</span>&gt;q;</span><br><span class="line">    q.push(st);</span><br><span class="line">    <span class="keyword">while</span>(!q.empty())&#123;</span><br><span class="line">        ll u = q.front();</span><br><span class="line">        q.pop();</span><br><span class="line">        <span class="keyword">for</span>(ll i=head[u]; i!=<span class="number">-1</span>; i=e[i].next)&#123;</span><br><span class="line">            ll v = e[i].to;</span><br><span class="line">            <span class="keyword">if</span>(e[i].w == <span class="number">0</span> || d[v] &gt; <span class="number">0</span>) <span class="keyword">continue</span>;</span><br><span class="line">            d[v] = d[u] + <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">if</span>(v == ed) <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">            q.push(v);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">ll <span class="title">dfs</span><span class="params">(ll u, ll <span class="built_in">exp</span>)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(u == ed || !<span class="built_in">exp</span>) <span class="keyword">return</span> <span class="built_in">exp</span>;</span><br><span class="line">    ll flow=<span class="number">0</span>, f;</span><br><span class="line">    <span class="keyword">for</span>(ll &amp; i =cur[u];i!=<span class="number">-1</span>;i=e[i].next)&#123;</span><br><span class="line">        ll v = e[i].to;</span><br><span class="line">        <span class="keyword">if</span>(d[v] == d[u] + <span class="number">1</span> &amp;&amp; (f=dfs(v, min(<span class="built_in">exp</span>, e[i].w))))&#123;</span><br><span class="line">            e[i].w -= f;</span><br><span class="line">            e[i^<span class="number">1</span>].w += f;</span><br><span class="line">            flow += f;</span><br><span class="line">            <span class="built_in">exp</span> -= f;</span><br><span class="line">            <span class="keyword">if</span>(!<span class="built_in">exp</span>) <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> flow;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">ll <span class="title">dinic</span><span class="params">()</span></span>&#123;</span><br><span class="line">    ll ans = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(bfs())&#123;</span><br><span class="line">        <span class="built_in">memcpy</span>(cur, head, <span class="keyword">sizeof</span> head);</span><br><span class="line">        <span class="keyword">while</span>(ll d=dfs(st, inf))</span><br><span class="line">            ans += d;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h3 id="数据结构"><a href="#数据结构" class="headerlink" title="数据结构"></a>数据结构</h3><h4 id="线段树"><a href="#线段树" class="headerlink" title="线段树"></a>线段树</h4><h5 id="区间操作"><a href="#区间操作" class="headerlink" title="区间操作"></a>区间操作</h5><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> lson l,mid,rt&lt;&lt;1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rson mid+1,r,rt&lt;&lt;1|1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> intmid  int mid = (l+r)&gt;&gt;1</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn=<span class="number">1e5</span>+<span class="number">10</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">int</span> n,q;</span><br><span class="line">ll sum[maxn&lt;&lt;<span class="number">2</span>],cur[maxn&lt;&lt;<span class="number">2</span>];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">push_up</span><span class="params">(<span class="keyword">int</span> rt)</span></span>&#123;</span><br><span class="line">    sum[rt] = sum[rt&lt;&lt;<span class="number">1</span>] + sum[rt&lt;&lt;<span class="number">1</span>|<span class="number">1</span>];</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">push_down</span><span class="params">(<span class="keyword">int</span> l,<span class="keyword">int</span> r,<span class="keyword">int</span> rt)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(cur[rt])&#123;</span><br><span class="line">        intmid;</span><br><span class="line">        cur[rt&lt;&lt;<span class="number">1</span>]  += cur[rt];</span><br><span class="line">        cur[rt&lt;&lt;<span class="number">1</span>|<span class="number">1</span>]+= cur[rt];</span><br><span class="line">        sum[rt&lt;&lt;<span class="number">1</span>]  += (mid-l+<span class="number">1</span>)*cur[rt];</span><br><span class="line">        sum[rt&lt;&lt;<span class="number">1</span>|<span class="number">1</span>]+= (r-mid)*cur[rt];</span><br><span class="line">        cur[rt]=<span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">build</span><span class="params">(<span class="keyword">int</span> l,<span class="keyword">int</span> r,<span class="keyword">int</span> rt)</span></span>&#123;</span><br><span class="line">    intmid;cur[rt]=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span>(l==r)&#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%lld"</span>,&amp;sum[rt]);<span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    build(lson);</span><br><span class="line">    build(rson);</span><br><span class="line">    push_up(rt);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">update</span><span class="params">(<span class="keyword">int</span> ll,<span class="keyword">int</span> rr,<span class="keyword">int</span> val,<span class="keyword">int</span> l,<span class="keyword">int</span> r,<span class="keyword">int</span> rt)</span></span>&#123;</span><br><span class="line">    intmid;</span><br><span class="line">    <span class="keyword">if</span>( ll&lt;=l &amp;&amp; rr&gt;=r )&#123;</span><br><span class="line">        cur[rt]+=val;</span><br><span class="line">        sum[rt]+=(r-l+<span class="number">1</span>)*val;</span><br><span class="line">        <span class="keyword">return</span> ;</span><br><span class="line">    &#125;</span><br><span class="line">    push_down(l,r,rt);</span><br><span class="line">    <span class="keyword">if</span>(ll&lt;=mid)update(ll,rr,val,lson);</span><br><span class="line">    <span class="keyword">if</span>(rr&gt;mid)update(ll,rr,val,rson);</span><br><span class="line">    push_up(rt);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">ll <span class="title">query</span><span class="params">(<span class="keyword">int</span> ll,<span class="keyword">int</span> rr,<span class="keyword">int</span> l,<span class="keyword">int</span> r,<span class="keyword">int</span> rt)</span></span>&#123;</span><br><span class="line">    <span class="keyword">long</span> <span class="keyword">long</span> ret=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span>(ll&lt;=l &amp;&amp; rr&gt;=r) <span class="keyword">return</span> sum[rt];</span><br><span class="line">    push_down(l,r,rt);</span><br><span class="line">    intmid;</span><br><span class="line">    <span class="keyword">if</span>(ll&lt;=mid) ret += query(ll,rr,lson);</span><br><span class="line">    <span class="keyword">if</span>(rr&gt;mid) ret += query(ll,rr,rson);</span><br><span class="line">    <span class="keyword">return</span> ret;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;n&gt;&gt;q;</span><br><span class="line">    build(<span class="number">1</span>,n,<span class="number">1</span>);</span><br><span class="line">    <span class="keyword">char</span> s[<span class="number">2</span>];</span><br><span class="line">    <span class="keyword">int</span> a,b,c;</span><br><span class="line">    <span class="keyword">while</span>(q--)&#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%s%d%d"</span>,s,&amp;a,&amp;b);</span><br><span class="line">        <span class="keyword">if</span>(s[<span class="number">0</span>]==<span class="string">'C'</span>)&#123;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;c);</span><br><span class="line">            update(a,b,c,<span class="number">1</span>,n,<span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,query(a,b,<span class="number">1</span>,n,<span class="number">1</span>));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="二维线段树-HDU1823"><a href="#二维线段树-HDU1823" class="headerlink" title="二维线段树(HDU1823)"></a>二维线段树(<a href="http://acm.hdu.edu.cn/showproblem.php?pid=1823" target="_blank" rel="noopener">HDU1823</a>)</h5><p>求二维区间的最大值（最小值）</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> lson l, m, rt &lt;&lt; 1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rson m + 1, r, rt &lt;&lt; 1 | 1</span></span><br><span class="line"><span class="keyword">int</span> n, s[<span class="number">1005</span>][<span class="number">4005</span>];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">subBuild</span><span class="params">(<span class="keyword">int</span> xrt, <span class="keyword">int</span> l, <span class="keyword">int</span> r, <span class="keyword">int</span> rt)</span> </span>&#123;</span><br><span class="line">    s[xrt][rt] = <span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">if</span>(l != r) &#123;</span><br><span class="line">        <span class="keyword">int</span> m = l + r &gt;&gt; <span class="number">1</span>;</span><br><span class="line">        subBuild(xrt, lson);</span><br><span class="line">        subBuild(xrt, rson);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">build</span><span class="params">(<span class="keyword">int</span> l, <span class="keyword">int</span> r, <span class="keyword">int</span> rt)</span> </span>&#123;</span><br><span class="line">    subBuild(rt, <span class="number">0</span>, n, <span class="number">1</span>);</span><br><span class="line">    <span class="keyword">if</span>(l != r) &#123;</span><br><span class="line">        <span class="keyword">int</span> m = l + r &gt;&gt; <span class="number">1</span>;</span><br><span class="line">        build(lson);</span><br><span class="line">        build(rson);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">subUpdate</span><span class="params">(<span class="keyword">int</span> xrt, <span class="keyword">int</span> y, <span class="keyword">int</span> c, <span class="keyword">int</span> l, <span class="keyword">int</span> r, <span class="keyword">int</span> rt)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(l == r &amp;&amp; l == y) s[xrt][rt] = max(s[xrt][rt], c);</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">int</span> m = l + r &gt;&gt; <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">if</span>(y &lt;= m) subUpdate(xrt, y, c, lson);</span><br><span class="line">        <span class="keyword">else</span> subUpdate(xrt, y, c, rson);</span><br><span class="line">        s[xrt][rt] = max(s[xrt][rt &lt;&lt; <span class="number">1</span>], s[xrt][rt &lt;&lt; <span class="number">1</span> | <span class="number">1</span>]);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">update</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y, <span class="keyword">int</span> c, <span class="keyword">int</span> l, <span class="keyword">int</span> r, <span class="keyword">int</span> rt)</span> </span>&#123;</span><br><span class="line">    subUpdate(rt, y, c, <span class="number">0</span>, n, <span class="number">1</span>);</span><br><span class="line">    <span class="keyword">if</span>(l != r) &#123;</span><br><span class="line">        <span class="keyword">int</span> m = l + r &gt;&gt; <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">if</span>(x &lt;= m) update(x, y, c, lson);</span><br><span class="line">        <span class="keyword">else</span> update(x, y, c, rson);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">subQuery</span><span class="params">(<span class="keyword">int</span> xrt, <span class="keyword">int</span> yl, <span class="keyword">int</span> yr, <span class="keyword">int</span> l, <span class="keyword">int</span> r, <span class="keyword">int</span> rt)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(yl &lt;= l &amp;&amp; r &lt;= yr) <span class="keyword">return</span> s[xrt][rt];</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">int</span> m = l + r &gt;&gt; <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">int</span> res = <span class="number">-1</span>;</span><br><span class="line">        <span class="keyword">if</span>(yl &lt;= m) res = subQuery(xrt, yl, yr, lson);</span><br><span class="line">        <span class="keyword">if</span>(yr &gt; m) res = max(res, subQuery(xrt, yl, yr, rson));</span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">query</span><span class="params">(<span class="keyword">int</span> xl, <span class="keyword">int</span> xr, <span class="keyword">int</span> yl, <span class="keyword">int</span> yr, <span class="keyword">int</span> l, <span class="keyword">int</span> r, <span class="keyword">int</span> rt)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(xl &lt;= l &amp;&amp; r &lt;= xr) <span class="keyword">return</span> subQuery(rt, yl, yr, <span class="number">0</span>, n, <span class="number">1</span>);</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">int</span> m = l + r &gt;&gt; <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">int</span> res = <span class="number">-1</span>;</span><br><span class="line">        <span class="keyword">if</span>(xl &lt;= m) res = query(xl, xr, yl, yr, lson);</span><br><span class="line">        <span class="keyword">if</span>(xr &gt; m) res = max(res, query(xl, xr, yl, yr, rson));</span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> t;</span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;t) &amp;&amp; t) &#123;</span><br><span class="line">        n = <span class="number">1000</span>;</span><br><span class="line">        build(<span class="number">100</span>, <span class="number">200</span>, <span class="number">1</span>);</span><br><span class="line">        <span class="keyword">while</span>(t--) &#123;</span><br><span class="line">            <span class="keyword">char</span> ch[<span class="number">2</span>];</span><br><span class="line">            <span class="keyword">int</span> a, b;</span><br><span class="line">            <span class="keyword">double</span> c, d;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">"%s"</span>, ch);</span><br><span class="line">            <span class="keyword">if</span>(ch[<span class="number">0</span>] == <span class="string">'I'</span>) &#123;</span><br><span class="line">                <span class="built_in">scanf</span>(<span class="string">"%d%lf%lf"</span>, &amp;a, &amp;c, &amp;d);</span><br><span class="line">                update(a, c * <span class="number">10</span>, d * <span class="number">10</span>, <span class="number">100</span>, <span class="number">200</span>, <span class="number">1</span>);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="built_in">scanf</span>(<span class="string">"%d%d%lf%lf"</span>, &amp;a, &amp;b, &amp;c, &amp;d);</span><br><span class="line">                <span class="keyword">int</span> cc = c * <span class="number">10</span>, dd = d * <span class="number">10</span>;</span><br><span class="line">                <span class="keyword">if</span>(a &gt; b) swap(a, b);</span><br><span class="line">                <span class="keyword">if</span>(cc &gt; dd) swap(cc, dd);</span><br><span class="line">                <span class="keyword">int</span> ans = query(a, b, cc, dd, <span class="number">100</span>, <span class="number">200</span>, <span class="number">1</span>);</span><br><span class="line">                <span class="keyword">if</span>(ans == <span class="number">-1</span>) <span class="built_in">printf</span>(<span class="string">"-1\n"</span>);</span><br><span class="line">                <span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">"%.1f\n"</span>, ans / <span class="number">10.0</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="势能线段树"><a href="#势能线段树" class="headerlink" title="势能线段树"></a>势能线段树</h5><p><a href="https://www.lydsy.com/JudgeOnline/problem.php?id=4695" target="_blank" rel="noopener">BZOJ4695</a></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//1.给一个区间[L,R] 加上一个数x </span></span><br><span class="line"><span class="comment">//2.把一个区间[L,R] 里小于x 的数变成x </span></span><br><span class="line"><span class="comment">//3.把一个区间[L,R] 里大于x 的数变成x </span></span><br><span class="line"><span class="comment">//4.求区间[L,R] 的和</span></span><br><span class="line"><span class="comment">//5.求区间[L,R] 的最大值</span></span><br><span class="line"><span class="comment">//6.求区间[L,R] 的最小值</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> N 600005</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> lson (o&lt;&lt;1)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rson (o&lt;&lt;1|1)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> inf 1&lt;&lt;30</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">read</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> f=<span class="number">1</span>,x=<span class="number">0</span>;<span class="keyword">char</span> ch;</span><br><span class="line">    <span class="keyword">do</span>&#123;ch=getchar();<span class="keyword">if</span>(ch==<span class="string">'-'</span>)f=<span class="number">-1</span>;&#125;<span class="keyword">while</span>(ch&lt;<span class="string">'0'</span>||ch&gt;<span class="string">'9'</span>);</span><br><span class="line">    <span class="keyword">do</span>&#123;x=x*<span class="number">10</span>+ch-<span class="string">'0'</span>;ch=getchar();&#125;<span class="keyword">while</span>(ch&gt;=<span class="string">'0'</span>&amp;&amp;ch&lt;=<span class="string">'9'</span>);</span><br><span class="line">    <span class="keyword">return</span> f*x;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//Segment-Tree-Beats!</span></span><br><span class="line"><span class="keyword">int</span> maxv[N&lt;&lt;<span class="number">2</span>],seca[N&lt;&lt;<span class="number">2</span>],cnta[N&lt;&lt;<span class="number">2</span>],minv[N&lt;&lt;<span class="number">2</span>],seci[N&lt;&lt;<span class="number">2</span>],cnti[N&lt;&lt;<span class="number">2</span>],tagv[N&lt;&lt;<span class="number">2</span>];</span><br><span class="line">ll sumv[N&lt;&lt;<span class="number">2</span>];</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">pushup</span><span class="params">(<span class="keyword">int</span> o)</span></span>&#123;</span><br><span class="line">  <span class="keyword">int</span> l=o&lt;&lt;<span class="number">1</span>,r=o&lt;&lt;<span class="number">1</span>|<span class="number">1</span>;sumv[o]=sumv[l]+sumv[r];</span><br><span class="line">  <span class="keyword">if</span>(maxv[l]==maxv[r])maxv[o]=maxv[l],cnta[o]=cnta[l]+cnta[r],seca[o]=max(seca[l],seca[r]);</span><br><span class="line">  <span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(maxv[l]&gt;maxv[r]) swap(l,r);maxv[o]=maxv[r]; cnta[o]=cnta[r];seca[o]=max(seca[r],maxv[l]);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">if</span>(minv[l]==minv[r])</span><br><span class="line">    minv[o]=minv[l],cnti[o]=cnti[l]+cnti[r],seci[o]=min(seci[l],seci[r]);</span><br><span class="line">  <span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(minv[l]&lt;minv[r]) swap(l,r);minv[o]=minv[r]; cnti[o]=cnti[r];seci[o]=min(seci[r],minv[l]);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">puttag</span><span class="params">(<span class="keyword">int</span> o,<span class="keyword">int</span> l,<span class="keyword">int</span> r,<span class="keyword">int</span> v)</span></span>&#123;</span><br><span class="line">    tagv[o]+=v;sumv[o]+=(ll)(r-l+<span class="number">1</span>)*v;</span><br><span class="line">    minv[o]+=v;maxv[o]+=v;seca[o]+=v;seci[o]+=v;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">tmax</span><span class="params">(<span class="keyword">int</span> o,<span class="keyword">int</span> l,<span class="keyword">int</span> r,<span class="keyword">int</span> v)</span></span>&#123;</span><br><span class="line">    sumv[o]+=(ll)(cnti[o])*(v-minv[o]);</span><br><span class="line">    minv[o]=v;maxv[o]=max(v,maxv[o]);</span><br><span class="line">    <span class="keyword">if</span>(minv[o]==maxv[o])&#123;</span><br><span class="line">        sumv[o]=<span class="number">1L</span>L*(r-l+<span class="number">1</span>)*v;cnta[o]=cnti[o]=r-l+<span class="number">1</span>;seca[o]=-inf;seci[o]=inf;</span><br><span class="line">    &#125;<span class="keyword">else</span> seca[o]=max(v,seca[o]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">tmin</span><span class="params">(<span class="keyword">int</span> o,<span class="keyword">int</span> l,<span class="keyword">int</span> r,<span class="keyword">int</span> v)</span></span>&#123;</span><br><span class="line">    sumv[o]-=(ll)(cnta[o])*(maxv[o]-v);</span><br><span class="line">    maxv[o]=v;minv[o]=min(v,minv[o]);</span><br><span class="line">    <span class="keyword">if</span>(maxv[o]==minv[o])&#123;</span><br><span class="line">        sumv[o]=(ll)(r-l+<span class="number">1</span>)*v;cnta[o]=cnti[o]=r-l+<span class="number">1</span>;seca[o]=-inf;seci[o]=inf;</span><br><span class="line">    &#125;<span class="keyword">else</span> seci[o]=min(v,seci[o]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">pushdown</span><span class="params">(<span class="keyword">int</span> o,<span class="keyword">int</span> l,<span class="keyword">int</span> r)</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> mid=(l+r)&gt;&gt;<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">if</span>(tagv[o])&#123;</span><br><span class="line">        puttag(lson,l,mid,tagv[o]);puttag(rson,mid+<span class="number">1</span>,r,tagv[o]);</span><br><span class="line">        tagv[o]=<span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(maxv[lson]&gt;maxv[o]&amp;&amp;seca[lson]&lt;maxv[o])tmin(lson,l,mid,maxv[o]);</span><br><span class="line">    <span class="keyword">if</span>(maxv[rson]&gt;maxv[o]&amp;&amp;seca[rson]&lt;maxv[o])tmin(rson,mid+<span class="number">1</span>,r,maxv[o]);</span><br><span class="line">    <span class="keyword">if</span>(minv[lson]&lt;minv[o]&amp;&amp;seci[lson]&gt;minv[o])tmax(lson,l,mid,minv[o]);</span><br><span class="line">    <span class="keyword">if</span>(minv[rson]&lt;minv[o]&amp;&amp;seci[rson]&gt;minv[o])tmax(rson,mid+<span class="number">1</span>,r,minv[o]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">build</span><span class="params">(<span class="keyword">int</span> o,<span class="keyword">int</span> l,<span class="keyword">int</span> r)</span></span>&#123;</span><br><span class="line">    tagv[o]=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span>(l==r)&#123;</span><br><span class="line">        <span class="keyword">int</span> x=read();</span><br><span class="line">        sumv[o]=maxv[o]=minv[o]=x;cnta[o]=cnti[o]=<span class="number">1</span>;seca[o]=-inf;seci[o]=inf;tagv[o]=<span class="number">0</span>;<span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> mid=(l+r)&gt;&gt;<span class="number">1</span>;</span><br><span class="line">    build(lson,l,mid);build(rson,mid+<span class="number">1</span>,r);</span><br><span class="line">    pushup(o);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">changemax</span><span class="params">(<span class="keyword">int</span> o,<span class="keyword">int</span> l,<span class="keyword">int</span> r,<span class="keyword">int</span> ql,<span class="keyword">int</span> qr,<span class="keyword">int</span> v)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(minv[o]&gt;=v)<span class="keyword">return</span>;</span><br><span class="line">    <span class="keyword">if</span>(ql&lt;=l&amp;&amp;r&lt;=qr&amp;&amp;v&lt;seci[o])&#123;tmax(o,l,r,v);<span class="keyword">return</span>;&#125;</span><br><span class="line">    pushdown(o,l,r);<span class="keyword">int</span> mid=(l+r)&gt;&gt;<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">if</span>(ql&lt;=mid)changemax(lson,l,mid,ql,qr,v);</span><br><span class="line">    <span class="keyword">if</span>(qr&gt;mid)changemax(rson,mid+<span class="number">1</span>,r,ql,qr,v);</span><br><span class="line">    pushup(o);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">changemin</span><span class="params">(<span class="keyword">int</span> o,<span class="keyword">int</span> l,<span class="keyword">int</span> r,<span class="keyword">int</span> ql,<span class="keyword">int</span> qr,<span class="keyword">int</span> v)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(maxv[o]&lt;=v)<span class="keyword">return</span>;</span><br><span class="line">    <span class="keyword">if</span>(ql&lt;=l&amp;&amp;r&lt;=qr&amp;&amp;v&gt;seca[o])&#123;tmin(o,l,r,v);<span class="keyword">return</span>;&#125;</span><br><span class="line">    pushdown(o,l,r);<span class="keyword">int</span> mid=(l+r)&gt;&gt;<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">if</span>(ql&lt;=mid)changemin(lson,l,mid,ql,qr,v);</span><br><span class="line">    <span class="keyword">if</span>(qr&gt;mid)changemin(rson,mid+<span class="number">1</span>,r,ql,qr,v);</span><br><span class="line">    pushup(o);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> o,<span class="keyword">int</span> l,<span class="keyword">int</span> r,<span class="keyword">int</span> ql,<span class="keyword">int</span> qr,<span class="keyword">int</span> v)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(ql&lt;=l&amp;&amp;r&lt;=qr)&#123;puttag(o,l,r,v);<span class="keyword">return</span>;&#125;</span><br><span class="line">    pushdown(o,l,r);<span class="keyword">int</span> mid=(l+r)&gt;&gt;<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">if</span>(ql&lt;=mid)add(lson,l,mid,ql,qr,v);</span><br><span class="line">    <span class="keyword">if</span>(qr&gt;mid)add(rson,mid+<span class="number">1</span>,r,ql,qr,v);</span><br><span class="line">    pushup(o);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">querymax</span><span class="params">(<span class="keyword">int</span> o,<span class="keyword">int</span> l,<span class="keyword">int</span> r,<span class="keyword">int</span> ql,<span class="keyword">int</span> qr)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(ql&lt;=l&amp;&amp;r&lt;=qr)<span class="keyword">return</span> maxv[o];</span><br><span class="line">    pushdown(o,l,r);<span class="keyword">int</span> mid=(l+r)&gt;&gt;<span class="number">1</span>,ans=-inf;</span><br><span class="line">    <span class="keyword">if</span>(ql&lt;=mid)ans=max(ans,querymax(lson,l,mid,ql,qr));</span><br><span class="line">    <span class="keyword">if</span>(qr&gt;mid)ans=max(ans,querymax(rson,mid+<span class="number">1</span>,r,ql,qr));</span><br><span class="line">    <span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">querymin</span><span class="params">(<span class="keyword">int</span> o,<span class="keyword">int</span> l,<span class="keyword">int</span> r,<span class="keyword">int</span> ql,<span class="keyword">int</span> qr)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(ql&lt;=l&amp;&amp;r&lt;=qr)<span class="keyword">return</span> minv[o];</span><br><span class="line">    pushdown(o,l,r);<span class="keyword">int</span> mid=(l+r)&gt;&gt;<span class="number">1</span>,ans=inf;</span><br><span class="line">    <span class="keyword">if</span>(ql&lt;=mid)ans=min(ans,querymin(lson,l,mid,ql,qr));</span><br><span class="line">    <span class="keyword">if</span>(qr&gt;mid)ans=min(ans,querymin(rson,mid+<span class="number">1</span>,r,ql,qr));</span><br><span class="line">    <span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">ll <span class="title">querysum</span><span class="params">(<span class="keyword">int</span> o,<span class="keyword">int</span> l,<span class="keyword">int</span> r,<span class="keyword">int</span> ql,<span class="keyword">int</span> qr)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(ql&lt;=l&amp;&amp;r&lt;=qr)<span class="keyword">return</span> sumv[o];</span><br><span class="line">    pushdown(o,l,r);<span class="keyword">int</span> mid=(l+r)&gt;&gt;<span class="number">1</span>;ll ans=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span>(ql&lt;=mid)ans+=querysum(lson,l,mid,ql,qr);</span><br><span class="line">    <span class="keyword">if</span>(qr&gt;mid)ans+=querysum(rson,mid+<span class="number">1</span>,r,ql,qr);</span><br><span class="line">    <span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//End of Segment Tree</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    n=read();build(<span class="number">1</span>,<span class="number">1</span>,n);</span><br><span class="line">    <span class="keyword">int</span> T=read();</span><br><span class="line">    <span class="keyword">while</span>(T--)&#123;</span><br><span class="line">        <span class="keyword">int</span> opt=read(),l=read(),r=read(),v;</span><br><span class="line">        <span class="keyword">if</span>(opt==<span class="number">1</span>)v=read(),add(<span class="number">1</span>,<span class="number">1</span>,n,l,r,v);</span><br><span class="line">        <span class="keyword">if</span>(opt==<span class="number">2</span>)v=read(),changemax(<span class="number">1</span>,<span class="number">1</span>,n,l,r,v);</span><br><span class="line">        <span class="keyword">if</span>(opt==<span class="number">3</span>)v=read(),changemin(<span class="number">1</span>,<span class="number">1</span>,n,l,r,v);</span><br><span class="line">        <span class="keyword">if</span>(opt==<span class="number">4</span>)<span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,querysum(<span class="number">1</span>,<span class="number">1</span>,n,l,r));</span><br><span class="line">        <span class="keyword">if</span>(opt==<span class="number">5</span>)<span class="built_in">printf</span>(<span class="string">"%d\n"</span>,querymax(<span class="number">1</span>,<span class="number">1</span>,n,l,r));</span><br><span class="line">        <span class="keyword">if</span>(opt==<span class="number">6</span>)<span class="built_in">printf</span>(<span class="string">"%d\n"</span>,querymin(<span class="number">1</span>,<span class="number">1</span>,n,l,r));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><a href="https://www.lydsy.com/JudgeOnline/problem.php?id=5312" target="_blank" rel="noopener">BZOJ5312</a></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//1，给出l,r,x，将序列l,r之间的所有数都 and x</span></span><br><span class="line"><span class="comment">//2，给出l,r,x，将序列l,r之间的所有数都 or x</span></span><br><span class="line"><span class="comment">//3，给出l,r，询问l,r之间的最大值</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> INF=(<span class="number">1</span>&lt;&lt;<span class="number">21</span>)<span class="number">-1</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N=<span class="number">2e5</span>+<span class="number">5</span>;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">read</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> X=<span class="number">0</span>,w=<span class="number">0</span>;<span class="keyword">char</span> ch=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(!<span class="built_in">isdigit</span>(ch))&#123;w|=ch==<span class="string">'-'</span>;ch=getchar();&#125;</span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">isdigit</span>(ch))X=(X&lt;&lt;<span class="number">3</span>)+(X&lt;&lt;<span class="number">1</span>)+(ch^<span class="number">48</span>),ch=getchar();</span><br><span class="line">    <span class="keyword">return</span> w?-X:X;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> n,m,b[N],mx[N*<span class="number">4</span>],ran[N*<span class="number">4</span>],ror[N*<span class="number">4</span>],lza[N*<span class="number">4</span>],lzo[N*<span class="number">4</span>];</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">upt</span><span class="params">(<span class="keyword">int</span> a)</span></span>&#123;</span><br><span class="line">    mx[a]=max(mx[a&lt;&lt;<span class="number">1</span>],mx[a&lt;&lt;<span class="number">1</span>|<span class="number">1</span>]);</span><br><span class="line">    ran[a]=ran[a&lt;&lt;<span class="number">1</span>]&amp;ran[a&lt;&lt;<span class="number">1</span>|<span class="number">1</span>];</span><br><span class="line">    ror[a]=ror[a&lt;&lt;<span class="number">1</span>]|ror[a&lt;&lt;<span class="number">1</span>|<span class="number">1</span>];</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">build</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> l,<span class="keyword">int</span> r)</span></span>&#123;</span><br><span class="line">    lza[a]=INF,lzo[a]=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span>(l==r)&#123;</span><br><span class="line">    mx[a]=b[l];ran[a]=b[l];ror[a]=b[l];</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> mid=(l+r)&gt;&gt;<span class="number">1</span>;</span><br><span class="line">    build(a&lt;&lt;<span class="number">1</span>,l,mid);build(a&lt;&lt;<span class="number">1</span>|<span class="number">1</span>,mid+<span class="number">1</span>,r);</span><br><span class="line">    upt(a);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">push</span><span class="params">(<span class="keyword">int</span> a)</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> ls=a&lt;&lt;<span class="number">1</span>,rs=a&lt;&lt;<span class="number">1</span>|<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">if</span>(lzo[a]!=<span class="number">0</span>)&#123;</span><br><span class="line">    mx[ls]|=lzo[a];mx[rs]|=lzo[a];</span><br><span class="line">    ran[ls]|=lzo[a];ran[rs]|=lzo[a];</span><br><span class="line">    ror[ls]|=lzo[a];ror[rs]|=lzo[a];</span><br><span class="line">    lza[ls]|=lzo[a];lza[rs]|=lzo[a];</span><br><span class="line">    lzo[ls]|=lzo[a];lzo[rs]|=lzo[a];</span><br><span class="line">    lzo[a]=<span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(lza[a]!=INF)&#123;</span><br><span class="line">    mx[ls]&amp;=lza[a];mx[rs]&amp;=lza[a];</span><br><span class="line">    ran[ls]&amp;=lza[a];ran[rs]&amp;=lza[a];</span><br><span class="line">    ror[ls]&amp;=lza[a];ror[rs]&amp;=lza[a];</span><br><span class="line">    lza[ls]&amp;=lza[a];lza[rs]&amp;=lza[a];</span><br><span class="line">    lza[a]=INF;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">mdy</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> l,<span class="keyword">int</span> r,<span class="keyword">int</span> l1,<span class="keyword">int</span> r1,<span class="keyword">int</span> x,<span class="keyword">bool</span> k)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(r&lt;l1||r1&lt;l)<span class="keyword">return</span>;</span><br><span class="line">    <span class="keyword">if</span>(l1&lt;=l&amp;&amp;r&lt;=r1&amp;&amp;(!((ran[a]^ror[a])&amp;x)))&#123;</span><br><span class="line">    <span class="keyword">if</span>(!k)&#123;mx[a]&amp;=x;ran[a]&amp;=x;ror[a]&amp;=x;lza[a]&amp;=x;&#125;</span><br><span class="line">    <span class="keyword">else</span>&#123;mx[a]|=x;ran[a]|=x;ror[a]|=x;lza[a]|=x;lzo[a]|=x;&#125;</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> mid=(l+r)&gt;&gt;<span class="number">1</span>;</span><br><span class="line">    push(a);</span><br><span class="line">    mdy(a&lt;&lt;<span class="number">1</span>,l,mid,l1,r1,x,k);mdy(a&lt;&lt;<span class="number">1</span>|<span class="number">1</span>,mid+<span class="number">1</span>,r,l1,r1,x,k);</span><br><span class="line">    upt(a);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">qry</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> l,<span class="keyword">int</span> r,<span class="keyword">int</span> l1,<span class="keyword">int</span> r1)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(r&lt;l1||r1&lt;l)<span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">if</span>(l1&lt;=l&amp;&amp;r&lt;=r1)<span class="keyword">return</span> mx[a];</span><br><span class="line">    <span class="keyword">int</span> mid=(l+r)&gt;&gt;<span class="number">1</span>;</span><br><span class="line">    push(a);</span><br><span class="line">    <span class="keyword">return</span> max(qry(a&lt;&lt;<span class="number">1</span>,l,mid,l1,r1),qry(a&lt;&lt;<span class="number">1</span>|<span class="number">1</span>,mid+<span class="number">1</span>,r,l1,r1));</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    n=read(),m=read();</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)b[i]=read();</span><br><span class="line">    build(<span class="number">1</span>,<span class="number">1</span>,n);</span><br><span class="line">    <span class="keyword">while</span>(m--)&#123;</span><br><span class="line">    <span class="keyword">int</span> op=read(),x=read(),y=read();</span><br><span class="line">    <span class="keyword">if</span>(op==<span class="number">1</span>)mdy(<span class="number">1</span>,<span class="number">1</span>,n,x,y,read(),<span class="number">0</span>);</span><br><span class="line">    <span class="keyword">if</span>(op==<span class="number">2</span>)mdy(<span class="number">1</span>,<span class="number">1</span>,n,x,y,read(),<span class="number">1</span>);</span><br><span class="line">    <span class="keyword">if</span>(op==<span class="number">3</span>)<span class="built_in">printf</span>(<span class="string">"%d\n"</span>,qry(<span class="number">1</span>,<span class="number">1</span>,n,x,y));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="树链剖分"><a href="#树链剖分" class="headerlink" title="树链剖分"></a>树链剖分</h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//点权</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> lson l,mid,rt&lt;&lt;1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rson mid+1,r,rt&lt;&lt;1|1</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn=<span class="number">1e5</span>+<span class="number">10</span>;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">read</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> x=<span class="number">0</span>; <span class="keyword">bool</span> f=<span class="number">0</span>; <span class="keyword">char</span> ch=getchar();</span><br><span class="line">    <span class="keyword">while</span> (ch&lt;<span class="string">'0'</span> || <span class="string">'9'</span>&lt;ch) f|=ch==<span class="string">'-'</span>, ch=getchar();</span><br><span class="line">    <span class="keyword">while</span> (<span class="string">'0'</span>&lt;=ch &amp;&amp; ch&lt;=<span class="string">'9'</span>) x=x*<span class="number">10</span>+ch-<span class="string">'0'</span>, ch=getchar();</span><br><span class="line">    <span class="keyword">return</span> f?-x:x;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">edge</span>&#123;</span></span><br><span class="line">    <span class="keyword">int</span> next,to;</span><br><span class="line">&#125;e[maxn*<span class="number">2</span>];</span><br><span class="line"><span class="keyword">int</span> head[maxn],cnt;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> u,<span class="keyword">int</span> v)</span></span>&#123;</span><br><span class="line">    e[++cnt]=edge&#123;head[u],v&#125;;</span><br><span class="line">    head[u]=cnt;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> n,m,root,P;</span><br><span class="line"><span class="keyword">int</span> w[maxn];</span><br><span class="line"><span class="keyword">int</span> fa[maxn],deep[maxn],siz[maxn],son[maxn],rk[maxn],top[maxn],id[maxn];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs1</span><span class="params">(<span class="keyword">int</span> u,<span class="keyword">int</span> pre,<span class="keyword">int</span> dep)</span></span>&#123;</span><br><span class="line">    fa[u]=pre;deep[u]=dep;siz[u]=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=head[u];i;i=e[i].next)&#123;</span><br><span class="line">        <span class="keyword">int</span> v=e[i].to;</span><br><span class="line">        <span class="keyword">if</span>(v==pre)<span class="keyword">continue</span>;</span><br><span class="line">        dfs1(v,u,dep+<span class="number">1</span>);</span><br><span class="line">        siz[u]+=siz[v];</span><br><span class="line">        <span class="keyword">if</span>(siz[v]&gt;siz[son[u]])son[u]=v;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs2</span><span class="params">(<span class="keyword">int</span> u,<span class="keyword">int</span> t)</span></span>&#123;</span><br><span class="line">    top[u]=t;id[u]=++cnt;rk[cnt]=u;</span><br><span class="line">    <span class="keyword">if</span>(!son[u])<span class="keyword">return</span>;</span><br><span class="line">    dfs2(son[u],t);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=head[u];i;i=e[i].next)&#123;</span><br><span class="line">        <span class="keyword">int</span> v=e[i].to;</span><br><span class="line">        <span class="keyword">if</span>(v!=son[u]&amp;&amp;v!=fa[u])dfs2(v,v);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> sum[maxn&lt;&lt;<span class="number">2</span>],lazy[maxn&lt;&lt;<span class="number">2</span>];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">push_up</span><span class="params">(<span class="keyword">int</span> rt)</span></span>&#123;</span><br><span class="line">    sum[rt]=sum[rt&lt;&lt;<span class="number">1</span>]+sum[rt&lt;&lt;<span class="number">1</span>|<span class="number">1</span>];</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">push_down</span><span class="params">(<span class="keyword">int</span> ls,<span class="keyword">int</span> rs,<span class="keyword">int</span> rt)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(lazy[rt])&#123;</span><br><span class="line">        <span class="keyword">int</span> val=lazy[rt];</span><br><span class="line">        sum[rt&lt;&lt;<span class="number">1</span>]=(sum[rt&lt;&lt;<span class="number">1</span>]+val*ls)%P;</span><br><span class="line">        sum[rt&lt;&lt;<span class="number">1</span>|<span class="number">1</span>]=(sum[rt&lt;&lt;<span class="number">1</span>|<span class="number">1</span>]+val*rs)%P;</span><br><span class="line">        lazy[rt&lt;&lt;<span class="number">1</span>]=(lazy[rt&lt;&lt;<span class="number">1</span>]+lazy[rt])%P;</span><br><span class="line">        lazy[rt&lt;&lt;<span class="number">1</span>|<span class="number">1</span>]=(lazy[rt&lt;&lt;<span class="number">1</span>|<span class="number">1</span>]+lazy[rt])%P;</span><br><span class="line">        lazy[rt]=<span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">build</span><span class="params">(<span class="keyword">int</span> l,<span class="keyword">int</span> r,<span class="keyword">int</span> rt)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(l==r)&#123;</span><br><span class="line">        sum[rt]=w[rk[l]]; <span class="comment">//重新编号后的</span></span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> mid=(l+r)&gt;&gt;<span class="number">1</span>;</span><br><span class="line">    build(lson);</span><br><span class="line">    build(rson);</span><br><span class="line">    push_up(rt);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">update</span><span class="params">(<span class="keyword">int</span> L,<span class="keyword">int</span> R,<span class="keyword">int</span> v,<span class="keyword">int</span> l,<span class="keyword">int</span> r,<span class="keyword">int</span> rt)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(L&lt;=l&amp;&amp;r&lt;=R)&#123;</span><br><span class="line">        sum[rt]=(sum[rt]+v*(r-l+<span class="number">1</span>))%P;</span><br><span class="line">        lazy[rt]=(lazy[rt]+v)%P;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> mid=(l+r)&gt;&gt;<span class="number">1</span>;</span><br><span class="line">    push_down(mid-l+<span class="number">1</span>,r-mid,rt);</span><br><span class="line">    <span class="keyword">if</span>(L&lt;=mid) update(L,R,v,lson);</span><br><span class="line">    <span class="keyword">if</span>(R&gt;mid)  update(L,R,v,rson);</span><br><span class="line">    push_up(rt);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">querysum</span><span class="params">(<span class="keyword">int</span> L,<span class="keyword">int</span> R,<span class="keyword">int</span> l,<span class="keyword">int</span> r,<span class="keyword">int</span> rt)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(L&lt;=l&amp;&amp;r&lt;=R)&#123;</span><br><span class="line">        <span class="keyword">return</span> sum[rt];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> mid=(l+r)&gt;&gt;<span class="number">1</span>,ret=<span class="number">0</span>;</span><br><span class="line">    push_down(mid-l+<span class="number">1</span>,r-mid,rt);</span><br><span class="line">    <span class="keyword">if</span>(L&lt;=mid) ret=(ret+querysum(L,R,lson))%P;</span><br><span class="line">    <span class="keyword">if</span>(R&gt;mid)  ret=(ret+querysum(L,R,rson))%P;</span><br><span class="line">    <span class="keyword">return</span> ret;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">PathUpdate</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y,<span class="keyword">int</span> v)</span></span>&#123;</span><br><span class="line">    <span class="keyword">while</span>(top[x]!=top[y])&#123;</span><br><span class="line">        <span class="keyword">if</span>(deep[top[x]]&lt;deep[top[y]]) swap(x,y);</span><br><span class="line">        update(id[top[x]],id[x],v,<span class="number">1</span>,n,<span class="number">1</span>);</span><br><span class="line">        x=fa[top[x]];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(id[x]&gt;id[y]) swap(x,y);</span><br><span class="line">    update(id[x],id[y],v,<span class="number">1</span>,n,<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">PathQuery</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> ret=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(top[x]!=top[y])&#123;</span><br><span class="line">        <span class="keyword">if</span>(deep[top[x]]&lt;deep[top[y]]) swap(x,y);</span><br><span class="line">        ret=(ret+querysum(id[top[x]],id[x],<span class="number">1</span>,n,<span class="number">1</span>))%P;</span><br><span class="line">        x=fa[top[x]];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(id[x]&gt;id[y])swap(x,y);</span><br><span class="line">    ret=(ret+querysum(id[x],id[y],<span class="number">1</span>,n,<span class="number">1</span>))%P;</span><br><span class="line">    <span class="keyword">return</span> ret;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="comment">//初始化只需要将head和son置零</span></span><br><span class="line">    n=read(),m=read(),root=read(),P=read();</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">        w[i]=read();</span><br><span class="line">    &#125;</span><br><span class="line">    cnt=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++) head[i]=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n<span class="number">-1</span>;i++)&#123;</span><br><span class="line">        <span class="keyword">int</span> u=read(),v=read();</span><br><span class="line">        add(u,v);</span><br><span class="line">        add(v,u);</span><br><span class="line">    &#125;</span><br><span class="line">    cnt=<span class="number">0</span>;</span><br><span class="line">    dfs1(root,<span class="number">0</span>,<span class="number">1</span>);  <span class="comment">//注意根节点不一定是1(一般为1就好)</span></span><br><span class="line">    dfs2(root,root);</span><br><span class="line">    build(<span class="number">1</span>,n,<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span>(m--)&#123;</span><br><span class="line">        <span class="keyword">int</span> op=read(),x,y,z;</span><br><span class="line">        <span class="keyword">if</span>(op==<span class="number">1</span>)&#123; <span class="comment">//更新x-y最短路径上所有点</span></span><br><span class="line">            x=read(),y=read(),z=read();</span><br><span class="line">            PathUpdate(x,y,z);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(op==<span class="number">2</span>)&#123; <span class="comment">//查询x-y最短路径上所有点</span></span><br><span class="line">            x=read(),y=read();</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,PathQuery(x,y));</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(op==<span class="number">3</span>)&#123; <span class="comment">//更新以x为根节点的子树</span></span><br><span class="line">            x=read(),z=read();</span><br><span class="line">            update(id[x],id[x]+siz[x]<span class="number">-1</span>,z,<span class="number">1</span>,n,<span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123; <span class="comment">//查询以x为根节点的子树</span></span><br><span class="line">            x=read();</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,querysum(id[x],id[x]+siz[x]<span class="number">-1</span>,<span class="number">1</span>,n,<span class="number">1</span>));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//边权版</span></span><br><span class="line"><span class="keyword">int</span> fa[maxn],deep[maxn],siz[maxn],son[maxn],rk[maxn],top[maxn],id[maxn];</span><br><span class="line"><span class="keyword">int</span> dis[maxn],w[maxn];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs1</span><span class="params">(<span class="keyword">int</span> u,<span class="keyword">int</span> pre,<span class="keyword">int</span> dep)</span></span>&#123;</span><br><span class="line">    fa[u]=pre;deep[u]=dep;siz[u]=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=head[u];i;i=e[i].next)&#123;</span><br><span class="line">        <span class="keyword">int</span> v=e[i].to;</span><br><span class="line">        <span class="keyword">if</span>(v==pre)<span class="keyword">continue</span>;</span><br><span class="line">        dis[v]=dis[u]+e[i].v;</span><br><span class="line">        dfs1(v,u,dep+<span class="number">1</span>);</span><br><span class="line">        siz[u]+=siz[v];</span><br><span class="line">        <span class="keyword">if</span>(siz[v]&gt;siz[son[u]])son[u]=v;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs2</span><span class="params">(<span class="keyword">int</span> u,<span class="keyword">int</span> t)</span></span>&#123;</span><br><span class="line">    top[u]=t;id[u]=++cnt;rk[cnt]=u;</span><br><span class="line">    <span class="keyword">if</span>(!son[u])<span class="keyword">return</span>;</span><br><span class="line">    dfs2(son[u],t);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=head[u];i;i=e[i].next)&#123;</span><br><span class="line">        <span class="keyword">int</span> v=e[i].to;</span><br><span class="line">        <span class="keyword">if</span>(v!=son[u]&amp;&amp;v!=fa[u])dfs2(v,v);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">PathQuery</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> ans=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(top[x]!=top[y])&#123;</span><br><span class="line">        <span class="keyword">if</span>(deep[top[x]]&lt;deep[top[y]]) swap(x,y);</span><br><span class="line">        ans=max(ans,query(id[top[x]],id[x],<span class="number">1</span>,n,<span class="number">1</span>));</span><br><span class="line">        x=fa[top[x]];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(x==y)<span class="keyword">return</span> ans;</span><br><span class="line">    <span class="keyword">if</span>(deep[x]&gt;deep[y]) swap(x,y);</span><br><span class="line">    ans=max(ans,query(id[son[x]],id[y],<span class="number">1</span>,n,<span class="number">1</span>));</span><br><span class="line">    <span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">PathUpdate</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y,<span class="keyword">int</span> v)</span></span>&#123;</span><br><span class="line">    <span class="keyword">while</span>(top[x]!=top[y])&#123;</span><br><span class="line">        <span class="keyword">if</span>(deep[top[x]]&lt;deep[top[y]]) swap(x,y);</span><br><span class="line">        update(id[top[x]],id[x],v,<span class="number">1</span>,n,<span class="number">1</span>);</span><br><span class="line">        x=fa[top[x]];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(x==y)<span class="keyword">return</span>;</span><br><span class="line">    <span class="keyword">if</span>(deep[x]&gt;deep[y]) swap(x,y);</span><br><span class="line">    update(id[son[x]],id[y],v,<span class="number">1</span>,n,<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n<span class="number">-1</span>;i++)&#123;</span><br><span class="line">    <span class="keyword">if</span>(deep[E[i].u]&lt;deep[E[i].v]) swap(E[i].u,E[i].v);</span><br><span class="line">    w[E[i].u]=E[i].w;   <span class="comment">//边权放在下面结点上变为点权</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="LCA"><a href="#LCA" class="headerlink" title="LCA"></a>LCA</h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> deep[maxn],f[maxn],dis[maxn],p[maxn][<span class="number">30</span>];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> pre,<span class="keyword">int</span> d)</span></span>&#123;</span><br><span class="line">    deep[x]=d;</span><br><span class="line">    f[x]=pre;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=head[x];i;i=e[i].next)&#123;</span><br><span class="line">        <span class="keyword">int</span> to=e[i].to;</span><br><span class="line">        <span class="keyword">if</span>(to!=pre)&#123;</span><br><span class="line">            dis[to]=dis[x]+e[i].w;</span><br><span class="line">            dfs(to,x,d+<span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">init</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="comment">//p[i][j]表示i结点的第2^j祖先</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;(<span class="number">1</span>&lt;&lt;j)&lt;=n;j++)</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">            p[i][j]=<span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)p[i][<span class="number">0</span>]=f[i];</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;(<span class="number">1</span>&lt;&lt;j)&lt;=n;j++)</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">            <span class="keyword">if</span>(p[i][j<span class="number">-1</span>]!=<span class="number">-1</span>)</span><br><span class="line">            p[i][j]=p[p[i][j<span class="number">-1</span>]][j<span class="number">-1</span>];<span class="comment">//i的第2^j祖先就是i的第2^(j-1)祖先的第2^(j-1)祖先</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">LCA</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> b)</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i,j;</span><br><span class="line">    <span class="keyword">if</span>(deep[a]&lt;deep[b])swap(a,b);</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>;(<span class="number">1</span>&lt;&lt;i)&lt;=deep[a];i++);</span><br><span class="line">    i--;</span><br><span class="line">    <span class="comment">//使a,b两点的深度相同</span></span><br><span class="line">    <span class="keyword">for</span>(j=i;j&gt;=<span class="number">0</span>;j--)</span><br><span class="line">        <span class="keyword">if</span>(deep[a]-(<span class="number">1</span>&lt;&lt;j)&gt;=deep[b])</span><br><span class="line">        a=p[a][j];</span><br><span class="line">    <span class="keyword">if</span>(a==b)<span class="keyword">return</span> a;</span><br><span class="line">    <span class="comment">//倍增法，每次向上进深度2^j，找到最近公共祖先的子结点</span></span><br><span class="line">    <span class="keyword">for</span>(j=i;j&gt;=<span class="number">0</span>;j--)&#123;</span><br><span class="line">        <span class="keyword">if</span>(p[a][j]!=<span class="number">-1</span>&amp;&amp;p[a][j]!=p[b][j])&#123;</span><br><span class="line">            a=p[a][j];</span><br><span class="line">            b=p[b][j];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> f[a];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//树链剖分</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">query_lca</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span></span>&#123;</span><br><span class="line">    <span class="keyword">while</span>(top[x]!=top[y])&#123;</span><br><span class="line">        <span class="keyword">if</span>(deep[top[x]]&lt;deep[top[y]])swap(x,y);</span><br><span class="line">        x=fa[top[x]];</span><br><span class="line">    &#125;<span class="keyword">return</span> deep[x]&lt;deep[y]?x:y;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="树分治"><a href="#树分治" class="headerlink" title="树分治"></a>树分治</h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//有多少对点之间的距离小于等于k</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn=<span class="number">4e4</span>+<span class="number">10</span>;</span><br><span class="line"><span class="keyword">int</span> head[maxn],siz[maxn],dep[maxn],vis[maxn],f[maxn],o[maxn];</span><br><span class="line"><span class="keyword">int</span> rt,ans,ecnt,cnt,sum,n,k;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">edge</span>&#123;</span></span><br><span class="line">    <span class="keyword">int</span> to,next,w;</span><br><span class="line">&#125;e[maxn&lt;&lt;<span class="number">1</span>];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">init</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">memset</span>(head,<span class="number">0</span>,<span class="keyword">sizeof</span> head);</span><br><span class="line">    <span class="built_in">memset</span>(vis,<span class="number">0</span>,<span class="keyword">sizeof</span> vis);</span><br><span class="line">    ecnt=<span class="number">0</span>;</span><br><span class="line">    cnt=<span class="number">0</span>;</span><br><span class="line">    ans=<span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y,<span class="keyword">int</span> w)</span></span>&#123;</span><br><span class="line">    e[++ecnt].to=y;</span><br><span class="line">    e[ecnt].w=w;</span><br><span class="line">    e[ecnt].next=head[x];</span><br><span class="line">    head[x]=ecnt;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">getroot</span><span class="params">(<span class="keyword">int</span> u,<span class="keyword">int</span> fa)</span></span>&#123;</span><br><span class="line">    siz[u]=<span class="number">1</span>;f[u]=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=head[u]; i; i=e[i].next)&#123;</span><br><span class="line">        <span class="keyword">int</span> v=e[i].to;</span><br><span class="line">        <span class="keyword">if</span>(v==fa || vis[v]) <span class="keyword">continue</span>;</span><br><span class="line">        getroot(v,u);</span><br><span class="line">        siz[u]+=siz[v];</span><br><span class="line">        f[u]=max(f[u],siz[v]);</span><br><span class="line">    &#125;</span><br><span class="line">    f[u]=max(f[u],sum-siz[u]);</span><br><span class="line">    <span class="keyword">if</span>(f[u] &lt; f[rt]) rt=u;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">getdeep</span><span class="params">(<span class="keyword">int</span> u,<span class="keyword">int</span> fa)</span></span>&#123;</span><br><span class="line">    o[++cnt]=dep[u];</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=head[u]; i; i=e[i].next)&#123;</span><br><span class="line">        <span class="keyword">int</span> v=e[i].to;</span><br><span class="line">        <span class="keyword">if</span>(v==fa || vis[v]) <span class="keyword">continue</span>;</span><br><span class="line">        dep[v]=dep[u]+e[i].w;</span><br><span class="line">        getdeep(v,u);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">cal</span><span class="params">(<span class="keyword">int</span> u,<span class="keyword">int</span> d)</span></span>&#123;</span><br><span class="line">    cnt=<span class="number">0</span>;</span><br><span class="line">    dep[u]=d;</span><br><span class="line">    getdeep(u,<span class="number">0</span>);</span><br><span class="line">    sort(o+<span class="number">1</span>,o+<span class="number">1</span>+cnt);</span><br><span class="line">    <span class="keyword">int</span> l=<span class="number">1</span>,r=cnt,res=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(l &lt; r)&#123;</span><br><span class="line">        <span class="keyword">if</span>(o[l]+o[r] &lt;= k) res+=(r-l),l++;</span><br><span class="line">        <span class="keyword">else</span> r--;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">slove</span><span class="params">(<span class="keyword">int</span> u)</span></span>&#123;</span><br><span class="line">    ans+=cal(u,<span class="number">0</span>);</span><br><span class="line">    vis[u]=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=head[u]; i; i=e[i].next)&#123;</span><br><span class="line">        <span class="keyword">int</span> v=e[i].to;</span><br><span class="line">        <span class="keyword">if</span>(vis[v]) <span class="keyword">continue</span>;</span><br><span class="line">        ans-=cal(v,e[i].w);</span><br><span class="line">        sum=siz[v];</span><br><span class="line">        rt=<span class="number">0</span>;</span><br><span class="line">        getroot(v,<span class="number">0</span>);</span><br><span class="line">        slove(rt);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">while</span>(~<span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n))&#123;</span><br><span class="line">        init();</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;n<span class="number">-1</span>; i++)&#123;</span><br><span class="line">            <span class="keyword">int</span> x,y,w;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">"%d %d %d"</span>,&amp;x,&amp;y,&amp;w);</span><br><span class="line">            add(x,y,w);</span><br><span class="line">            add(y,x,w);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;k);</span><br><span class="line">        rt=<span class="number">0</span>;</span><br><span class="line">        sum=f[<span class="number">0</span>]=n;</span><br><span class="line">        getroot(<span class="number">1</span>,<span class="number">0</span>);</span><br><span class="line">        slove(rt);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,ans);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="单调队列"><a href="#单调队列" class="headerlink" title="单调队列"></a>单调队列</h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//n个数，滑动窗口为k，求每次的最大值和最小值</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">1e6</span>+<span class="number">10</span>;</span><br><span class="line"><span class="keyword">int</span> qmax[maxn],idmin[maxn];</span><br><span class="line"><span class="keyword">int</span> qmin[maxn],idmax[maxn];</span><br><span class="line"><span class="keyword">int</span> ans[maxn];</span><br><span class="line"><span class="keyword">int</span> hmax,tmax,hmin,tmin;</span><br><span class="line"><span class="keyword">int</span> n,k;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d %d"</span>,&amp;n,&amp;k);</span><br><span class="line">    hmax=<span class="number">1</span>,hmin=<span class="number">1</span>;</span><br><span class="line">    tmax=<span class="number">0</span>,tmin=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">int</span> cnt=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=n; i++)&#123;</span><br><span class="line">        <span class="keyword">int</span> a;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;a);</span><br><span class="line">        <span class="keyword">while</span>(hmax&lt;=tmax &amp;&amp; qmax[tmax]&lt;=a)&#123;</span><br><span class="line">            tmax--;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">while</span>(hmin&lt;=tmin &amp;&amp; qmin[tmin]&gt;=a)&#123;</span><br><span class="line">            tmin--;</span><br><span class="line">        &#125;</span><br><span class="line">        qmax[++tmax]=a;</span><br><span class="line">        qmin[++tmin]=a;</span><br><span class="line">        idmax[tmax]=idmin[tmin]=i;</span><br><span class="line">        <span class="keyword">while</span>(idmax[hmax]&lt;=i-k) hmax++;</span><br><span class="line">        <span class="keyword">while</span>(idmin[hmin]&lt;=i-k) hmin++;</span><br><span class="line">        <span class="keyword">if</span>(i&gt;=k) <span class="built_in">printf</span>(<span class="string">"%d%c"</span>,qmin[hmin],i&lt;n?<span class="string">' '</span>:<span class="string">'\n'</span>);</span><br><span class="line">        <span class="keyword">if</span>(i&gt;=k) ans[cnt++]=qmax[hmax];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d"</span>,ans[<span class="number">0</span>]);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;cnt; i++) <span class="built_in">printf</span>(<span class="string">" %d"</span>,ans[i]);</span><br><span class="line">    <span class="built_in">puts</span>(<span class="string">""</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="单调栈"><a href="#单调栈" class="headerlink" title="单调栈"></a>单调栈</h4><p>最大全1矩阵问题</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> N 2009</span></span><br><span class="line"><span class="keyword">int</span> n,m;</span><br><span class="line"><span class="keyword">int</span> M[N][N];</span><br><span class="line"><span class="keyword">int</span> h[N][N];</span><br><span class="line"><span class="keyword">int</span> ans;</span><br><span class="line"><span class="keyword">int</span> s[N],L[N],R[N];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">fin</span><span class="params">(<span class="keyword">int</span> row)</span></span>&#123;<span class="comment">//相同不出栈</span></span><br><span class="line">    s[<span class="number">0</span>]=<span class="number">0</span>;<span class="keyword">int</span> top=<span class="number">0</span>;</span><br><span class="line">    h[row][m+<span class="number">1</span>]=<span class="number">0</span>;<span class="comment">//用于得到最后没出栈元素的R</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m+<span class="number">1</span>;i++)&#123;</span><br><span class="line">        <span class="keyword">int</span> ar=s[top];</span><br><span class="line">        <span class="keyword">while</span>(h[row][i]&lt;h[row][ar])&#123;</span><br><span class="line">            R[ar]=i;top--;</span><br><span class="line">            ar=s[top];</span><br><span class="line">        &#125;</span><br><span class="line">        L[i]=ar;s[++top]=i;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++)</span><br><span class="line">        <span class="keyword">if</span>(h[row][i])</span><br><span class="line">        ans=max(ans,h[row][i]*(R[i]-L[i]<span class="number">-1</span>));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">fin_</span><span class="params">(<span class="keyword">int</span> row)</span></span>&#123;<span class="comment">//相同出栈</span></span><br><span class="line">    s[<span class="number">0</span>]=<span class="number">0</span>;<span class="keyword">int</span> top=<span class="number">0</span>;</span><br><span class="line">    h[row][m+<span class="number">1</span>]=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m+<span class="number">1</span>;i++)&#123;</span><br><span class="line">        <span class="keyword">int</span> ar=s[top];</span><br><span class="line">        <span class="keyword">while</span>(h[row][i]&lt;=h[row][ar])&#123;</span><br><span class="line">            R[ar]=i;top--;</span><br><span class="line">            <span class="keyword">if</span>(top&lt;<span class="number">0</span>)<span class="keyword">break</span>;<span class="comment">//最后m+1的时候把s[0]也出栈了</span></span><br><span class="line">            ar=s[top];</span><br><span class="line">        &#125;</span><br><span class="line">        L[i]=ar;s[++top]=i;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++)</span><br><span class="line">        <span class="keyword">if</span>(h[row][i])</span><br><span class="line">        ans=max(ans,h[row][i]*(R[i]-L[i]<span class="number">-1</span>));</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">关于相同元素出栈</span></span><br><span class="line"><span class="comment">假设不出栈，h[s[2]]==h[4]==2，</span></span><br><span class="line"><span class="comment">本来这个点是可以延伸到的，但是我们不出栈，</span></span><br><span class="line"><span class="comment">所以第二个数的L不准确了，但是第一个数的R准确了，</span></span><br><span class="line"><span class="comment">那么第一个数因为遇到不相同的出栈了，得到的就是准确的</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">如果出栈的话，前面那个点的R就不准确了</span></span><br><span class="line"><span class="comment">但是接下来的相同的数的L是准确的，</span></span><br><span class="line"><span class="comment">只要遇到一个不相同的使任意一个出栈，</span></span><br><span class="line"><span class="comment">那么最后一个相同的数的R就是准确的了，</span></span><br><span class="line"><span class="comment">因此得到的还是一段准确的区间</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;n,&amp;m)!=EOF)&#123;</span><br><span class="line">        <span class="built_in">memset</span>(h,<span class="number">0</span>,<span class="keyword">sizeof</span> h);</span><br><span class="line">        ans=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=m;j++)&#123;</span><br><span class="line">                <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;M[i][j]);</span><br><span class="line">                <span class="keyword">if</span>(M[i][j])h[i][j]=h[i<span class="number">-1</span>][j]+<span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)fin(i);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,ans);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">4 4</span></span><br><span class="line"><span class="comment">0 1 1 1</span></span><br><span class="line"><span class="comment">1 0 1 1</span></span><br><span class="line"><span class="comment">1 1 1 1</span></span><br><span class="line"><span class="comment">1 1 1 0</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure><h4 id="莫队"><a href="#莫队" class="headerlink" title="莫队"></a>莫队</h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//求区间元素个数</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn=<span class="number">1e6</span>+<span class="number">10</span>;</span><br><span class="line"><span class="keyword">int</span> a[maxn],n,m,cnt[maxn],ans=<span class="number">0</span>,anss[maxn],block;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span>&#123;</span></span><br><span class="line">    <span class="keyword">int</span> L,R,i;</span><br><span class="line">&#125;q[maxn];</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmp</span><span class="params">(node x,node y)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(x.L/block != y.L/block) <span class="keyword">return</span> x.L/block &lt; y.L/block;</span><br><span class="line">    <span class="keyword">return</span> x.R &lt; y.R;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> p)</span></span>&#123;</span><br><span class="line">    cnt[a[p]]++;</span><br><span class="line">    <span class="keyword">if</span>(cnt[a[p]] == <span class="number">1</span>) ans++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">del</span><span class="params">(<span class="keyword">int</span> p)</span></span>&#123;</span><br><span class="line">    cnt[a[p]]--;</span><br><span class="line">    <span class="keyword">if</span>(cnt[a[p]] == <span class="number">0</span>) ans--;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</span><br><span class="line">    block=<span class="built_in">sqrt</span>(n);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=n; i++) <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;a[i]);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;m);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=m; i++)&#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d %d"</span>,&amp;q[i].L,&amp;q[i].R);</span><br><span class="line">        q[i].i=i;</span><br><span class="line">    &#125;</span><br><span class="line">    sort(q+<span class="number">1</span>,q+m+<span class="number">1</span>,cmp);</span><br><span class="line">    <span class="keyword">int</span> cL=<span class="number">1</span>,cR=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=m; i++)&#123;</span><br><span class="line">        <span class="keyword">int</span> L=q[i].L,R=q[i].R;</span><br><span class="line">        <span class="keyword">while</span>(cL &lt; L) del(cL++);</span><br><span class="line">        <span class="keyword">while</span>(cL &gt; L) add(--cL);</span><br><span class="line">        <span class="keyword">while</span>(cR &lt; R) add(++cR);</span><br><span class="line">        <span class="keyword">while</span>(cR &gt; R) del(cR--);</span><br><span class="line">        anss[q[i].i]=ans;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=m; i++) <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,anss[i]);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="hash"><a href="#hash" class="headerlink" title="hash"></a>hash</h4><h5 id="字符串hash"><a href="#字符串hash" class="headerlink" title="字符串hash"></a>字符串hash</h5><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="keyword">unsigned</span> <span class="keyword">long</span> <span class="keyword">long</span> ull;</span><br><span class="line"><span class="comment">//ull 会溢出取模</span></span><br><span class="line"><span class="keyword">const</span> ull base=<span class="number">233</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn=<span class="number">1e5</span>+<span class="number">10</span>;</span><br><span class="line"><span class="keyword">char</span> s[maxn];</span><br><span class="line">ull hs[maxn],p[maxn];</span><br><span class="line"><span class="function">ull <span class="title">geths</span><span class="params">(<span class="keyword">int</span> l,<span class="keyword">int</span> r)</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> (ull)hs[r]-p[r-l+<span class="number">1</span>]*hs[l<span class="number">-1</span>];</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">init</span><span class="params">()</span></span>&#123;</span><br><span class="line">    p[<span class="number">0</span>]=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;maxn; i++) p[i]=p[i<span class="number">-1</span>]*base;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%s"</span>,s+<span class="number">1</span>);</span><br><span class="line">    <span class="keyword">int</span> len=<span class="built_in">strlen</span>(s+<span class="number">1</span>);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=len; i++)&#123;</span><br><span class="line">        hs[i]=hs[i<span class="number">-1</span>]*base+s[i];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="手写hash"><a href="#手写hash" class="headerlink" title="手写hash"></a>手写hash</h5><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Hash</span>&#123;</span></span><br><span class="line">    ll mod = <span class="number">2908361</span>;</span><br><span class="line">    ll cnt = <span class="number">0</span>, Head[<span class="number">2908361</span>], nxt[<span class="number">1000006</span>];</span><br><span class="line">    ll val[<span class="number">1000006</span>], pos[<span class="number">1000006</span>];</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">init</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="built_in">memset</span>(Head, <span class="number">-1</span>, <span class="keyword">sizeof</span>(Head)); cnt = <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Insert</span><span class="params">(ll x, ll v)</span></span>&#123;</span><br><span class="line">        ll key = x % mod;</span><br><span class="line">        pos[cnt] = x, val[cnt] = v, nxt[cnt] = Head[key];</span><br><span class="line">        Head[key] = cnt++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function">ll <span class="title">Find</span><span class="params">(ll x)</span></span>&#123;</span><br><span class="line">        ll key = x % mod;</span><br><span class="line">        <span class="keyword">for</span>(ll i = Head[key]; ~i; i = nxt[i])&#123;</span><br><span class="line">            <span class="keyword">if</span>(pos[i] == x) <span class="keyword">return</span> val[i];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">-1l</span>l;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;hs;</span><br></pre></td></tr></table></figure><h4 id="KMP"><a href="#KMP" class="headerlink" title="KMP"></a>KMP</h4><h5 id="KMP-1"><a href="#KMP-1" class="headerlink" title="KMP"></a>KMP</h5><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn=<span class="number">1e5</span>+<span class="number">10</span>;</span><br><span class="line"><span class="keyword">char</span> s[maxn];</span><br><span class="line"><span class="keyword">char</span> t[maxn];</span><br><span class="line"><span class="keyword">int</span> nex[maxn],len;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">cal</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i,j;</span><br><span class="line">    nex[<span class="number">0</span>]=j=<span class="number">-1</span>;</span><br><span class="line">    i=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(i&lt;m)&#123; <span class="comment">//m是t的长度</span></span><br><span class="line">        <span class="keyword">while</span>(j!=<span class="number">-1</span> &amp;&amp; t[j]!=t[i]) j=nex[j];</span><br><span class="line">        nex[++i] = ++j;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">kmp</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i=<span class="number">0</span>,j=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(i&lt;n)&#123; <span class="comment">//n是s的长度</span></span><br><span class="line">        <span class="keyword">while</span>(j!=<span class="number">-1</span> &amp;&amp; s[i]!=t[j]) j=nex[j];</span><br><span class="line">        i++;</span><br><span class="line">        j++;</span><br><span class="line">        <span class="keyword">if</span>(j&gt;=m) <span class="keyword">return</span> i;<span class="comment">//返回最后匹配的位置</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//给定字符串，对于整个串，求最短循环节的次数</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">1e6</span>+<span class="number">10</span>;</span><br><span class="line"><span class="keyword">int</span> nex[maxn],len;</span><br><span class="line"><span class="keyword">char</span> s[maxn];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">cal</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i,j;</span><br><span class="line">    nex[<span class="number">0</span>]=j=<span class="number">-1</span>;</span><br><span class="line">    i=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(i&lt;len)&#123;</span><br><span class="line">        <span class="keyword">while</span>(j!=<span class="number">-1</span> &amp;&amp; s[j]!=s[i]) j=nex[j];</span><br><span class="line">        nex[++i]=++j;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">while</span>(~<span class="built_in">scanf</span>(<span class="string">"%s"</span>,s))&#123;</span><br><span class="line">        <span class="keyword">if</span>(s[<span class="number">0</span>] == <span class="string">'.'</span>) <span class="keyword">break</span>;</span><br><span class="line">        len=<span class="built_in">strlen</span>(s);</span><br><span class="line">        cal();</span><br><span class="line">        <span class="keyword">int</span> ans=<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">if</span>(len%(len-nex[len])==<span class="number">0</span>) ans=len/(len-nex[len]);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,ans);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="扩展KMP"><a href="#扩展KMP" class="headerlink" title="扩展KMP"></a>扩展KMP</h5><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//next[i]表示t[i...m-1]与t[0...m-1]的最长公共前缀</span></span><br><span class="line"><span class="comment">//extend[i]表示s[i...n-1]与t[0...m-1]的最长公共前缀</span></span><br><span class="line"><span class="keyword">int</span> Next[maxn],extend[maxn];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">getNext</span><span class="params">(<span class="keyword">char</span> t[],<span class="keyword">int</span> m)</span></span>&#123;</span><br><span class="line">    Next[<span class="number">0</span>]=m;</span><br><span class="line">    <span class="keyword">int</span> j=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(j+<span class="number">1</span>&lt;m&amp;&amp;t[j]==t[j+<span class="number">1</span>]) j++;</span><br><span class="line">    Next[<span class="number">1</span>]=j;</span><br><span class="line">    <span class="keyword">int</span> k=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;m;i++)&#123;</span><br><span class="line">        <span class="keyword">int</span> p=Next[k]+k<span class="number">-1</span>;</span><br><span class="line">        <span class="keyword">int</span> L=Next[i-k];</span><br><span class="line">        <span class="keyword">if</span>(i+L&lt;p+<span class="number">1</span>) Next[i]=L;</span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">            j=max(<span class="number">0</span>,p-i+<span class="number">1</span>);</span><br><span class="line">            <span class="keyword">while</span>(i+j&lt;m&amp;&amp;t[i+j]==t[j]) j++;</span><br><span class="line">            Next[i]=j;</span><br><span class="line">            k=i;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">extendkmp</span><span class="params">(<span class="keyword">char</span> t[],<span class="keyword">int</span> m,<span class="keyword">char</span> s[],<span class="keyword">int</span> n)</span></span>&#123;</span><br><span class="line">    getNext(t,m);</span><br><span class="line">    <span class="keyword">int</span> j=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(j&lt;n&amp;&amp;j&lt;m&amp;&amp;t[j]==s[j]) j++;</span><br><span class="line">    extend[<span class="number">0</span>]=j;</span><br><span class="line">    <span class="keyword">int</span> k=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;n;i++)&#123;</span><br><span class="line">        <span class="keyword">int</span> p=extend[k]+k<span class="number">-1</span>;</span><br><span class="line">        <span class="keyword">int</span> L=Next[i-k];</span><br><span class="line">        <span class="keyword">if</span>(i+L&lt;p+<span class="number">1</span>) extend[i]=L;</span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">            j=max(<span class="number">0</span>,p-i+<span class="number">1</span>);</span><br><span class="line">            <span class="keyword">while</span>(i+j&lt;n&amp;&amp;j&lt;m&amp;&amp;s[i+j]==t[j]) j++;</span><br><span class="line">            extend[i]=j;</span><br><span class="line">            k=i;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="SAM"><a href="#SAM" class="headerlink" title="SAM"></a>SAM</h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> maxc 30</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">250000</span>+<span class="number">10</span>;</span><br><span class="line"><span class="keyword">char</span> str[maxn];</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">SAM</span>&#123;</span></span><br><span class="line">    <span class="keyword">int</span> len[maxn * <span class="number">2</span>], <span class="comment">//最长子串的长度(该节点字串数量=len[x]-len[link[x]])</span></span><br><span class="line">    link[maxn * <span class="number">2</span>],   <span class="comment">//后缀链接(最短串前部减少一个字符所到达的状态)</span></span><br><span class="line">    cnt[maxn * <span class="number">2</span>],    <span class="comment">//被后缀连接的数</span></span><br><span class="line">    nex[maxn * <span class="number">2</span>][maxc],  <span class="comment">//状态转移(尾部加一个字符的下一个状态)(图)</span></span><br><span class="line">    idx, <span class="comment">//节点编号</span></span><br><span class="line">    last;    <span class="comment">//最后节点</span></span><br><span class="line">    <span class="keyword">int</span> epos[maxn * <span class="number">2</span>]; <span class="comment">// enpos数（该状态子串出现数量）</span></span><br><span class="line">    <span class="keyword">int</span> a[maxn];<span class="comment">//长度为i的子串出现最大次数</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">init</span><span class="params">()</span> </span>&#123;<span class="comment">//初始化</span></span><br><span class="line">        last = idx = <span class="number">1</span>; <span class="comment">//1表示root起始点 空集</span></span><br><span class="line">        link[<span class="number">1</span>] = len[<span class="number">1</span>] = <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//SAM建图</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> c)</span></span>&#123;     <span class="comment">//插入字符，为字符ascll码值</span></span><br><span class="line">        c-=<span class="string">'a'</span>;</span><br><span class="line">        <span class="keyword">int</span> x = ++idx; <span class="comment">//创建一个新节点x;</span></span><br><span class="line">        len[x] = len[last] + <span class="number">1</span>; <span class="comment">//  长度等于最后一个节点+1</span></span><br><span class="line">        epos[x] = <span class="number">1</span>;  <span class="comment">//接受节点子串除后缀连接还需加一</span></span><br><span class="line">        <span class="keyword">int</span> p;  <span class="comment">//第一个有C转移的节点;</span></span><br><span class="line">        <span class="keyword">for</span>(p = last; p &amp;&amp; !nex[p][c]; p = link[p]) </span><br><span class="line">            nex[p][c] = x;<span class="comment">//沿着后缀连接 将所有没有字符c转移的节点直接指向新节点</span></span><br><span class="line">        <span class="keyword">if</span>(!p) link[x] = <span class="number">1</span>, cnt[<span class="number">1</span>]++;  <span class="comment">//全部都没有c的转移 直接将新节点后缀连接到起点</span></span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">int</span> q = nex[p][c];    <span class="comment">//p通过c转移到的节点</span></span><br><span class="line">            <span class="keyword">if</span> (len[p] + <span class="number">1</span> == len[q])    <span class="comment">//pq是连续的</span></span><br><span class="line">                link[x] = q, cnt[q]++; <span class="comment">//将新节点后缀连接指向q即可,q节点的被后缀连接数+1</span></span><br><span class="line">            <span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="keyword">int</span> nq = ++idx;   <span class="comment">//不连续 需要复制一份q节点</span></span><br><span class="line">                len[nq] = len[p] + <span class="number">1</span>;   <span class="comment">//令nq与p连续</span></span><br><span class="line">                link[nq] = link[q];   <span class="comment">//因后面link[q]改变此处不加cnt</span></span><br><span class="line">                <span class="built_in">memcpy</span>(nex[nq], nex[q], <span class="keyword">sizeof</span>(nex[q]));  <span class="comment">//复制q的信息给nq</span></span><br><span class="line">                <span class="keyword">for</span> (; p&amp;&amp;nex[p][c] == q; p = link[p])</span><br><span class="line">                    nex[p][c] = nq;    <span class="comment">//沿着后缀连接 将所有通过c转移为q的改为nq</span></span><br><span class="line">                link[q] = link[x] = nq; <span class="comment">//将x和q后缀连接改为nq</span></span><br><span class="line">                cnt[nq] += <span class="number">2</span>; <span class="comment">//  nq增加两个后缀连接</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        last=x;  <span class="comment">//更新最后处理的节点</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">GetNpos</span><span class="params">()</span></span>&#123;<span class="comment">//求npos数，即该节点字串出现次数</span></span><br><span class="line">        <span class="built_in">queue</span>&lt;<span class="keyword">int</span>&gt;q;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= idx; i++)</span><br><span class="line">            <span class="keyword">if</span> (!cnt[i])q.push(i);   <span class="comment">//将所有没被后缀连接指向的节点入队</span></span><br><span class="line">        <span class="keyword">while</span> (!q.empty())&#123;</span><br><span class="line">            <span class="keyword">int</span> x = q.front();</span><br><span class="line">            q.pop();</span><br><span class="line">            epos[link[x]] += epos[x]; <span class="comment">//子串数量等于所有后缀连接指向该节点的子串数量和+是否为接受节点</span></span><br><span class="line">            <span class="keyword">if</span> (--cnt[link[x]] == <span class="number">0</span>)q.push(link[x]);   <span class="comment">//当所有后缀连接指向该节点的处理完毕后再入队</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">GetSubNum</span><span class="params">()</span></span>&#123;<span class="comment">//求不相同字串数量</span></span><br><span class="line">        <span class="keyword">int</span> ans = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">2</span>; i &lt;= idx; i++) ans+=(len[i]-len[link[i]]);<span class="comment">//一状态子串数量等于len[i]-len[link[i]]</span></span><br><span class="line">        <span class="keyword">return</span> ans;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">GetSubMax</span><span class="params">()</span></span>&#123;<span class="comment">//求出所有长度为k的子串中出现次数最多的子串出现次数</span></span><br><span class="line">        GetNpos();</span><br><span class="line">        <span class="keyword">int</span> n = <span class="built_in">strlen</span>(str+<span class="number">1</span>);</span><br><span class="line">        <span class="comment">//printf("%d\n",n);</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= idx; i++) </span><br><span class="line">            a[len[i]] = max(a[len[i]], epos[i]);<span class="comment">//长度≤k的子串中出现次数最多的子串出现次数的最小值</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = n - <span class="number">1</span>; i &gt;= <span class="number">1</span>; i--) a[i] = max(a[i], a[i + <span class="number">1</span>]);<span class="comment">//求一遍后缀最大值就是答案</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++) <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, a[i]);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;sam;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">while</span>(~<span class="built_in">scanf</span>(<span class="string">"%s"</span>,str+<span class="number">1</span>))&#123;</span><br><span class="line">        sam.init();</span><br><span class="line">        <span class="keyword">int</span> len=<span class="built_in">strlen</span>(str+<span class="number">1</span>);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=len; i++) sam.add(str[i]);</span><br><span class="line">        sam.GetSubMax();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="SA"><a href="#SA" class="headerlink" title="SA"></a>SA</h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//清巨那偷来的板子QAQ</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">SuffixArray</span>&#123;</span></span><br><span class="line">    <span class="comment">// S下标从1开始,S[n+1]为0，S[1...n]非零</span></span><br><span class="line">    <span class="comment">//sa:字典序中排第i位的起始位置在str中第sa[i]</span></span><br><span class="line">    <span class="comment">//rank:就是str第i个位置的后缀是在字典序排第几</span></span><br><span class="line">    <span class="comment">//height：字典序排i和i-1的后缀的最长公共前缀</span></span><br><span class="line">    <span class="keyword">int</span> s[N&lt;&lt;<span class="number">1</span>],t[N&lt;&lt;<span class="number">1</span>],ht[N],sa[N],rk[N],p[N],c[N],w[N];</span><br><span class="line">    <span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">trans</span><span class="params">(<span class="keyword">int</span> n,<span class="keyword">const</span> <span class="keyword">char</span>* S)</span></span>&#123;</span><br><span class="line">        <span class="keyword">int</span> m=*max_element(S+<span class="number">1</span>,S+<span class="number">1</span>+n);</span><br><span class="line">        <span class="built_in">memset</span>(rk,<span class="number">0</span>,(m+<span class="number">1</span>)&lt;&lt;<span class="number">2</span>); <span class="comment">//</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;++i) rk[S[i]]=<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;++i) rk[i]+=rk[i<span class="number">-1</span>];</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;++i) s[i]=rk[S[i]];</span><br><span class="line">        <span class="keyword">return</span> rk[m];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">#<span class="meta-keyword">define</span> ps(x) sa[w[s[x]]--]=x</span></span><br><span class="line">    <span class="meta">#<span class="meta-keyword">define</span> pl(x) sa[w[s[x]]++]=x</span></span><br><span class="line">    <span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">radix</span><span class="params">(<span class="keyword">int</span>* v,<span class="keyword">int</span>* s,<span class="keyword">int</span>* t,<span class="keyword">int</span> n,<span class="keyword">int</span> m,<span class="keyword">int</span> n1)</span></span>&#123;</span><br><span class="line">    <span class="built_in">memset</span>(sa,<span class="number">0</span>,(n+<span class="number">1</span>)&lt;&lt;<span class="number">2</span>); <span class="built_in">memset</span>(c,<span class="number">0</span>,(m+<span class="number">1</span>)&lt;&lt;<span class="number">2</span>);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;++i) ++c[s[i]];</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;++i) w[i]=c[i]+=c[i<span class="number">-1</span>];</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=n1;i;--i) ps(v[i]);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;++i) w[i]=c[i<span class="number">-1</span>]+<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;++i) <span class="keyword">if</span>(sa[i]&gt;<span class="number">1</span> &amp;&amp; t[sa[i]<span class="number">-1</span>]) pl(sa[i]<span class="number">-1</span>);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;++i) w[i]=c[i];</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=n;i;--i) <span class="keyword">if</span>(sa[i]&gt;<span class="number">1</span> &amp;&amp; !t[sa[i]<span class="number">-1</span>]) ps(sa[i]<span class="number">-1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">SAIS</span><span class="params">(<span class="keyword">int</span> n,<span class="keyword">int</span> m,<span class="keyword">int</span>* s,<span class="keyword">int</span>* t,<span class="keyword">int</span>* p)</span></span>&#123;</span><br><span class="line">        <span class="keyword">int</span> n1=<span class="number">0</span>,ch=rk[<span class="number">1</span>]=<span class="number">0</span>,*s1=s+n; t[n]=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=n<span class="number">-1</span>;i;--i) t[i]=s[i]==s[i+<span class="number">1</span>]?t[i+<span class="number">1</span>]:s[i]&gt;s[i+<span class="number">1</span>];</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=n;++i) rk[i]=t[i<span class="number">-1</span>]&amp;&amp;!t[i]?(p[++n1]=i,n1):<span class="number">0</span>;</span><br><span class="line">        radix(p,s,t,n,m,n1);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>,x,y;i&lt;=n;++i) <span class="keyword">if</span>(x=rk[sa[i]])&#123;</span><br><span class="line">            <span class="keyword">if</span>(ch&lt;=<span class="number">1</span> || p[x+<span class="number">1</span>]-p[x]!=p[y+<span class="number">1</span>]-p[y]) ++ch;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">for</span>(<span class="keyword">int</span> j=p[x],k=p[y];j&lt;=p[x+<span class="number">1</span>];++j,++k)</span><br><span class="line">                <span class="keyword">if</span>((s[j]&lt;&lt;<span class="number">1</span>|t[j])^(s[k]&lt;&lt;<span class="number">1</span>|t[k]))&#123; ++ch; <span class="keyword">break</span>; &#125;</span><br><span class="line">            s1[y=x]=ch;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(ch&lt;n1) SAIS(n1,ch,s1,t+n,p+n1);</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n1;++i) sa[s1[i]]=i;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n1;++i) s1[i]=p[sa[i]];</span><br><span class="line">        radix(s1,s,t,n,m,n1);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">init</span><span class="params">(<span class="keyword">int</span> n,<span class="keyword">const</span> <span class="keyword">char</span>* S)</span></span>&#123;</span><br><span class="line">        <span class="keyword">int</span> m=trans(++n,S);SAIS(n,m,s,t,p);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;n;++i) rk[sa[i]=sa[i+<span class="number">1</span>]]=i;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>,j,k=<span class="number">0</span>;i&lt;n;++i) <span class="keyword">if</span>(rk[i]&gt;<span class="number">1</span>)&#123;</span><br><span class="line">            <span class="keyword">for</span>(j=sa[rk[i]<span class="number">-1</span>];S[i+k]==S[j+k];++k);</span><br><span class="line">            <span class="keyword">if</span>(ht[rk[i]]=k) --k;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;SA;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">char</span> S[N];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="comment">//注意输入和传参</span></span><br><span class="line"><span class="keyword">while</span>(<span class="built_in">scanf</span>(<span class="string">"%s"</span>,S+<span class="number">1</span>)&amp;&amp;<span class="built_in">strcmp</span>(S+<span class="number">1</span>,<span class="string">"."</span>)!=<span class="number">0</span>)&#123;</span><br><span class="line">        <span class="keyword">int</span> n=<span class="built_in">strlen</span>(S+<span class="number">1</span>);</span><br><span class="line">        SA.init(n,S);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//SA应用</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">get_lcs</span><span class="params">(<span class="keyword">int</span> n,<span class="keyword">int</span> mid)</span></span>&#123; <span class="comment">//mid为两串分隔位置，n为拼接后总长</span></span><br><span class="line">    <span class="keyword">int</span> ans=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=n;i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(ht[i]&gt;ans)&#123;</span><br><span class="line">            <span class="keyword">if</span>(sa[i]&gt;=<span class="number">1</span>&amp;&amp;sa[i]&lt;=mid&amp;&amp;sa[i<span class="number">-1</span>]&gt;=mid+<span class="number">1</span>) ans=max(ans,ht[i]);</span><br><span class="line">            <span class="keyword">if</span>(sa[i<span class="number">-1</span>]&gt;=<span class="number">1</span>&amp;&amp;sa[i<span class="number">-1</span>]&lt;=mid&amp;&amp;sa[i]&gt;=mid+<span class="number">1</span>) ans=max(ans,ht[i]);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">ll <span class="title">get_subcnt</span><span class="params">(<span class="keyword">int</span> n)</span></span>&#123; <span class="comment">//不同子串个数</span></span><br><span class="line">    ll ans=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">        ans += n-sa[i]+<span class="number">1</span>-ht[i];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">get_looplen</span><span class="params">(<span class="keyword">int</span> n)</span></span>&#123; <span class="comment">//循环节长度</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(n%i) <span class="keyword">continue</span>; <span class="comment">//不能整除的话，一定不能构成循环节</span></span><br><span class="line">        <span class="keyword">if</span>(rk[<span class="number">1</span>] != rk[i+<span class="number">1</span>]+<span class="number">1</span>) <span class="keyword">continue</span>; <span class="comment">//rank数组必须要相邻才能构成循环节</span></span><br><span class="line">        <span class="keyword">if</span>(ht[rk[<span class="number">1</span>]] != n-i) <span class="keyword">continue</span>; <span class="comment">//若第一个和第二个的最长公共前缀不符合条件</span></span><br><span class="line">        <span class="keyword">return</span> n/i;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">pd1</span><span class="params">(<span class="keyword">int</span> k)</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> mx=SA.sa[<span class="number">1</span>],mm=SA.sa[<span class="number">1</span>];</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>; i&lt;=n; ++i)&#123;</span><br><span class="line">        <span class="keyword">if</span>(SA.ht[i]&gt;=k)&#123;</span><br><span class="line">            mm=min(mm,min(SA.sa[i],SA.sa[i<span class="number">-1</span>]));</span><br><span class="line">            mx=max(mx,max(SA.sa[i],SA.sa[i<span class="number">-1</span>]));</span><br><span class="line">            <span class="keyword">if</span>(mx-mm&gt;=k) <span class="keyword">return</span> <span class="number">1</span>; <span class="comment">//</span></span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            mx=SA.sa[i],mm=SA.sa[i];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">get1</span><span class="params">()</span></span>&#123; <span class="comment">//不可重叠最长子串长度</span></span><br><span class="line">    <span class="keyword">int</span> l=<span class="number">1</span>,r=n/<span class="number">2</span>;</span><br><span class="line">    <span class="keyword">while</span>(l&lt;r)&#123;</span><br><span class="line">        <span class="keyword">int</span> mid=(l+r+<span class="number">1</span>)&gt;&gt;<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">if</span>(pd1(mid)) l=mid;</span><br><span class="line">        <span class="keyword">else</span> r=mid<span class="number">-1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> l;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">pd2</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> cnt=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>; i&lt;=n; ++i)&#123;</span><br><span class="line">        <span class="keyword">if</span>(SA.ht[i]&gt;=x)&#123;</span><br><span class="line">            cnt++;</span><br><span class="line">            <span class="keyword">if</span>(cnt==k) <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> cnt=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">get2</span><span class="params">()</span></span>&#123; <span class="comment">//可重叠 出现k次最长子串长度</span></span><br><span class="line">    <span class="keyword">int</span> l=<span class="number">0</span>,r=n;</span><br><span class="line">    <span class="keyword">while</span>(l&lt;r)&#123;</span><br><span class="line">        <span class="keyword">int</span> mid = (l+r+<span class="number">1</span>)&gt;&gt;<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">if</span>(pd(mid)) l=mid;</span><br><span class="line">        <span class="keyword">else</span>        r=mid<span class="number">-1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> l;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//可重叠最长子串长度 = max(ht[i])</span></span><br></pre></td></tr></table></figure><h4 id="PAM"><a href="#PAM" class="headerlink" title="PAM"></a>PAM</h4><p><a href="http://acm.hdu.edu.cn/showproblem.php?pid=6599" target="_blank" rel="noopener">HDU6599</a></p><p>求回文串</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">unsigned</span> <span class="keyword">long</span> <span class="keyword">long</span> ull;</span><br><span class="line"><span class="keyword">const</span> ull base=<span class="number">233</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn=<span class="number">3e5</span>+<span class="number">10</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N=<span class="number">30</span>;</span><br><span class="line">ull ans[maxn];</span><br><span class="line">ull hs[maxn],ba[maxn];</span><br><span class="line"><span class="keyword">char</span> s[maxn];</span><br><span class="line"><span class="function">ull <span class="title">gethash</span><span class="params">(<span class="keyword">int</span> l,<span class="keyword">int</span> r)</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> hs[r]-hs[l<span class="number">-1</span>]*ba[r-l+<span class="number">1</span>];</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">check</span><span class="params">(<span class="keyword">int</span> l,<span class="keyword">int</span> r)</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> lenn=r-l+<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">int</span> mid=(l+r)&gt;&gt;<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">if</span>(lenn&amp;<span class="number">1</span>) <span class="keyword">return</span> gethash(l,mid)==gethash(mid,r);</span><br><span class="line">    <span class="keyword">return</span> gethash(l,mid)==gethash(mid+<span class="number">1</span>,r);</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">pam</span>&#123;</span></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">    int nex[maxn][N],fail[maxn];//在当前状态首尾添加字符的状态,失配跳到的状态</span></span><br><span class="line"><span class="comment">    int len[maxn],S[maxn],pos[maxn];//状态i表示的回文长度,缓存池,状态对应首次出现的位置</span></span><br><span class="line"><span class="comment">    int cnt[maxn],num[maxn];//状态出现次数,以状态末尾结尾但不包含本条路径的数目</span></span><br><span class="line"><span class="comment">    int last,n,p;//上个状态,总长度,当前状态编号</span></span><br><span class="line"><span class="comment">    p-2就是本质不同的回文串的个数</span></span><br><span class="line"><span class="comment">    **/</span></span><br><span class="line">    <span class="keyword">int</span> nex[maxn][N],fail[maxn];</span><br><span class="line">    <span class="keyword">int</span> len[maxn],S[maxn],pos[maxn];</span><br><span class="line">    <span class="keyword">int</span> cnt[maxn],num[maxn];</span><br><span class="line">    <span class="keyword">int</span> last,n,p;</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">newnode</span><span class="params">(<span class="keyword">int</span> i)</span></span>&#123;</span><br><span class="line">        <span class="built_in">memset</span>(nex[p],<span class="number">0</span>,<span class="keyword">sizeof</span>(nex[p]));</span><br><span class="line">        cnt[p]=num[p]=<span class="number">0</span>;</span><br><span class="line">        len[p]=i;</span><br><span class="line">        <span class="keyword">return</span> p++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">init</span><span class="params">()</span></span>&#123;</span><br><span class="line">        p=<span class="number">0</span>;</span><br><span class="line">        newnode(<span class="number">0</span>);</span><br><span class="line">        newnode(<span class="number">-1</span>);</span><br><span class="line">        last=n=<span class="number">0</span>;</span><br><span class="line">        fail[<span class="number">0</span>]=<span class="number">1</span>;</span><br><span class="line">        S[n]=<span class="number">-1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">get_fail</span><span class="params">(<span class="keyword">int</span> i)</span></span>&#123;</span><br><span class="line">        <span class="keyword">while</span>(S[n-len[i]<span class="number">-1</span>]!=S[n]) i=fail[i];</span><br><span class="line">        <span class="keyword">return</span> i;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> i,<span class="keyword">int</span> po)</span></span>&#123;</span><br><span class="line">        i-=<span class="string">'a'</span>;</span><br><span class="line">        S[++n]=i;</span><br><span class="line">        <span class="keyword">int</span> cur=get_fail(last);</span><br><span class="line">        <span class="keyword">if</span>(!nex[cur][i])&#123;</span><br><span class="line">            <span class="keyword">int</span> now=newnode(len[cur]+<span class="number">2</span>);</span><br><span class="line">            pos[now]=po;</span><br><span class="line">            fail[now]=nex[get_fail(fail[cur])][i];</span><br><span class="line">            nex[cur][i]=now;</span><br><span class="line">            num[now]=num[fail[now]]+<span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        last=nex[cur][i];</span><br><span class="line">        cnt[last]++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Count</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=p<span class="number">-1</span>; i&gt;=<span class="number">0</span>; i--) cnt[fail[i]]+=cnt[i];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;p;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="comment">//    freopen("in.txt","r",stdin);</span></span><br><span class="line"><span class="comment">//    freopen("out.txt","w",stdout);</span></span><br><span class="line">    <span class="keyword">int</span> len;</span><br><span class="line">    ba[<span class="number">0</span>]=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;maxn; i++) ba[i]=ba[i<span class="number">-1</span>]*base;</span><br><span class="line">    <span class="keyword">while</span>(~<span class="built_in">scanf</span>(<span class="string">"%s"</span>,s+<span class="number">1</span>))&#123;</span><br><span class="line">        len=<span class="built_in">strlen</span>(s+<span class="number">1</span>);</span><br><span class="line">        p.init();</span><br><span class="line">        hs[<span class="number">0</span>]=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=len; i++)&#123;</span><br><span class="line">            p.add(s[i],i);</span><br><span class="line">            ans[i]=<span class="number">0</span>;</span><br><span class="line">            hs[i]=hs[i<span class="number">-1</span>]*base+s[i];</span><br><span class="line">        &#125;</span><br><span class="line">        p.Count();</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;p.p; i++)&#123;</span><br><span class="line">            <span class="keyword">int</span> l=(p.pos[i]-p.len[i]+<span class="number">1</span>);</span><br><span class="line">            <span class="keyword">int</span> r=p.pos[i];</span><br><span class="line">            <span class="keyword">if</span>(check(l,r)) ans[p.len[i]]+=p.cnt[i];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%llu"</span>,ans[<span class="number">1</span>]);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>; i&lt;=len; i++) <span class="built_in">printf</span>(<span class="string">" %llu"</span>,ans[i]);</span><br><span class="line">        <span class="built_in">puts</span>(<span class="string">""</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="Manacher"><a href="#Manacher" class="headerlink" title="Manacher"></a>Manacher</h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;  </span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;  </span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Min(a,b) a&gt;b?b:a  </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Max(a,b) a&gt;b?a:b  </span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;  </span><br><span class="line"><span class="keyword">int</span> Len[<span class="number">3000005</span>];  </span><br><span class="line"><span class="keyword">char</span> str[<span class="number">3000005</span>],s[<span class="number">3000005</span>];  </span><br><span class="line"><span class="keyword">int</span> n,mx,id,len;  </span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">init</span><span class="params">()</span></span>&#123;  </span><br><span class="line">    <span class="keyword">int</span> k=<span class="number">0</span>;  </span><br><span class="line">    str[k++] = <span class="string">'$'</span>;  </span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;len;i++)&#123;  </span><br><span class="line">        str[k++]=<span class="string">'#'</span>;  </span><br><span class="line">        str[k++]=s[i];  </span><br><span class="line">    &#125;  </span><br><span class="line">    str[k++]=<span class="string">'#'</span>;  </span><br><span class="line">    len=k;  </span><br><span class="line">&#125;  </span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">Manacher</span><span class="params">()</span></span>&#123;  </span><br><span class="line">  Len[<span class="number">0</span>] = <span class="number">0</span>;  </span><br><span class="line">  <span class="keyword">int</span> sum = <span class="number">0</span>;  </span><br><span class="line">  mx = <span class="number">0</span>;  </span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;len;i++)&#123;  </span><br><span class="line">    <span class="keyword">if</span>(i &lt; mx) Len[i] = Min(mx - i, Len[<span class="number">2</span> * id - i]);  </span><br><span class="line">    <span class="keyword">else</span> Len[i] = <span class="number">1</span>;  </span><br><span class="line">    <span class="keyword">while</span>(str[i - Len[i]]== str[i + Len[i]]) Len[i]++;  </span><br><span class="line">    <span class="keyword">if</span>(Len[i] + i &gt; mx)&#123;  </span><br><span class="line">      mx = Len[i] + i;  </span><br><span class="line">      id = i;  </span><br><span class="line">      sum = Max(sum, Len[i]);  </span><br><span class="line">    &#125;  </span><br><span class="line">  &#125;  </span><br><span class="line">  <span class="keyword">return</span> (sum - <span class="number">1</span>);  </span><br><span class="line">&#125;  </span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span>  </span></span><br><span class="line"><span class="function"></span>&#123;  </span><br><span class="line">  <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);  </span><br><span class="line">  <span class="keyword">while</span>(n--)&#123;  </span><br><span class="line">    <span class="built_in">memset</span>(str,<span class="number">0</span>,<span class="keyword">sizeof</span>(str));</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%s"</span>,s);  </span><br><span class="line">    len = <span class="built_in">strlen</span>(s);  </span><br><span class="line">    init();  </span><br><span class="line">    <span class="keyword">int</span> temp = Manacher();  </span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,temp);  </span><br><span class="line">  &#125;  </span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h3 id="数学"><a href="#数学" class="headerlink" title="数学"></a>数学</h3><h4 id="BSGS"><a href="#BSGS" class="headerlink" title="BSGS"></a>BSGS</h4><p>当$gcd(y,p)=1$，在这种情况下，有可能给定$p$为质数。设$x=a * m - b$ ，$m= \lceil \sqrt p \rceil$，$ a \in [0,m+1)$，$b \in [0,m)$，那么原式变成$y^{a * m}=z * y^{b}$，先枚举$b$，计算$z * y^{b}(mod\ p)$，存到$map$中，再枚举$a$就好了。</p><h5 id="SDOI2011"><a href="#SDOI2011" class="headerlink" title="SDOI2011"></a><a href="https://www.lydsy.com/JudgeOnline/problem.php?id=2242" target="_blank" rel="noopener">SDOI2011</a></h5><p>题意：给定$y,z,p$，计算1. $y^z (mod \ p)$；2. 满足$x * y \equiv z(mod \ p)$的最小非负整数的$x$；3.满足$y^x  \equiv  z\ (mod\ p)$的最小非负整数的$x$。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line">ll y,z,p;</span><br><span class="line"><span class="function">ll <span class="title">qpow</span><span class="params">(ll x,ll n,ll mod)</span></span>&#123;</span><br><span class="line">    ll res=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span>(n)&#123;</span><br><span class="line">        <span class="keyword">if</span>(n&amp;<span class="number">1</span>) res=res*x%mod;</span><br><span class="line">        x=x*x%mod;</span><br><span class="line">        n&gt;&gt;=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">ll <span class="title">inv</span><span class="params">(ll x,ll mod)</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> qpow(x,mod<span class="number">-2</span>,mod);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">nnot</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">puts</span>(<span class="string">"Orz, I cannot find x!"</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">BSGS</span><span class="params">(ll x,ll y)</span></span>&#123;</span><br><span class="line">    <span class="built_in">map</span>&lt;ll,ll&gt;pw;</span><br><span class="line">    <span class="keyword">if</span>(y == <span class="number">1</span>)&#123;</span><br><span class="line">        <span class="built_in">puts</span>(<span class="string">"0"</span>);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    ll ans = <span class="number">-1</span>, m = <span class="built_in">sqrt</span>(p) + <span class="number">1</span>, xx, s = y;</span><br><span class="line">    <span class="keyword">for</span>(ll i = <span class="number">0</span>; i &lt; m; i++)&#123;</span><br><span class="line">        pw[s] = i;</span><br><span class="line">        s = s * x % p;</span><br><span class="line">    &#125;</span><br><span class="line">    xx = qpow(x, m, p), s = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(ll i = <span class="number">1</span>; i &lt;= m + <span class="number">1</span>; ++i)&#123;</span><br><span class="line">        s = s * xx % p;</span><br><span class="line">        <span class="keyword">if</span>(pw.count(s))&#123;</span><br><span class="line">            ans = i * m - pw[s];</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(ans &lt; <span class="number">0</span>) nnot();</span><br><span class="line">    <span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">"%lld\n"</span>, ans);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    ll t,op;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%lld %lld"</span>,&amp;t,&amp;op);</span><br><span class="line">    <span class="keyword">while</span>(t--)&#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%lld %lld %lld"</span>,&amp;y,&amp;z,&amp;p);</span><br><span class="line">        <span class="keyword">if</span>(op == <span class="number">1</span>) <span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,qpow(y,z,p));</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(op == <span class="number">2</span>)&#123;</span><br><span class="line">            ll tm=y%p;</span><br><span class="line">            <span class="keyword">if</span>(tm==<span class="number">0</span> &amp;&amp; z%p!=<span class="number">0</span>)&#123;</span><br><span class="line">                nnot();</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,z*inv(y,p)%p);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">if</span>(y%p) BSGS(y,z);</span><br><span class="line">            <span class="keyword">else</span> nnot();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>当$gcd(y,p) \neq 1$时，就要用到$exgcd$理论。</p><p>将原式写成$y * y^{x-1}+k * p=z,k \in Z$，根据$exgcd$，当$d=gcd(y,p)$不是$z$的约数就不会有解，有：$$\frac{y}{d} * y^{x-1}+k * \frac{p}{d}=\frac{z}{d}$$</p><p>一直递归直到$d=1$，设之间的所有的$d$的乘积为$g$，递归$c$次，令$x’=x-c\ ,\ p’=\frac{p}{g}\ ,\ z=\frac{z}{g}$，$y^{x’} * \frac{y^c}{g} \equiv z’(mod \ p’)$</p><p>然后再用BSGS求解。</p><h5 id="SPOJMOD-Power-Modulo-Inverted"><a href="#SPOJMOD-Power-Modulo-Inverted" class="headerlink" title="SPOJMOD Power Modulo Inverted"></a><a href="http://www.spoj.com/problems/MOD/" target="_blank" rel="noopener">SPOJMOD Power Modulo Inverted</a></h5><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> GCC optimize(2)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line">ll y,z,p;</span><br><span class="line"><span class="function">ll <span class="title">qpow</span><span class="params">(ll x,ll n,ll mod)</span></span>&#123;</span><br><span class="line">    ll res=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span>(n)&#123;</span><br><span class="line">        <span class="keyword">if</span>(n&amp;<span class="number">1</span>) res=res*x%mod;</span><br><span class="line">        x=x*x%mod;</span><br><span class="line">        n&gt;&gt;=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">ll <span class="title">gcd</span><span class="params">(ll x,ll y)</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> (y==<span class="number">0</span>)?x:gcd(y,x%y);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">ll <span class="title">exBSGS</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(z==<span class="number">1</span>) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    <span class="built_in">map</span>&lt;ll,ll&gt;pw;</span><br><span class="line">    ll cnt=<span class="number">0</span>,mul=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(ll d=gcd(y,p); d!=<span class="number">1</span>; d=gcd(y,p))&#123;</span><br><span class="line">        <span class="keyword">if</span>(z%d) <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">        ++cnt,z/=d,p/=d,mul=(mul*y/d%p);</span><br><span class="line">        <span class="keyword">if</span>(z == mul) <span class="keyword">return</span> cnt;</span><br><span class="line">    &#125;</span><br><span class="line">    ll s=z,m=<span class="built_in">sqrt</span>(p)+<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(ll i=<span class="number">0</span>; i&lt;m; i++)&#123;</span><br><span class="line">        pw[s]=i;</span><br><span class="line">        s=s*y%p;</span><br><span class="line">    &#125;</span><br><span class="line">    ll x=qpow(y,m,p);</span><br><span class="line">    s=mul;</span><br><span class="line">    <span class="keyword">for</span>(ll i=<span class="number">1</span>; i&lt;=m; i++)&#123;</span><br><span class="line">        s=s*x%p;</span><br><span class="line">        <span class="keyword">if</span>(pw.count(s)) <span class="keyword">return</span> i*m-pw[s]+cnt;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">scanf</span>(<span class="string">"%lld %lld %lld"</span>,&amp;y,&amp;p,&amp;z)&amp;&amp;(y||z||p))&#123;</span><br><span class="line">        y%=p;</span><br><span class="line">        z%=p;</span><br><span class="line">        ll ans=exBSGS();</span><br><span class="line">        <span class="keyword">if</span>(ans &lt; <span class="number">0</span>) <span class="built_in">puts</span>(<span class="string">"No Solution"</span>);</span><br><span class="line">        <span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,ans);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="欧拉降幂"><a href="#欧拉降幂" class="headerlink" title="欧拉降幂"></a>欧拉降幂</h4><p>求解$A^B \ mod\ C$，$B \leq 10^{1000000}$</p><p>若$a$和$n$为正整数并且互质</p><p>$a^{\varphi (n)} \equiv 1(mod \ n)$<br>$$<br>a^b \equiv<br>\begin{cases}<br>a^{b \ mod \  \varphi(p) } &amp; \text{ gcd(a,p)=1}  \newline<br>a^b &amp; \text gcd(a,p) \neq 1 , b&lt;\varphi(p)   \newline<br>a^{ (b \ mod \  \varphi(p)) + \varphi(p)}  &amp; \text gcd(a,p) \neq 1 , b \geq \varphi(p)<br>\end{cases}  \ \ \ \ \ \ \ \ \ \ (mod\ p)<br>$$</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ll __int64</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mod 10000000007</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">char</span> a[<span class="number">1000006</span>];</span><br><span class="line">ll x,z;</span><br><span class="line"><span class="function">ll <span class="title">quickpow</span><span class="params">(ll x,ll y,ll z)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ll ans=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span>(y)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(y&amp;<span class="number">1</span>)</span><br><span class="line">            ans=ans*x%z;</span><br><span class="line">        x=x*x%z;</span><br><span class="line">        y&gt;&gt;=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">ll <span class="title">phi</span><span class="params">(ll n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ll i,rea=n;</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">2</span>;i*i&lt;=n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(n%i==<span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            rea=rea-rea/i;</span><br><span class="line">            <span class="keyword">while</span>(n%i==<span class="number">0</span>)</span><br><span class="line">                n/=i;</span><br><span class="line">         &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(n&gt;<span class="number">1</span>)</span><br><span class="line">        rea=rea-rea/n;</span><br><span class="line">    <span class="keyword">return</span> rea;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">scanf</span>(<span class="string">"%lld %s %lld"</span>,&amp;x,a,&amp;z)!=EOF)</span><br><span class="line">    &#123;</span><br><span class="line">        ll len=<span class="built_in">strlen</span>(a);</span><br><span class="line">        ll p=phi(z);</span><br><span class="line">        ll ans=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(ll i=<span class="number">0</span>;i&lt;len;i++)</span><br><span class="line">            ans=(ans*<span class="number">10</span>+a[i]-<span class="string">'0'</span>)%p;</span><br><span class="line">        ans+=p;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,quickpow(x,ans,z));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="中国剩余定理"><a href="#中国剩余定理" class="headerlink" title="中国剩余定理"></a>中国剩余定理</h4><p>求解<br>$$<br>\begin{cases}<br>x \equiv a_1 (mod\ b_1) \newline<br>x \equiv a_2 (mod\ b_2)  \newline<br>…  \newline<br>x \equiv a_n (mod\ b_n)<br>\end{cases}<br>$$</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> lt;</span><br><span class="line"></span><br><span class="line"><span class="function">lt <span class="title">read</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    lt f=<span class="number">1</span>,x=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">char</span> ss=getchar();</span><br><span class="line">    <span class="keyword">while</span>(ss&lt;<span class="string">'0'</span>||ss&gt;<span class="string">'9'</span>)&#123;<span class="keyword">if</span>(ss==<span class="string">'-'</span>)f=<span class="number">-1</span>;ss=getchar();&#125;</span><br><span class="line">    <span class="keyword">while</span>(ss&gt;=<span class="string">'0'</span>&amp;&amp;ss&lt;=<span class="string">'9'</span>)&#123;x=x*<span class="number">10</span>+ss-<span class="string">'0'</span>;ss=getchar();&#125;</span><br><span class="line">    <span class="keyword">return</span> f*x;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn=<span class="number">100010</span>;</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line">lt ai[maxn],bi[maxn];</span><br><span class="line"></span><br><span class="line"><span class="function">lt <span class="title">mul</span><span class="params">(lt a,lt b,lt mod)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    lt res=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(b&gt;<span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(b&amp;<span class="number">1</span>) res=(res+a)%mod;</span><br><span class="line">        a=(a+a)%mod;</span><br><span class="line">        b&gt;&gt;=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">lt <span class="title">exgcd</span><span class="params">(lt a,lt b,lt &amp;x,lt &amp;y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(b==<span class="number">0</span>)&#123;x=<span class="number">1</span>;y=<span class="number">0</span>;<span class="keyword">return</span> a;&#125;</span><br><span class="line">    lt gcd=exgcd(b,a%b,x,y);</span><br><span class="line">    lt tp=x;</span><br><span class="line">    x=y; y=tp-a/b*y;</span><br><span class="line">    <span class="keyword">return</span> gcd;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">lt <span class="title">excrt</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    lt x,y,k;</span><br><span class="line">    lt M=bi[<span class="number">1</span>],ans=ai[<span class="number">1</span>];<span class="comment">//第一个方程的解特判</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        lt a=M,b=bi[i],c=(ai[i]-ans%b+b)%b;<span class="comment">//ax≡c(mod b)</span></span><br><span class="line">        lt gcd=exgcd(a,b,x,y),bg=b/gcd;</span><br><span class="line">        <span class="keyword">if</span>(c%gcd!=<span class="number">0</span>) <span class="keyword">return</span> <span class="number">-1</span>; <span class="comment">//判断是否无解，然而这题其实不用</span></span><br><span class="line"></span><br><span class="line">        x=mul(x,c/gcd,bg);</span><br><span class="line">        ans+=x*M;<span class="comment">//更新前k个方程组的答案</span></span><br><span class="line">        M*=bg;<span class="comment">//M为前k个m的lcm</span></span><br><span class="line">        ans=(ans%M+M)%M;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> (ans%M+M)%M;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    n=read();</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;++i)</span><br><span class="line">    bi[i]=read(),ai[i]=read();</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%lld"</span>,excrt());</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"><span class="keyword">import</span> java.math.BigInteger;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span></span>&#123;</span><br><span class="line">    <span class="keyword">static</span> BigInteger ai[]=<span class="keyword">new</span> BigInteger[<span class="number">11000</span>];</span><br><span class="line">    <span class="keyword">static</span> BigInteger bi[]=<span class="keyword">new</span> BigInteger[<span class="number">11000</span>];</span><br><span class="line">    <span class="keyword">static</span> BigInteger lp[]=<span class="keyword">new</span> BigInteger[<span class="number">150</span>];</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">int</span> n;</span><br><span class="line">    <span class="keyword">static</span> BigInteger m;</span><br><span class="line">    <span class="keyword">static</span> String tem;</span><br><span class="line">    <span class="keyword">static</span> BigInteger rt;</span><br><span class="line">    <span class="keyword">static</span> BigInteger cr;</span><br><span class="line">    <span class="keyword">static</span> BigInteger zero=<span class="keyword">new</span> BigInteger(<span class="string">"0"</span>);</span><br><span class="line">    <span class="keyword">static</span> BigInteger one=<span class="keyword">new</span> BigInteger(<span class="string">"1"</span>);</span><br><span class="line">    <span class="keyword">static</span> BigInteger two=<span class="keyword">new</span> BigInteger(<span class="string">"2"</span>);</span><br><span class="line">    <span class="keyword">static</span> BigInteger fuone=<span class="keyword">new</span> BigInteger(<span class="string">"-1"</span>);</span><br><span class="line">    <span class="keyword">static</span> BigInteger maxnt=<span class="keyword">new</span> BigInteger(<span class="string">"1000000000000000"</span>);</span><br><span class="line">    <span class="keyword">static</span> BigInteger x=zero;</span><br><span class="line">    <span class="keyword">static</span> BigInteger y=zero;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String args[])</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        Scanner cin=<span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">        n=cin.nextInt();</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            tem=cin.next();</span><br><span class="line">            bi[i]=<span class="keyword">new</span> BigInteger(tem);</span><br><span class="line">            tem=cin.next();</span><br><span class="line">            ai[i]=<span class="keyword">new</span> BigInteger(tem);</span><br><span class="line">        &#125;</span><br><span class="line">        rt=excrt();</span><br><span class="line">        lp[<span class="number">0</span>]=zero;</span><br><span class="line">    lp[<span class="number">1</span>]=one;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=<span class="number">100</span>;i++) </span><br><span class="line">        lp[i]=lp[i-<span class="number">1</span>].add(lp[i-<span class="number">2</span>]);</span><br><span class="line">    <span class="keyword">if</span>(rt.compareTo(one)&lt;=<span class="number">0</span>||rt.compareTo(maxnt)&gt;<span class="number">0</span>)&#123;</span><br><span class="line">        System.out.println(<span class="string">"Tankernb!"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">int</span> fg=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=<span class="number">100</span>;i++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(lp[i].compareTo(rt)==<span class="number">0</span>) fg=<span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(fg==<span class="number">1</span>)System.out.println(<span class="string">"Lbnb!"</span>);</span><br><span class="line">        <span class="keyword">else</span> System.out.println(<span class="string">"Zgxnb!"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> BigInteger <span class="title">exgcd</span><span class="params">(BigInteger a,BigInteger b)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(b.compareTo(zero)==<span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            x=one;</span><br><span class="line">            y=zero;</span><br><span class="line">            <span class="keyword">return</span> a;</span><br><span class="line">        &#125;</span><br><span class="line">        BigInteger gcd=exgcd(b,a.mod(b));</span><br><span class="line">        BigInteger tp=x;</span><br><span class="line">        x=y;</span><br><span class="line">        y=tp.subtract((a.divide(b)).multiply(y));</span><br><span class="line">        <span class="keyword">return</span> gcd;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> BigInteger <span class="title">excrt</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        BigInteger xx=zero,yy=zero,k;</span><br><span class="line">        BigInteger mo=bi[<span class="number">1</span>],ans=ai[<span class="number">1</span>];<span class="comment">//第一个方程的解特判</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=n;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            BigInteger a=mo,b=bi[i];</span><br><span class="line">            BigInteger t=ans.mod(b);</span><br><span class="line">            t=ai[i].subtract(t);</span><br><span class="line">            t=t.add(b);</span><br><span class="line">            BigInteger c=t.mod(b);</span><br><span class="line">            y=yy;x=xx;</span><br><span class="line">            BigInteger gcd=exgcd(a,b),bg=b.divide(gcd);</span><br><span class="line">            xx=x;yy=y;</span><br><span class="line">            <span class="keyword">if</span>((c.mod(gcd)).compareTo(zero)!=<span class="number">0</span>)</span><br><span class="line">                <span class="keyword">return</span> fuone; <span class="comment">//判断是否无解，然而这题其实不用</span></span><br><span class="line">            xx=xx.multiply(c.divide(gcd)).mod(bg);  </span><br><span class="line">            ans=ans.add(xx.multiply(mo));<span class="comment">//更新前k个方程组的答案</span></span><br><span class="line">            mo=mo.multiply(bg);<span class="comment">//M为前k个m的lcm</span></span><br><span class="line">            ans=((ans.mod(mo)).add(mo)).mod(mo);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> ((ans.mod(mo)).add(mo)).mod(mo);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="线性同余方程"><a href="#线性同余方程" class="headerlink" title="线性同余方程"></a>线性同余方程</h4><p>1、方程$ax+by=c$与方程$ax \equiv  c (mod \ b)$等价，有整数解的充要条件是$gcd(a,b) % c=0$。</p><p>2、若$gcd(a,b)=1$，且$x_0,y_0$为方程$ax+by=c$的一组解，该方程的任意解可表示为：$x=x_0+bt$，$y=y_0+at$。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">ex_gcd</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b, <span class="keyword">int</span>&amp; x, <span class="keyword">int</span>&amp; y)</span> </span>&#123;</span><br><span class="line">  <span class="keyword">if</span> (b == <span class="number">0</span>) &#123;</span><br><span class="line">    x = <span class="number">1</span>;</span><br><span class="line">    y = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">return</span> a;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">int</span> d = ex_gcd(b, a % b, x, y);</span><br><span class="line">  <span class="keyword">int</span> temp = x;</span><br><span class="line">  x = y;</span><br><span class="line">  y = temp - a / b * y;</span><br><span class="line">  <span class="keyword">return</span> d;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">liEu</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b, <span class="keyword">int</span> c, <span class="keyword">int</span>&amp; x, <span class="keyword">int</span>&amp; y)</span> </span>&#123;</span><br><span class="line">  <span class="keyword">int</span> d = ex_gcd(a, b, x, y);</span><br><span class="line">  <span class="keyword">if</span> (c % d != <span class="number">0</span>) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">int</span> k = c / d;</span><br><span class="line">  x *= k;</span><br><span class="line">  y *= k;</span><br><span class="line">  <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="二次剩余"><a href="#二次剩余" class="headerlink" title="二次剩余"></a>二次剩余</h4><p>求解$x \equiv \sqrt{y} \mod p$</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> LL;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> random(a,b) (rand()%(b-a+1)+a)</span></span><br><span class="line"><span class="function">LL <span class="title">quick_mod</span><span class="params">(LL a, LL b, LL c)</span></span>&#123;</span><br><span class="line">    LL ans = <span class="number">1</span>; <span class="keyword">while</span> (b)&#123; </span><br><span class="line">    <span class="keyword">if</span> (b % <span class="number">2</span> == <span class="number">1</span>) ans = (ans*a) % c; b /= <span class="number">2</span>; a = (a*a) % c; </span><br><span class="line">&#125;</span><br><span class="line"> <span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line">LL p;</span><br><span class="line">LL w;<span class="comment">//二次域的D值</span></span><br><span class="line"><span class="keyword">bool</span> ok;<span class="comment">//是否有解</span></span><br><span class="line"> </span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">QuadraticField</span>//二次域</span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    LL x, y;</span><br><span class="line">    QuadraticField <span class="keyword">operator</span>*(QuadraticField T)<span class="comment">//二次域乘法重载</span></span><br><span class="line">    &#123;</span><br><span class="line">        QuadraticField ans;</span><br><span class="line">        ans.x = (<span class="keyword">this</span>-&gt;x*T.x%p + <span class="keyword">this</span>-&gt;y*T.y%p*w%p) % p;</span><br><span class="line">        ans.y = (<span class="keyword">this</span>-&gt;x*T.y%p + <span class="keyword">this</span>-&gt;y*T.x%p) % p;</span><br><span class="line">        <span class="keyword">return</span> ans;</span><br><span class="line">    &#125;</span><br><span class="line">    QuadraticField <span class="keyword">operator</span>^(LL b)<span class="comment">//二次域快速幂</span></span><br><span class="line">    &#123;</span><br><span class="line">        QuadraticField ans;</span><br><span class="line">        QuadraticField a = *<span class="keyword">this</span>;</span><br><span class="line">        ans.x = <span class="number">1</span>;</span><br><span class="line">        ans.y = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span> (b)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (b &amp; <span class="number">1</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                ans = ans*a;</span><br><span class="line">                b--;</span><br><span class="line">            &#125;</span><br><span class="line">            b /= <span class="number">2</span>;</span><br><span class="line">            a = a*a;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> ans;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"> </span><br><span class="line"><span class="function">LL <span class="title">Legender</span><span class="params">(LL a)</span><span class="comment">//求勒让德符号</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    LL ans=quick_mod(a, (p - <span class="number">1</span>) / <span class="number">2</span>, p);</span><br><span class="line">    <span class="keyword">if</span> (ans + <span class="number">1</span> == p)<span class="comment">//如果ans的值为-1，%p之后会变成p-1。</span></span><br><span class="line">        <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="function">LL <span class="title">Getw</span><span class="params">(LL n, LL a)</span><span class="comment">//根据随机出来a的值确定对应w的值</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> ((a*a - n) % p + p) % p;<span class="comment">//防爆处理</span></span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="function">LL <span class="title">Solve</span><span class="params">(LL n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    LL a;</span><br><span class="line">    <span class="keyword">if</span> (p == <span class="number">2</span>)<span class="comment">//当p为2的时候，n只会是0或1，然后0和1就是对应的解</span></span><br><span class="line">        <span class="keyword">return</span> n;</span><br><span class="line">    <span class="keyword">if</span> (Legender(n) == <span class="number">-1</span>)<span class="comment">//无解</span></span><br><span class="line">        ok = <span class="literal">false</span>;</span><br><span class="line">    srand((<span class="keyword">unsigned</span>)time(<span class="literal">NULL</span>));</span><br><span class="line">    <span class="keyword">while</span> (<span class="number">1</span>)<span class="comment">//随机a的值直到有解</span></span><br><span class="line">    &#123;</span><br><span class="line">        a = random(<span class="number">0</span>, p - <span class="number">1</span>);</span><br><span class="line">        w = Getw(n, a);</span><br><span class="line">        <span class="keyword">if</span> (Legender(w) == <span class="number">-1</span>)</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    QuadraticField ans,res;</span><br><span class="line">    res.x = a;</span><br><span class="line">    res.y = <span class="number">1</span>;<span class="comment">//res的值就是a+根号w</span></span><br><span class="line">    ans = res ^ ((p + <span class="number">1</span>) / <span class="number">2</span>);</span><br><span class="line">    <span class="keyword">if</span> (ans.x==<span class="number">0</span>) <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">return</span> ans.x;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> T;</span><br><span class="line">    ll b,c;</span><br><span class="line">    p=<span class="number">1000000007</span>;</span><br><span class="line">    ll t1,t2,t3;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;T);</span><br><span class="line">    <span class="keyword">while</span> (T--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%lld%lld"</span>,&amp;b,&amp;c);</span><br><span class="line">        <span class="keyword">if</span> (b*b<span class="number">-4l</span>l*c==<span class="number">0</span>)</span><br><span class="line">        t1=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        t1=Solve(b*b<span class="number">-4l</span>l*c);</span><br><span class="line">        <span class="keyword">if</span> (t1==<span class="number">-1</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">puts</span>(<span class="string">"-1 -1"</span>);</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        t2=((b+t1)*quick_mod(<span class="number">2</span>,p<span class="number">-2</span>,p))%p;</span><br><span class="line">        t3=((b-t1+p)%p*quick_mod(<span class="number">2</span>,p<span class="number">-2</span>,p))%p;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%lld %lld\n"</span>,min(t2,t3),max(t2,t3));</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="约瑟夫环"><a href="#约瑟夫环" class="headerlink" title="约瑟夫环"></a>约瑟夫环</h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">joseph</span><span class="params">(<span class="keyword">int</span> count, <span class="keyword">int</span> doom)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> alive = count;<span class="comment">// 幸存人数</span></span><br><span class="line"><span class="keyword">int</span> number = <span class="number">0</span>;<span class="comment">// 报数的数</span></span><br><span class="line"><span class="keyword">int</span> curIndex = <span class="number">0</span>;<span class="comment">// 当前人下标</span></span><br><span class="line"><span class="keyword">int</span> preIndex = count - <span class="number">1</span>;   <span class="comment">// 前一个人下标</span></span><br><span class="line"><span class="keyword">int</span> index;</span><br><span class="line"><span class="keyword">int</span> *circle = <span class="literal">NULL</span>;</span><br><span class="line">circle = (<span class="keyword">int</span> *) <span class="built_in">malloc</span> (<span class="keyword">sizeof</span>(<span class="keyword">int</span>) * count);</span><br><span class="line"><span class="comment">//对circle数组进行初始化</span></span><br><span class="line"><span class="keyword">for</span>(index = <span class="number">0</span>; index &lt; count; index++) &#123;</span><br><span class="line">circle[index] = (index + <span class="number">1</span>) % count;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span>(alive &gt; <span class="number">0</span>) &#123;</span><br><span class="line">number++;</span><br><span class="line"><span class="keyword">if</span>(number == doom) &#123;</span><br><span class="line">alive == <span class="number">1</span> ? <span class="built_in">printf</span>(<span class="string">"%d"</span>, curIndex+<span class="number">1</span>) : <span class="built_in">printf</span>(<span class="string">"%d,"</span>, curIndex+<span class="number">1</span>);</span><br><span class="line">alive--;</span><br><span class="line">number = <span class="number">0</span>;</span><br><span class="line">circle[preIndex] = circle[curIndex];<span class="comment">//出圈操作</span></span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">preIndex = curIndex;<span class="comment">//处理下一个人</span></span><br><span class="line">&#125;</span><br><span class="line">curIndex = circle[curIndex];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">free</span>(circle);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> n,m;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;n&gt;&gt;m;</span><br><span class="line">joseph(n,m);</span><br><span class="line">   <span class="built_in">puts</span>(<span class="string">""</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="杜教递推"><a href="#杜教递推" class="headerlink" title="杜教递推"></a>杜教递推</h4><p>杜教线性递推</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rep(i, a, n) for (int i = a; i &lt; n; i++)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> pb push_back</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> sz(x) ((int)(x).size())</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">typedef</span> <span class="built_in">vector</span>&lt;ll&gt; VI;</span><br><span class="line"><span class="keyword">const</span> ll mod=<span class="number">1e9</span>+<span class="number">7</span>;</span><br><span class="line"><span class="function">ll <span class="title">fastpower</span><span class="params">(ll a, ll b)</span> </span>&#123;</span><br><span class="line">    ll res = <span class="number">1</span>;</span><br><span class="line">    a %= mod;</span><br><span class="line">    assert(b &gt;= <span class="number">0</span>);</span><br><span class="line">    <span class="keyword">for</span> (; b; b &gt;&gt;= <span class="number">1</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (b &amp; <span class="number">1</span>) res = res * a % mod;</span><br><span class="line">        a = a * a % mod;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">namespace</span> linear_seq &#123;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">10010</span>;</span><br><span class="line">ll res[N], base[N], _c[N], _md[N];</span><br><span class="line"><span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; Md;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">mul</span><span class="params">(ll *a, ll *b, <span class="keyword">int</span> k)</span> </span>&#123;</span><br><span class="line">    rep(i, <span class="number">0</span>, k + k) _c[i] = <span class="number">0</span>;</span><br><span class="line">    rep(i, <span class="number">0</span>, k) <span class="keyword">if</span> (a[i]) rep(j, <span class="number">0</span>, k) _c[i + j] =</span><br><span class="line">        (_c[i + j] + a[i] * b[j]) % mod;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = k + k - <span class="number">1</span>; i &gt;= k; i--)</span><br><span class="line">        <span class="keyword">if</span> (_c[i])</span><br><span class="line">            rep(j, <span class="number">0</span>, sz(Md)) _c[i - k + Md[j]] =</span><br><span class="line">                (_c[i - k + Md[j]] - _c[i] * _md[Md[j]]) % mod;</span><br><span class="line">    rep(i, <span class="number">0</span>, k) a[i] = _c[i];</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">solve</span><span class="params">(ll n, VI a, VI b)</span> </span>&#123;  <span class="comment">// a 系数 b 初值 b[n+1]=a[0]*b[n]+...</span></span><br><span class="line">                               <span class="comment">//        printf("%d\n",sz(b));</span></span><br><span class="line">    ll ans = <span class="number">0</span>, pnt = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">int</span> k = sz(a);</span><br><span class="line">    assert(sz(a) == sz(b));</span><br><span class="line">    rep(i, <span class="number">0</span>, k) _md[k - <span class="number">1</span> - i] = -a[i];</span><br><span class="line">    _md[k] = <span class="number">1</span>;</span><br><span class="line">    Md.clear();</span><br><span class="line">    rep(i, <span class="number">0</span>, k) <span class="keyword">if</span> (_md[i] != <span class="number">0</span>) Md.push_back(i);</span><br><span class="line">    rep(i, <span class="number">0</span>, k) res[i] = base[i] = <span class="number">0</span>;</span><br><span class="line">    res[<span class="number">0</span>] = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span> ((<span class="number">1l</span>l &lt;&lt; pnt) &lt;= n) pnt++;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> p = pnt; p &gt;= <span class="number">0</span>; p--) &#123;</span><br><span class="line">        mul(res, res, k);</span><br><span class="line">        <span class="keyword">if</span> ((n &gt;&gt; p) &amp; <span class="number">1</span>) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = k - <span class="number">1</span>; i &gt;= <span class="number">0</span>; i--) res[i + <span class="number">1</span>] = res[i];</span><br><span class="line">            res[<span class="number">0</span>] = <span class="number">0</span>;</span><br><span class="line">            rep(j, <span class="number">0</span>, sz(Md)) res[Md[j]] =</span><br><span class="line">                (res[Md[j]] - res[k] * _md[Md[j]]) % mod;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    rep(i, <span class="number">0</span>, k) ans = (ans + res[i] * b[i]) % mod;</span><br><span class="line">    <span class="keyword">if</span> (ans &lt; <span class="number">0</span>) ans += mod;</span><br><span class="line">    <span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">VI <span class="title">BM</span><span class="params">(VI s)</span> </span>&#123;</span><br><span class="line">    VI C(1, 1), B(1, 1);</span><br><span class="line">    <span class="keyword">int</span> L = <span class="number">0</span>, m = <span class="number">1</span>, b = <span class="number">1</span>;</span><br><span class="line">    rep(n, <span class="number">0</span>, sz(s)) &#123;</span><br><span class="line">        ll d = <span class="number">0</span>;</span><br><span class="line">        rep(i, <span class="number">0</span>, L + <span class="number">1</span>) d = (d + (ll)C[i] * s[n - i]) % mod;</span><br><span class="line">        <span class="keyword">if</span> (d == <span class="number">0</span>)</span><br><span class="line">            ++m;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (<span class="number">2</span> * L &lt;= n) &#123;</span><br><span class="line">            VI T = C;</span><br><span class="line">            ll c = mod - d * fastpower(b, mod - <span class="number">2</span>) % mod;</span><br><span class="line">            <span class="keyword">while</span> (sz(C) &lt; sz(B) + m) C.pb(<span class="number">0</span>);</span><br><span class="line">            rep(i, <span class="number">0</span>, sz(B)) C[i + m] = (C[i + m] + c * B[i]) % mod;</span><br><span class="line">            L = n + <span class="number">1</span> - L;</span><br><span class="line">            B = T;</span><br><span class="line">            b = d;</span><br><span class="line">            m = <span class="number">1</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            ll c = mod - d * fastpower(b, mod - <span class="number">2</span>) % mod;</span><br><span class="line">            <span class="keyword">while</span> (sz(C) &lt; sz(B) + m) C.pb(<span class="number">0</span>);</span><br><span class="line">            rep(i, <span class="number">0</span>, sz(B)) C[i + m] = (C[i + m] + c * B[i]) % mod;</span><br><span class="line">            ++m;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> C;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">gao</span><span class="params">(VI a, ll n)</span></span>&#123;</span><br><span class="line">    VI c = BM(a);</span><br><span class="line">    c.erase(c.begin());</span><br><span class="line">    rep(i, <span class="number">0</span>, sz(c)) c[i] = (mod - c[i]) % mod;</span><br><span class="line">    <span class="keyword">return</span> solve(n, c, VI(a.begin(), a.begin() + sz(c)));</span><br><span class="line">&#125;</span><br><span class="line">&#125;;  <span class="comment">// namespace linear_seq</span></span><br><span class="line"><span class="comment">//使用linear_seq::gao(ve,n),ve是一个vector变量,n是递推的个数</span></span><br></pre></td></tr></table></figure><h4 id="辗转相除法"><a href="#辗转相除法" class="headerlink" title="辗转相除法"></a>辗转相除法</h4><p>求解满足$\frac{lb}{la} &lt; \frac{y}{x} &lt; \frac{rb}{ra}$，最小的$x$和$y$。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="comment">// b/a  y/x</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">cal</span><span class="params">(ll la, ll lb, ll ra, ll rb, ll &amp;x, ll &amp;y)</span></span>&#123;</span><br><span class="line">ll m = lb/la + <span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span>(m &lt;= rb/ra)&#123;</span><br><span class="line">y = m;</span><br><span class="line">x = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">return</span> ;</span><br><span class="line">&#125;</span><br><span class="line">m --;</span><br><span class="line">lb -= m*la, rb -= m*ra;</span><br><span class="line">cal(rb, ra, lb, la, y, x);</span><br><span class="line">y += m*x;<span class="comment">//回溯</span></span><br><span class="line"><span class="keyword">return</span> ;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> t;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;t);</span><br><span class="line">    <span class="keyword">while</span>(t--)&#123;</span><br><span class="line">        ll la,lb;</span><br><span class="line">        ll ra,rb;</span><br><span class="line">        ll x,p,k,b;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%lld %lld"</span>,&amp;p,&amp;x);</span><br><span class="line">        la=x;</span><br><span class="line">        lb=p;</span><br><span class="line">        ra=x<span class="number">-1</span>;</span><br><span class="line">        rb=p;</span><br><span class="line">        cal(la,lb,ra,rb,k,b);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%lld/%lld\n"</span>,b*x-k*p,b);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="Miller-Pabin-素数判定"><a href="#Miller-Pabin-素数判定" class="headerlink" title="Miller_Pabin 素数判定"></a>Miller_Pabin 素数判定</h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">ll <span class="title">qmul</span><span class="params">(ll a,ll b,ll mod)</span></span>&#123;</span><br><span class="line">    ll ans = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(b)&#123;</span><br><span class="line">        <span class="keyword">if</span>(b&amp;<span class="number">1</span>) ans = (ans+a)%mod;</span><br><span class="line">        a = (a+a)%mod;   <span class="comment">//相当于a*1、a*2、a*4、a*8的增加</span></span><br><span class="line">        b = b&gt;&gt;<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">ll <span class="title">qpow</span><span class="params">(ll x,ll n,ll mod)</span></span>&#123;</span><br><span class="line">    ll ans=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span>(n)&#123;</span><br><span class="line">        <span class="keyword">if</span>(n&amp;<span class="number">1</span>) ans=(ans*x)%mod;</span><br><span class="line">        x=x*x%mod;</span><br><span class="line">        n&gt;&gt;=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line">ll prime[<span class="number">6</span>] = &#123;<span class="number">2</span>, <span class="number">3</span>, <span class="number">5</span>, <span class="number">233</span>, <span class="number">331</span>&#125;;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">Miller_Rabin</span><span class="params">(ll p)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(p &lt; <span class="number">2</span>) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span>(p != <span class="number">2</span> &amp;&amp; p % <span class="number">2</span> == <span class="number">0</span>) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    ll s = p - <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span>(! (s &amp; <span class="number">1</span>)) s &gt;&gt;= <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">5</span>; ++i) &#123;</span><br><span class="line">        <span class="keyword">if</span>(p == prime[i]) <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">        ll t = s, m = qpow(prime[i], s, p);</span><br><span class="line">        <span class="keyword">while</span>(t != p - <span class="number">1</span> &amp;&amp; m != <span class="number">1</span> &amp;&amp; m != p - <span class="number">1</span>) &#123;</span><br><span class="line">            m = qmul(m, m, p);</span><br><span class="line">            t &lt;&lt;= <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(m != p - <span class="number">1</span> &amp;&amp; !(t &amp; <span class="number">1</span>)) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="大数分解质因数"><a href="#大数分解质因数" class="headerlink" title="大数分解质因数"></a>大数分解质因数</h4><p><a href="https://codeforces.com/gym/102299" target="_blank" rel="noopener">Forbechenko v Rodvsky</a></p><p>求使得$\frac{A}{B}$变成有限分数的$k$进制的最小的$k$。</p><p>结论：最小的$k$就是$\frac{\frac{A}{gcd(A,B)}}{\frac{B}{gcd(A,B)}}$中$\frac{B}{gcd(A,B)}$的所有质因数相乘的积$ans$，答案就是$\beta = min(2,ans)$。</p><p>$pollard _ rho$模板</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">typedef</span> pair&lt;<span class="keyword">int</span>, <span class="keyword">int</span>&gt; pii;</span><br><span class="line"><span class="keyword">typedef</span> pair&lt;ll, ll&gt; pll;</span><br><span class="line"><span class="keyword">typedef</span> pair&lt;ll, <span class="keyword">int</span>&gt; pli;</span><br><span class="line"><span class="keyword">namespace</span> pollard_rho &#123;</span><br><span class="line">    <span class="keyword">const</span> <span class="keyword">int</span> C = <span class="number">2307</span>;</span><br><span class="line">    <span class="keyword">const</span> <span class="keyword">int</span> S = <span class="number">10</span>;</span><br><span class="line">    <span class="function">mt19937 <span class="title">rd</span><span class="params">(time(<span class="number">0</span>))</span></span>;</span><br><span class="line">    <span class="built_in">vector</span>&lt;ll&gt; ve;</span><br><span class="line"></span><br><span class="line">    <span class="function">ll <span class="title">gcd</span><span class="params">(ll a, ll b)</span> </span>&#123; <span class="keyword">return</span> b ? gcd(b, a % b) : a; &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function">ll <span class="title">qmul</span><span class="params">(ll a, ll b, ll mod)</span> </span>&#123;</span><br><span class="line">        ll ans = <span class="number">0</span>;</span><br><span class="line">        a %= mod;</span><br><span class="line">        <span class="keyword">while</span> (b) &#123;</span><br><span class="line">            <span class="keyword">if</span> (b &amp; <span class="number">1</span>)</span><br><span class="line">                ans = (ans + a) % mod;</span><br><span class="line">            b &gt;&gt;= <span class="number">1</span>;</span><br><span class="line">            a = (a &lt;&lt; <span class="number">1</span>) % mod;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> ans;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function">ll <span class="title">mul</span><span class="params">(ll a, ll b, ll mod)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> a * b % mod;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function">ll <span class="title">power</span><span class="params">(ll a, ll b, ll mod)</span> </span>&#123;</span><br><span class="line">        ll res = <span class="number">1</span>;</span><br><span class="line">        a %= mod;</span><br><span class="line">        <span class="keyword">while</span> (b) &#123;</span><br><span class="line">            <span class="keyword">if</span> (b &amp; <span class="number">1</span>)res = qmul(res, a, mod);</span><br><span class="line">            a = qmul(a, a, mod);</span><br><span class="line">            b &gt;&gt;= <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">bool</span> <span class="title">check</span><span class="params">(ll a, ll n)</span> </span>&#123;</span><br><span class="line">        ll m = n - <span class="number">1</span>, x, y;</span><br><span class="line">        <span class="keyword">int</span> j = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span> (!(m &amp; <span class="number">1</span>))m &gt;&gt;= <span class="number">1</span>, j++;</span><br><span class="line">        x = power(a, m, n);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= j; x = y, i++) &#123;</span><br><span class="line">            y = qmul(x, x, n);</span><br><span class="line">            <span class="keyword">if</span> (y == <span class="number">1</span> &amp;&amp; x != <span class="number">1</span> &amp;&amp; x != n - <span class="number">1</span>)<span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> y != <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">bool</span> <span class="title">miller_rabin</span><span class="params">(ll n)</span> </span>&#123;</span><br><span class="line">        ll a;</span><br><span class="line">        <span class="keyword">if</span> (n == <span class="number">1</span>)<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">if</span> (n == <span class="number">2</span>)<span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">if</span> (!(n &amp; <span class="number">1</span>))<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; S; i++)<span class="keyword">if</span> (check(rd() % (n - <span class="number">1</span>) + <span class="number">1</span>, n))<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function">ll <span class="title">pollard_rho</span><span class="params">(ll n, <span class="keyword">int</span> c)</span> </span>&#123;</span><br><span class="line">        ll i = <span class="number">1</span>, k = <span class="number">2</span>, x = rd() % n, y = x, d;</span><br><span class="line">        <span class="keyword">while</span> (<span class="number">1</span>) &#123;</span><br><span class="line">            i++;</span><br><span class="line">            x = (qmul(x, x, n) + c) % n, d = gcd(y - x, n);</span><br><span class="line">            <span class="keyword">if</span> (d &gt; <span class="number">1</span> &amp;&amp; d &lt; n)<span class="keyword">return</span> d;</span><br><span class="line">            <span class="keyword">if</span> (y == x)<span class="keyword">return</span> n;</span><br><span class="line">            <span class="keyword">if</span> (i == k)y = x, k &lt;&lt;= <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">findfac</span><span class="params">(ll n, <span class="keyword">int</span> c)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (n == <span class="number">1</span>)<span class="keyword">return</span>;</span><br><span class="line">        <span class="keyword">if</span> (miller_rabin(n)) &#123;</span><br><span class="line">            ve.push_back(n);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        ll m = n;</span><br><span class="line">        <span class="keyword">while</span> (m == n)m = pollard_rho(n, c--);</span><br><span class="line">        findfac(m, c);</span><br><span class="line">        findfac(n / m, c);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">vector</span>&lt;pli&gt; solve(ll n) &#123;</span><br><span class="line">        <span class="built_in">vector</span>&lt;pli&gt; res;</span><br><span class="line">        ve.clear();</span><br><span class="line">        findfac(n, C);</span><br><span class="line">        sort(ve.begin(), ve.end());</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">auto</span> x:ve) &#123;</span><br><span class="line">            <span class="keyword">if</span> (res.empty() || res.back().first != x)res.push_back(&#123;x, <span class="number">1</span>&#125;);</span><br><span class="line">            <span class="keyword">else</span> res.back().second++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">ll <span class="title">solve</span><span class="params">(ll a,ll b)</span></span>&#123;</span><br><span class="line">    ll tmp=__gcd(a,b);</span><br><span class="line">    a/=tmp;</span><br><span class="line">    b/=tmp;</span><br><span class="line">    <span class="built_in">vector</span>&lt;pli&gt;ans;</span><br><span class="line">    ans=pollard_rho::solve(b);</span><br><span class="line">    ll res=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">auto</span> x:ans)&#123;</span><br><span class="line">        res*=x.first;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    ll a,b;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%lld %lld"</span>,&amp;a,&amp;b);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,max(<span class="number">2l</span>l,solve(a,b)));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="阶乘素因子出现的次数"><a href="#阶乘素因子出现的次数" class="headerlink" title="阶乘素因子出现的次数"></a>阶乘素因子出现的次数</h4><p>$$<br>cnt(x)=\left \lfloor \frac{n}{x^1} \right \rfloor+\left \lfloor \frac{n}{x^2} \right \rfloor+…+\left \lfloor \frac{n}{x^i} \right \rfloor if(x^i&lt;=n)<br>$$</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">ll now=prime[i],sum=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span>(now&lt;=n)&#123;</span><br><span class="line">sum+=n/now;</span><br><span class="line">now=now*prime[i];</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//or</span></span><br><span class="line">ll cnt=<span class="number">0</span>;</span><br><span class="line">ll tmp=n;</span><br><span class="line"><span class="keyword">while</span>(tmp/pr[i])&#123;</span><br><span class="line">  cnt+=(tmp/pr[i]);</span><br><span class="line">tmp/=pr[i];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="原根"><a href="#原根" class="headerlink" title="原根"></a>原根</h4><p>如果 ${ r * 2 ^ k + 1 }$ 是个素数，那么在 $ {mod \ r * 2 ^ k+1} $ 意义下，可以处理 $ 2^k $以内规模的数据。</p><p>记录一下 $a ∗ 2^k+1$型素数的原根 $g$。</p><table><thead><tr><th align="left">$a * 2^k + 1$</th><th>$a$</th><th>$k$</th><th>$g$</th></tr></thead><tbody><tr><td align="left">3</td><td>1</td><td>1</td><td>2</td></tr><tr><td align="left">5</td><td>1</td><td>2</td><td>2</td></tr><tr><td align="left">17</td><td>1</td><td>4</td><td>3</td></tr><tr><td align="left">97</td><td>3</td><td>5</td><td>5</td></tr><tr><td align="left">193</td><td>3</td><td>6</td><td>5</td></tr><tr><td align="left">257</td><td>1</td><td>8</td><td>3</td></tr><tr><td align="left">7681</td><td>15</td><td>9</td><td>17</td></tr><tr><td align="left">12289</td><td>3</td><td>12</td><td>11</td></tr><tr><td align="left">40961</td><td>5</td><td>13</td><td>3</td></tr><tr><td align="left">65537</td><td>1</td><td>16</td><td>3</td></tr><tr><td align="left">786433</td><td>3</td><td>18</td><td>10</td></tr><tr><td align="left">5767169</td><td>11</td><td>19</td><td>3</td></tr><tr><td align="left">7340033</td><td>7</td><td>20</td><td>3</td></tr><tr><td align="left">23068673</td><td>11</td><td>21</td><td>3</td></tr><tr><td align="left">104857601</td><td>25</td><td>22</td><td>3</td></tr><tr><td align="left">167772161</td><td>5</td><td>25</td><td>3</td></tr><tr><td align="left">469762049</td><td>7</td><td>26</td><td>3</td></tr><tr><td align="left">998244353(常见)</td><td>119</td><td>23</td><td>3</td></tr><tr><td align="left">1004535809</td><td>479</td><td>21</td><td>3</td></tr><tr><td align="left">1998585857</td><td>953</td><td>21</td><td>3</td></tr><tr><td align="left">2013265921</td><td>15</td><td>27</td><td>31</td></tr><tr><td align="left">2281701377</td><td>17</td><td>27</td><td>3</td></tr><tr><td align="left">3221225473</td><td>3</td><td>30</td><td>5</td></tr><tr><td align="left">75161927681</td><td>35</td><td>31</td><td>3</td></tr><tr><td align="left">77309411329</td><td>9</td><td>33</td><td>7</td></tr><tr><td align="left">206158430209</td><td>3</td><td>36</td><td>22</td></tr><tr><td align="left">2061584302081</td><td>15</td><td>37</td><td>7</td></tr><tr><td align="left">2748779069441</td><td>5</td><td>39</td><td>3</td></tr><tr><td align="left">6597069766657</td><td>3</td><td>41</td><td>5</td></tr><tr><td align="left">39582418599937</td><td>9</td><td>42</td><td>5</td></tr><tr><td align="left">79164837199873</td><td>9</td><td>43</td><td>5</td></tr><tr><td align="left">263882790666241</td><td>15</td><td>44</td><td>7</td></tr><tr><td align="left">1231453023109121</td><td>35</td><td>45</td><td>3</td></tr><tr><td align="left">1337006139375617</td><td>19</td><td>46</td><td>3</td></tr><tr><td align="left">3799912185593857</td><td>27</td><td>47</td><td>5</td></tr><tr><td align="left">4222124650659841</td><td>15</td><td>48</td><td>19</td></tr><tr><td align="left">7881299347898369</td><td>7</td><td>50</td><td>6</td></tr><tr><td align="left">31525197391593473</td><td>7</td><td>52</td><td>3</td></tr><tr><td align="left">180143985094819841</td><td>5</td><td>55</td><td>6</td></tr><tr><td align="left">1945555039024054273</td><td>27</td><td>56</td><td>5</td></tr><tr><td align="left">4179340454199820289</td><td>29</td><td>57</td><td>3</td></tr></tbody></table><h4 id="勾股定理构造"><a href="#勾股定理构造" class="headerlink" title="勾股定理构造"></a>勾股定理构造</h4><p>$(\frac{n^2}{4}-1)^2+n^2=(\frac{n^2}{4}+1)^2$</p><p>$(\frac{n^2-1}{2})^2+n^2=(\frac{n^2+1}{2})^2$</p><h3 id="几何"><a href="#几何" class="headerlink" title="几何"></a>几何</h3><h4 id="二维几何"><a href="#二维几何" class="headerlink" title="二维几何"></a>二维几何</h4><h4 id="三维几何"><a href="#三维几何" class="headerlink" title="三维几何"></a>三维几何</h4><h5 id="求两个平面的最短距离"><a href="#求两个平面的最短距离" class="headerlink" title="求两个平面的最短距离"></a>求两个平面的最短距离</h5><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"> </span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Point</span> &#123;</span></span><br><span class="line">  <span class="keyword">double</span> x, y, z;</span><br><span class="line">  Point <span class="keyword">operator</span>-(<span class="keyword">const</span> Point&amp; p) <span class="keyword">const</span> &#123; <span class="keyword">return</span> &#123;x-p.x, y-p.y, z-p.z&#125;; &#125;</span><br><span class="line">  Point <span class="keyword">operator</span>+(<span class="keyword">const</span> Point&amp; p) <span class="keyword">const</span> &#123; <span class="keyword">return</span> &#123;x+p.x, y+p.y, z+p.z&#125;; &#125;</span><br><span class="line">  Point <span class="keyword">operator</span>*(<span class="keyword">double</span> c) <span class="keyword">const</span> &#123; <span class="keyword">return</span> &#123;x*c, y*c, z*c&#125;; &#125;</span><br><span class="line">  Point <span class="keyword">operator</span>/(<span class="keyword">double</span> c) <span class="keyword">const</span> &#123; <span class="keyword">return</span> &#123;x/c, y/c, z/c&#125;; &#125;</span><br><span class="line">  <span class="function"><span class="keyword">double</span> <span class="title">lensqr</span><span class="params">()</span> <span class="keyword">const</span> </span>&#123; <span class="keyword">return</span> x*x+y*y+z*z; &#125;</span><br><span class="line">  <span class="function"><span class="keyword">double</span> <span class="title">len</span><span class="params">()</span> <span class="keyword">const</span> </span>&#123; <span class="keyword">return</span> <span class="built_in">sqrt</span>(x*x+y*y+z*z); &#125;</span><br><span class="line">  <span class="keyword">friend</span> ostream&amp; <span class="keyword">operator</span>&lt;&lt;(ostream&amp; out, <span class="keyword">const</span> Point&amp; p) &#123;</span><br><span class="line">    out &lt;&lt; <span class="string">'('</span> &lt;&lt; p.x &lt;&lt; <span class="string">','</span> &lt;&lt; p.y &lt;&lt; <span class="string">','</span> &lt;&lt; p.z &lt;&lt; <span class="string">')'</span>; <span class="keyword">return</span> out;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br><span class="line"> </span><br><span class="line"><span class="function">Point <span class="title">crossP</span><span class="params">(<span class="keyword">const</span> Point&amp; a, <span class="keyword">const</span> Point&amp; b)</span> </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> &#123;a.y*b.z-a.z*b.y, a.z*b.x-a.x*b.z, a.x*b.y-a.y*b.x&#125;;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">dotP</span><span class="params">(<span class="keyword">const</span> Point&amp; a, <span class="keyword">const</span> Point&amp; b)</span> </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> a.x*b.x + a.y*b.y + a.z*b.z;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  <span class="keyword">int</span> T, prob=<span class="number">1</span>;</span><br><span class="line">  <span class="keyword">for</span> (<span class="built_in">cin</span> &gt;&gt; T; T--;) &#123;</span><br><span class="line">    <span class="built_in">vector</span>&lt;Point&gt; t1(<span class="number">3</span>), t2(<span class="number">3</span>);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">3</span>; i++) <span class="built_in">cin</span> &gt;&gt; t1[i].x &gt;&gt; t1[i].y &gt;&gt; t1[i].z;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">3</span>; i++) <span class="built_in">cin</span> &gt;&gt; t2[i].x &gt;&gt; t2[i].y &gt;&gt; t2[i].z;</span><br><span class="line">    <span class="keyword">double</span> ret = <span class="number">1e9</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> swp = <span class="number">0</span>; swp &lt; <span class="number">2</span>; swp++) &#123;</span><br><span class="line">      swap(t1, t2);</span><br><span class="line">      <span class="keyword">for</span> (<span class="keyword">int</span> rot1 = <span class="number">0</span>; rot1 &lt; <span class="number">3</span>; rot1++) &#123;</span><br><span class="line">        rotate(t1.begin(), t1.begin()+<span class="number">1</span>, t1.end());</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> rot2 = <span class="number">0</span>; rot2 &lt; <span class="number">3</span>; rot2++) &#123;</span><br><span class="line">          rotate(t2.begin(), t2.begin()+<span class="number">1</span>, t2.end());</span><br><span class="line"> </span><br><span class="line">          <span class="comment">// Vertex-vertex</span></span><br><span class="line">          ret = min(ret, (t2[<span class="number">0</span>]-t1[<span class="number">0</span>]).len());</span><br><span class="line"> </span><br><span class="line">          <span class="comment">// Vertex-edge</span></span><br><span class="line">          <span class="keyword">double</span> dist = dotP(t2[<span class="number">0</span>]-t1[<span class="number">0</span>], t1[<span class="number">1</span>]-t1[<span class="number">0</span>]) / (t1[<span class="number">1</span>]-t1[<span class="number">0</span>]).lensqr();</span><br><span class="line">          <span class="keyword">if</span> (dist &gt; <span class="number">0</span> &amp;&amp; dist &lt; <span class="number">1</span>) &#123;</span><br><span class="line">            Point p = t1[<span class="number">0</span>]*(<span class="number">1</span>-dist) + t1[<span class="number">1</span>]*dist;</span><br><span class="line">            ret = min(ret, (t2[<span class="number">0</span>]-p).len());</span><br><span class="line">          &#125;</span><br><span class="line"> </span><br><span class="line">          <span class="comment">// Vertex-triangle</span></span><br><span class="line">          Point normal = crossP(t1[<span class="number">1</span>]-t1[<span class="number">0</span>], t1[<span class="number">2</span>]-t1[<span class="number">0</span>]);</span><br><span class="line">          normal = normal / normal.len();</span><br><span class="line">          <span class="keyword">double</span> h = dotP(normal, t2[<span class="number">0</span>]-t1[<span class="number">0</span>]);</span><br><span class="line">          Point base = t2[<span class="number">0</span>] - normal*h;</span><br><span class="line">          <span class="keyword">if</span> (dotP(normal, crossP(t1[<span class="number">1</span>]-t1[<span class="number">0</span>], base-t1[<span class="number">0</span>])) &gt; <span class="number">0</span> &amp;&amp;</span><br><span class="line">              dotP(normal, crossP(t1[<span class="number">2</span>]-t1[<span class="number">1</span>], base-t1[<span class="number">1</span>])) &gt; <span class="number">0</span> &amp;&amp;</span><br><span class="line">              dotP(normal, crossP(t1[<span class="number">0</span>]-t1[<span class="number">2</span>], base-t1[<span class="number">2</span>])) &gt; <span class="number">0</span>) &#123;</span><br><span class="line">            ret = min(ret, <span class="built_in">fabs</span>(h));</span><br><span class="line">          &#125;</span><br><span class="line"> </span><br><span class="line">          <span class="comment">// Edge-edge</span></span><br><span class="line">          normal = crossP(t1[<span class="number">1</span>]-t1[<span class="number">0</span>], t2[<span class="number">1</span>]-t2[<span class="number">0</span>]);</span><br><span class="line">          <span class="keyword">double</span> cp1 = dotP(normal, crossP(t2[<span class="number">1</span>]-t2[<span class="number">0</span>], t1[<span class="number">0</span>]-t2[<span class="number">0</span>]));</span><br><span class="line">          <span class="keyword">double</span> cp2 = dotP(normal, crossP(t2[<span class="number">1</span>]-t2[<span class="number">0</span>], t1[<span class="number">1</span>]-t2[<span class="number">0</span>]));</span><br><span class="line">          <span class="keyword">double</span> cp3 = dotP(normal, crossP(t1[<span class="number">1</span>]-t1[<span class="number">0</span>], t2[<span class="number">0</span>]-t1[<span class="number">0</span>]));</span><br><span class="line">          <span class="keyword">double</span> cp4 = dotP(normal, crossP(t1[<span class="number">1</span>]-t1[<span class="number">0</span>], t2[<span class="number">1</span>]-t1[<span class="number">0</span>]));</span><br><span class="line">          <span class="keyword">if</span> (cp1*cp2 &lt; <span class="number">0</span> &amp;&amp; cp3*cp4 &lt; <span class="number">0</span>) &#123;</span><br><span class="line">            Point p1 = (t1[<span class="number">1</span>]*cp1 - t1[<span class="number">0</span>]*cp2) / (cp1-cp2);</span><br><span class="line">            Point p2 = (t2[<span class="number">1</span>]*cp3 - t2[<span class="number">0</span>]*cp4) / (cp3-cp4);</span><br><span class="line">            ret = min(ret, (p2-p1).len());</span><br><span class="line">          &#125;</span><br><span class="line"> </span><br><span class="line">          <span class="comment">// Edge-triangle (and triangle-triangle)</span></span><br><span class="line">          normal = crossP(t1[<span class="number">1</span>]-t1[<span class="number">0</span>], t1[<span class="number">2</span>]-t1[<span class="number">0</span>]);</span><br><span class="line">          normal = normal / normal.len();</span><br><span class="line">          cp1 = dotP(normal, t2[<span class="number">0</span>]-t1[<span class="number">0</span>]);</span><br><span class="line">          cp2 = dotP(normal, t2[<span class="number">1</span>]-t1[<span class="number">0</span>]);</span><br><span class="line">          <span class="keyword">if</span> (cp1*cp2 &lt; <span class="number">0</span>) &#123;</span><br><span class="line">            Point p = (t2[<span class="number">1</span>]*cp1 - t2[<span class="number">0</span>]*cp2) / (cp1-cp2);</span><br><span class="line">            <span class="keyword">if</span> (dotP(normal, crossP(t1[<span class="number">1</span>]-t1[<span class="number">0</span>], p-t1[<span class="number">0</span>])) &gt; <span class="number">0</span> &amp;&amp;</span><br><span class="line">                dotP(normal, crossP(t1[<span class="number">2</span>]-t1[<span class="number">1</span>], p-t1[<span class="number">1</span>])) &gt; <span class="number">0</span> &amp;&amp;</span><br><span class="line">                dotP(normal, crossP(t1[<span class="number">0</span>]-t1[<span class="number">2</span>], p-t1[<span class="number">2</span>])) &gt; <span class="number">0</span>) &#123;</span><br><span class="line">              ret = <span class="number">0.0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%.12lf\n"</span>, ret);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Collected By Hope_Y…&lt;/p&gt;
    
    </summary>
    
      <category term="模板" scheme="http://yoursite.com/categories/%E6%A8%A1%E6%9D%BF/"/>
    
    
  </entry>
  
  <entry>
    <title>补题&amp;补题</title>
    <link href="http://yoursite.com/2019/08/13/%E8%A1%A5%E9%A2%98&amp;%E8%A1%A5%E9%A2%98/"/>
    <id>http://yoursite.com/2019/08/13/补题&amp;补题/</id>
    <published>2019-08-13T09:28:32.710Z</published>
    <updated>2019-09-09T02:49:54.487Z</updated>
    
    <content type="html"><![CDATA[<p> 鸽了暑假来自闭系列。</p><a id="more"></a><h2 id="牛客多校"><a href="#牛客多校" class="headerlink" title="牛客多校"></a>牛客多校</h2><h3 id="2nd"><a href="#2nd" class="headerlink" title="2nd"></a>2nd</h3><p><a href="https://ac.nowcoder.com/acm/contest/882/B" target="_blank" rel="noopener">B</a></p><p>杜教递推，$dp_i$代表走到$i$的概率。</p><p>得到递推式：</p><p>${dp_i}=<br>\frac{dp_{i-1}+dp_{i-2}+dp_{i-3}+…+dp_{i-k}}{k} $<br>$dp_i =  0  \ \ \ \ \ \ \ \ \ \  i&lt;0$<br>$dp_i =  \frac{2}{k+1}  \ \ \ \ \ \ \ \ \  i=\infty  $</p><p>计算出前3*k项，就可以BM</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rep(i, a, n) for (int i = a; i &lt; n; i++)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> pb push_back</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> sz(x) ((int)(x).size())</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">typedef</span> <span class="built_in">vector</span>&lt;ll&gt; VI;</span><br><span class="line"><span class="keyword">const</span> ll mod = <span class="number">1000000007</span>;</span><br><span class="line"> </span><br><span class="line"><span class="function">ll <span class="title">fastpower</span><span class="params">(ll a, ll b)</span> </span>&#123;</span><br><span class="line">    ll res = <span class="number">1</span>;</span><br><span class="line">    a %= mod;</span><br><span class="line">    assert(b &gt;= <span class="number">0</span>);</span><br><span class="line">    <span class="keyword">for</span> (; b; b &gt;&gt;= <span class="number">1</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (b &amp; <span class="number">1</span>) res = res * a % mod;</span><br><span class="line">        a = a * a % mod;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// head</span></span><br><span class="line"> </span><br><span class="line"><span class="keyword">int</span> _, n;</span><br><span class="line"><span class="keyword">namespace</span> linear_seq &#123;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">10010</span>;</span><br><span class="line">ll res[N], base[N], _c[N], _md[N];</span><br><span class="line"> </span><br><span class="line"><span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; Md;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">mul</span><span class="params">(ll *a, ll *b, <span class="keyword">int</span> k)</span> </span>&#123;</span><br><span class="line">    rep(i, <span class="number">0</span>, k + k) _c[i] = <span class="number">0</span>;</span><br><span class="line">    rep(i, <span class="number">0</span>, k) <span class="keyword">if</span> (a[i]) rep(j, <span class="number">0</span>, k) _c[i + j] =</span><br><span class="line">        (_c[i + j] + a[i] * b[j]) % mod;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = k + k - <span class="number">1</span>; i &gt;= k; i--)</span><br><span class="line">        <span class="keyword">if</span> (_c[i])</span><br><span class="line">            rep(j, <span class="number">0</span>, sz(Md)) _c[i - k + Md[j]] =</span><br><span class="line">                (_c[i - k + Md[j]] - _c[i] * _md[Md[j]]) % mod;</span><br><span class="line">    rep(i, <span class="number">0</span>, k) a[i] = _c[i];</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">solve</span><span class="params">(ll n, VI a, VI b)</span> </span>&#123;  <span class="comment">// a 系数 b 初值 b[n+1]=a[0]*b[n]+...</span></span><br><span class="line">                               <span class="comment">//        printf("%d\n",sz(b));</span></span><br><span class="line">    ll ans = <span class="number">0</span>, pnt = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">int</span> k = sz(a);</span><br><span class="line">    assert(sz(a) == sz(b));</span><br><span class="line">    rep(i, <span class="number">0</span>, k) _md[k - <span class="number">1</span> - i] = -a[i];</span><br><span class="line">    _md[k] = <span class="number">1</span>;</span><br><span class="line">    Md.clear();</span><br><span class="line">    rep(i, <span class="number">0</span>, k) <span class="keyword">if</span> (_md[i] != <span class="number">0</span>) Md.push_back(i);</span><br><span class="line">    rep(i, <span class="number">0</span>, k) res[i] = base[i] = <span class="number">0</span>;</span><br><span class="line">    res[<span class="number">0</span>] = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span> ((<span class="number">1l</span>l &lt;&lt; pnt) &lt;= n) pnt++;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> p = pnt; p &gt;= <span class="number">0</span>; p--) &#123;</span><br><span class="line">        mul(res, res, k);</span><br><span class="line">        <span class="keyword">if</span> ((n &gt;&gt; p) &amp; <span class="number">1</span>) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = k - <span class="number">1</span>; i &gt;= <span class="number">0</span>; i--) res[i + <span class="number">1</span>] = res[i];</span><br><span class="line">            res[<span class="number">0</span>] = <span class="number">0</span>;</span><br><span class="line">            rep(j, <span class="number">0</span>, sz(Md)) res[Md[j]] =</span><br><span class="line">                (res[Md[j]] - res[k] * _md[Md[j]]) % mod;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    rep(i, <span class="number">0</span>, k) ans = (ans + res[i] * b[i]) % mod;</span><br><span class="line">    <span class="keyword">if</span> (ans &lt; <span class="number">0</span>) ans += mod;</span><br><span class="line">    <span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">VI <span class="title">BM</span><span class="params">(VI s)</span> </span>&#123;</span><br><span class="line">    VI C(1, 1), B(1, 1);</span><br><span class="line">    <span class="keyword">int</span> L = <span class="number">0</span>, m = <span class="number">1</span>, b = <span class="number">1</span>;</span><br><span class="line">    rep(n, <span class="number">0</span>, sz(s)) &#123;</span><br><span class="line">        ll d = <span class="number">0</span>;</span><br><span class="line">        rep(i, <span class="number">0</span>, L + <span class="number">1</span>) d = (d + (ll)C[i] * s[n - i]) % mod;</span><br><span class="line">        <span class="keyword">if</span> (d == <span class="number">0</span>)</span><br><span class="line">            ++m;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (<span class="number">2</span> * L &lt;= n) &#123;</span><br><span class="line">            VI T = C;</span><br><span class="line">            ll c = mod - d * fastpower(b, mod - <span class="number">2</span>) % mod;</span><br><span class="line">            <span class="keyword">while</span> (sz(C) &lt; sz(B) + m) C.pb(<span class="number">0</span>);</span><br><span class="line">            rep(i, <span class="number">0</span>, sz(B)) C[i + m] = (C[i + m] + c * B[i]) % mod;</span><br><span class="line">            L = n + <span class="number">1</span> - L;</span><br><span class="line">            B = T;</span><br><span class="line">            b = d;</span><br><span class="line">            m = <span class="number">1</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            ll c = mod - d * fastpower(b, mod - <span class="number">2</span>) % mod;</span><br><span class="line">            <span class="keyword">while</span> (sz(C) &lt; sz(B) + m) C.pb(<span class="number">0</span>);</span><br><span class="line">            rep(i, <span class="number">0</span>, sz(B)) C[i + m] = (C[i + m] + c * B[i]) % mod;</span><br><span class="line">            ++m;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> C;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">gao</span><span class="params">(VI a, ll n)</span></span>&#123;</span><br><span class="line">    VI c = BM(a);</span><br><span class="line">    c.erase(c.begin());</span><br><span class="line">    rep(i, <span class="number">0</span>, sz(c)) c[i] = (mod - c[i]) % mod;</span><br><span class="line">    <span class="keyword">return</span> solve(n, c, VI(a.begin(), a.begin() + sz(c)));</span><br><span class="line">&#125;</span><br><span class="line">&#125;;  <span class="comment">// namespace linear_seq</span></span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">solve</span><span class="params">()</span></span>&#123;</span><br><span class="line">    ll n,k;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;k&gt;&gt;n;</span><br><span class="line">    <span class="keyword">if</span>(n == <span class="number">0</span>)&#123;</span><br><span class="line">        <span class="built_in">puts</span>(<span class="string">"1"</span>);</span><br><span class="line">        <span class="keyword">return</span> ;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(n == <span class="number">-1</span>)&#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,<span class="number">2</span>*fastpower(k+<span class="number">1</span>,mod<span class="number">-2</span>)%mod );</span><br><span class="line">        <span class="keyword">return</span> ;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function">VI <span class="title">dp</span><span class="params">(<span class="number">3</span>*k,<span class="number">0</span>)</span></span>;</span><br><span class="line">    VI v;</span><br><span class="line">    dp[<span class="number">0</span>]=<span class="number">1</span>;</span><br><span class="line">    v.pb(<span class="number">1</span>);</span><br><span class="line">    <span class="keyword">for</span> (ll i = <span class="number">1</span>; i &lt;= k; i++) &#123;</span><br><span class="line">        <span class="keyword">for</span> (ll j = <span class="number">0</span>; j &lt; i; j++) &#123;</span><br><span class="line">            dp[i] = (dp[i] + dp[j]) % mod;</span><br><span class="line">        &#125;</span><br><span class="line">        dp[i] = dp[i] * fastpower(k, mod - <span class="number">2</span>) % mod;</span><br><span class="line">        v.pb(dp[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (ll i = k + <span class="number">1</span>; i &lt;= <span class="number">2</span> * k; i++) &#123;</span><br><span class="line">        <span class="keyword">for</span> (ll j = <span class="number">1</span>; j &lt;= k; j++) &#123;</span><br><span class="line">            dp[i] = (dp[i] + dp[i - j]) % mod;</span><br><span class="line">        &#125;</span><br><span class="line">        dp[i] = dp[i] * fastpower(k, mod - <span class="number">2</span>) % mod;</span><br><span class="line">        v.pb(dp[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,linear_seq::gao(v,n));</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> t;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;t;</span><br><span class="line">    <span class="keyword">while</span>(t--)&#123;</span><br><span class="line">        solve();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><a href="https://ac.nowcoder.com/acm/contest/882/D" target="_blank" rel="noopener">D</a></p><p>求第k小团。</p><p>利用bitset函数记录状态以及BFS从最小的团开始往上找k个就好了。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> ll maxn=<span class="number">110</span>;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span>&#123;</span></span><br><span class="line">    <span class="built_in">bitset</span>&lt;maxn&gt;bi;</span><br><span class="line">    ll w;</span><br><span class="line">    node()&#123;&#125;</span><br><span class="line">    node(ll w,<span class="built_in">bitset</span>&lt;maxn&gt;bi):w(w),bi(bi)&#123;&#125;</span><br><span class="line">    <span class="keyword">friend</span> <span class="keyword">bool</span> <span class="keyword">operator</span>&lt;(node i,node j)&#123;</span><br><span class="line">        <span class="keyword">return</span> i.w&gt;j.w;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="built_in">bitset</span>&lt;maxn&gt;e[maxn];</span><br><span class="line">ll n,k,a[maxn];</span><br><span class="line"><span class="keyword">char</span> s[maxn];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">solve</span><span class="params">()</span></span>&#123;</span><br><span class="line">    priority_queue&lt;node&gt;q;</span><br><span class="line">    <span class="built_in">bitset</span>&lt;maxn&gt;tmp;</span><br><span class="line">    tmp.reset();</span><br><span class="line">    q.push(node&#123;<span class="number">0</span>,tmp&#125;);</span><br><span class="line">    <span class="keyword">for</span>(ll i=<span class="number">1</span>; i&lt;=k; i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(q.empty())&#123;</span><br><span class="line">            <span class="built_in">puts</span>(<span class="string">"-1"</span>);</span><br><span class="line">            <span class="keyword">return</span> ;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//printf("****%lld\n",q.top().w);</span></span><br><span class="line">        <span class="keyword">if</span>(i==k)&#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,q.top().w);</span><br><span class="line">            <span class="keyword">return</span> ;</span><br><span class="line">        &#125;</span><br><span class="line">        tmp=q.top().bi;</span><br><span class="line">        ll ww=q.top().w;</span><br><span class="line">        q.pop();</span><br><span class="line">        ll cnt=<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span>(ll j=<span class="number">1</span>; j&lt;=n; j++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(tmp[j]) cnt=j+<span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(ll j=cnt; j&lt;=n; j++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(tmp[j]==<span class="number">0</span> &amp;&amp; ((tmp&amp;e[j])==tmp))&#123;</span><br><span class="line">                <span class="built_in">bitset</span>&lt;maxn&gt;tt;</span><br><span class="line">                tt=tmp;</span><br><span class="line">                tt.<span class="built_in">set</span>(j);</span><br><span class="line">                <span class="comment">//printf("!!!%lld %lld\n",j,ww+a[j]);</span></span><br><span class="line">                q.push(node(ww+a[j],tt));</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%lld %lld"</span>,&amp;n,&amp;k);</span><br><span class="line">    <span class="keyword">for</span>(ll i=<span class="number">1</span>; i&lt;=n; i++) <span class="built_in">scanf</span>(<span class="string">"%lld"</span>,&amp;a[i]);</span><br><span class="line">    <span class="keyword">for</span>(ll i=<span class="number">1</span>; i&lt;=n; i++)&#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%s"</span>,s+<span class="number">1</span>);</span><br><span class="line">        <span class="keyword">for</span>(ll j=<span class="number">1</span>; j&lt;=n; j++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(s[j] == <span class="string">'1'</span>) e[i].<span class="built_in">set</span>(j);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    solve();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="3rd"><a href="#3rd" class="headerlink" title="3rd"></a>3rd</h3><p><a href="https://ac.nowcoder.com/acm/contest/883/G" target="_blank" rel="noopener">G</a></p><p>其实这道题是跟着给的结论来的，结论：求有多少个区间满足区间最大值的两倍不大于区间和。</p><p><del>这个结论是不容易想到的，想到了也未必能做。</del></p><p>ST表存最大值所在的下标。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> ll maxn=<span class="number">300000</span>+<span class="number">10</span>;</span><br><span class="line">ll pre[maxn],a[maxn],suf[maxn];</span><br><span class="line">ll n,t;</span><br><span class="line">ll dp[maxn][<span class="number">25</span>];</span><br><span class="line">ll pos[maxn][<span class="number">25</span>];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">ST</span><span class="params">(<span class="keyword">int</span> tot)</span></span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= tot; ++i)</span><br><span class="line">        dp[i][<span class="number">0</span>] = i;<span class="comment">//存的是最小值的下标</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> len = <span class="number">1</span>; (<span class="number">1</span> &lt;&lt; len) &lt;= tot; ++len)&#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> l = <span class="number">1</span>; l + (<span class="number">1</span> &lt;&lt; len) - <span class="number">1</span> &lt;= tot; ++l)&#123;</span><br><span class="line">            <span class="keyword">if</span> (a[dp[l][len - <span class="number">1</span>]] &gt; a[dp[l + (<span class="number">1</span> &lt;&lt; (len - <span class="number">1</span>))][len - <span class="number">1</span>]])dp[l][len] = dp[l][len - <span class="number">1</span>];</span><br><span class="line">            <span class="keyword">else</span> dp[l][len] = dp[l + (<span class="number">1</span> &lt;&lt; (len - <span class="number">1</span>))][len - <span class="number">1</span>];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">RMQ</span><span class="params">(<span class="keyword">int</span> l, <span class="keyword">int</span> r)</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> len = <span class="built_in">log</span>(r - l + <span class="number">1</span>) / <span class="built_in">log</span>(<span class="number">2</span>);</span><br><span class="line">    <span class="keyword">if</span> (a[dp[l][len]] &gt; a[dp[r - (<span class="number">1</span> &lt;&lt; len) + <span class="number">1</span>][len]])<span class="keyword">return</span> dp[l][len];</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">return</span> dp[r - (<span class="number">1</span> &lt;&lt; len) + <span class="number">1</span>][len];</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">ll <span class="title">cdq</span><span class="params">(ll l,ll r)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(l&gt;=r) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span>(r==l+<span class="number">1</span> &amp;&amp; a[l]==a[r]) <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">if</span>(r==l+<span class="number">1</span>) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    ll pos=RMQ(l,r);</span><br><span class="line">    <span class="comment">//printf("%lld\n",pos);</span></span><br><span class="line">    ll ans=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span>(pos-l &lt; r-pos)&#123;</span><br><span class="line">        <span class="keyword">for</span>(ll i=l; i&lt;=pos; i++)&#123;</span><br><span class="line">            ll sl=i,sr=r;</span><br><span class="line">            ans+=(r-(lower_bound(pre+pos,pre+r+<span class="number">1</span>,pre[i<span class="number">-1</span>]+<span class="number">2</span>*a[pos])-pre)+<span class="number">1</span>);</span><br><span class="line">             </span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">for</span>(ll i=pos; i&lt;=r; i++)&#123;</span><br><span class="line">            ll sl=l,sr=i;</span><br><span class="line"><span class="comment">//            while(sl &lt; sr-1)&#123;</span></span><br><span class="line"><span class="comment">//                ll mid=(sl+sr)&gt;&gt;1ll;</span></span><br><span class="line"><span class="comment">//                if(suf[mid]-suf[i+1] &gt;= 2*a[pos]) sl=mid;</span></span><br><span class="line"><span class="comment">//                else sr=mid-1;</span></span><br><span class="line"><span class="comment">//            &#125;</span></span><br><span class="line"><span class="comment">//            //printf("***%lld %lld %lld\n",sl,sr,l-1);</span></span><br><span class="line"><span class="comment">//            ans+=(sl-l+1);</span></span><br><span class="line">ans+=((n+<span class="number">1</span>-(lower_bound(suf+(n+<span class="number">1</span>-pos),suf+(n+<span class="number">1</span>-l)+<span class="number">1</span>,suf[(n+<span class="number">1</span>-(i+<span class="number">1</span>))]+<span class="number">2</span>*a[pos])-suf))-l+<span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ans+cdq(l,pos<span class="number">-1</span>)+cdq(pos+<span class="number">1</span>,r);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%lld"</span>,&amp;t);</span><br><span class="line">    <span class="keyword">while</span>(t--)&#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%lld"</span>,&amp;n);</span><br><span class="line">        <span class="keyword">for</span>(ll i=<span class="number">1</span>; i&lt;=n; i++)&#123;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">"%lld"</span>,&amp;a[i]);</span><br><span class="line">            pre[i]=pre[i<span class="number">-1</span>]+a[i];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//init();</span></span><br><span class="line">        ST(n);</span><br><span class="line">        suf[n+<span class="number">1</span>]=<span class="number">0</span>;</span><br><span class="line">        <span class="comment">//for(ll i=n; i&gt;0; i--) suf[i]=suf[i+1]+a[i];</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=n; i++)</span><br><span class="line">            suf[i]=suf[i<span class="number">-1</span>]+a[n+<span class="number">1</span>-i];</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,cdq(<span class="number">1</span>,n));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><a href="https://ac.nowcoder.com/acm/contest/883/I" target="_blank" rel="noopener">I</a></p><p>一道记录路径的dp题，显然最后的答案的所有数必然是第一个序列的元素，每一个元素都是第一个序列对应元素的左中右三个数。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn=<span class="number">1e5</span>+<span class="number">10</span>;</span><br><span class="line"><span class="keyword">bool</span> dp[maxn][<span class="number">4</span>][<span class="number">4</span>]; <span class="comment">// dp[i][j][k] a[i]取对应三位数的第j大的数,a[i-1]取对应三位数的第k大的数</span></span><br><span class="line"><span class="keyword">int</span> ans[maxn],n;</span><br><span class="line"><span class="keyword">int</span> cnt[maxn][<span class="number">4</span>];  <span class="comment">//cnt[i][j] a[i]对应的三位数中第j大的数</span></span><br><span class="line"><span class="keyword">int</span> pre[maxn][<span class="number">4</span>][<span class="number">4</span>];</span><br><span class="line"><span class="keyword">int</span> b[maxn];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">Mid</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y,<span class="keyword">int</span> z)</span></span>&#123; <span class="comment">// 取x,y,z中的中位数</span></span><br><span class="line"><span class="comment">//    vector&lt;int&gt;v;</span></span><br><span class="line"><span class="comment">//    v.push_back(x);v.push_back(y);v.push_back(z);</span></span><br><span class="line"><span class="comment">//    sort(v.begin(),v.end());</span></span><br><span class="line"><span class="comment">//    return v[1];</span></span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">int</span> tmp[<span class="number">3</span>];</span><br><span class="line">    tmp[<span class="number">0</span>]=x,tmp[<span class="number">1</span>]=y,tmp[<span class="number">2</span>]=z;</span><br><span class="line">    sort(tmp,tmp+<span class="number">3</span>);</span><br><span class="line">    <span class="keyword">return</span> tmp[<span class="number">1</span>];</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">init</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;=n; i++)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>; j&lt;=<span class="number">3</span>; j++)&#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> k=<span class="number">1</span>; k&lt;=<span class="number">3</span>; k++)&#123;</span><br><span class="line">                <span class="keyword">if</span>(i&lt;=<span class="number">2</span>) dp[i][j][k]=<span class="number">1</span>;</span><br><span class="line">                <span class="keyword">else</span> dp[i][j][k]=<span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=n; i++)&#123;</span><br><span class="line">        cnt[i][<span class="number">1</span>]=b[i];</span><br><span class="line">        cnt[i][<span class="number">2</span>]=b[i<span class="number">-1</span>];</span><br><span class="line">        cnt[i][<span class="number">3</span>]=b[i+<span class="number">1</span>];</span><br><span class="line">        sort(cnt[i]+<span class="number">1</span>,cnt[i]+<span class="number">4</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> i,<span class="keyword">int</span> j,<span class="keyword">int</span> k)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(i==<span class="number">0</span>) <span class="keyword">return</span> ;</span><br><span class="line">    ans[i]=cnt[i][j];</span><br><span class="line">    dfs(i<span class="number">-1</span>,k,pre[i][j][k]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> t;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;t);</span><br><span class="line">    <span class="keyword">while</span>(t--)&#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>; i&lt;n; i++)&#123;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;b[i]); <span class="comment">// b[i]为a[i-1] a[i] a[i+1] 的中位数</span></span><br><span class="line">        &#125;</span><br><span class="line">        b[n]=b[n+<span class="number">1</span>]=b[n<span class="number">-1</span>];</span><br><span class="line">        b[<span class="number">0</span>]=b[<span class="number">1</span>]=b[<span class="number">2</span>];</span><br><span class="line">        init();</span><br><span class="line">        <span class="keyword">bool</span> flag=<span class="literal">true</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">3</span>; i&lt;=n&amp;&amp;flag; i++)&#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>; j&lt;<span class="number">4</span>&amp;&amp;flag; j++)&#123;</span><br><span class="line">                <span class="keyword">for</span>(<span class="keyword">int</span> k=<span class="number">1</span>; k&lt;<span class="number">4</span>&amp;&amp;flag; k++)&#123;</span><br><span class="line">                    <span class="keyword">for</span>(<span class="keyword">int</span> l=<span class="number">1</span>; l&lt;<span class="number">4</span>&amp;&amp;flag; l++)&#123;</span><br><span class="line">                        <span class="keyword">if</span>(dp[i<span class="number">-1</span>][k][l]==<span class="number">0</span>) <span class="keyword">continue</span>;</span><br><span class="line">                        <span class="keyword">if</span>(Mid(cnt[i][j],cnt[i<span class="number">-1</span>][k],cnt[i<span class="number">-2</span>][l])!=b[i<span class="number">-1</span>])&#123;</span><br><span class="line">                            <span class="comment">//printf("%d %d %d %d\n",i,j,k,l);</span></span><br><span class="line">                            <span class="keyword">continue</span>;</span><br><span class="line">                        &#125;</span><br><span class="line">                        pre[i][j][k]=l;</span><br><span class="line">                        dp[i][j][k]=<span class="number">1</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">if</span>(i==n &amp;&amp; dp[i][j][k])&#123;</span><br><span class="line">                        flag=<span class="literal">false</span>;</span><br><span class="line">                        dfs(i,j,k);</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(flag)&#123;</span><br><span class="line">            <span class="built_in">puts</span>(<span class="string">"-1"</span>);</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//ans[1]=ans[2]=b[2];</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=n; i++) <span class="built_in">printf</span>(<span class="string">"%d%c"</span>,ans[i],i&lt;n?<span class="string">' '</span>:<span class="string">'\n'</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="4th"><a href="#4th" class="headerlink" title="4th"></a>4th</h3><p><a href="https://ac.nowcoder.com/acm/contest/884/I" target="_blank" rel="noopener">string</a></p><p>回文自动机+后缀自动机</p><p>将原串$s$变成$s+rev(s)$，然后回文串的数量加上子串的数量除以2就是答案。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> ll maxn=<span class="number">5e5</span>+<span class="number">10</span>;</span><br><span class="line"><span class="keyword">const</span> ll N=<span class="number">30</span>;</span><br><span class="line"><span class="keyword">char</span> s[maxn];</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">SAM</span>&#123;</span></span><br><span class="line">    ll len[maxn * <span class="number">2</span>], <span class="comment">//最长子串的长度(该节点字串数量=len[x]-len[link[x]])</span></span><br><span class="line">    link[maxn * <span class="number">2</span>],   <span class="comment">//后缀链接(最短串前部减少一个字符所到达的状态)</span></span><br><span class="line">    cnt[maxn * <span class="number">2</span>],    <span class="comment">//被后缀连接的数</span></span><br><span class="line">    nex[maxn * <span class="number">2</span>][<span class="number">30</span>],  <span class="comment">//状态转移(尾部加一个字符的下一个状态)(图)</span></span><br><span class="line">    idx, <span class="comment">//节点编号</span></span><br><span class="line">    last;    <span class="comment">//最后节点</span></span><br><span class="line">    ll epos[maxn * <span class="number">2</span>]; <span class="comment">// enpos数（该状态子串出现数量）</span></span><br><span class="line">    ll a[maxn];     <span class="comment">//长度为i的子串出现最大次数</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">init</span><span class="params">()</span> </span>&#123;   <span class="comment">//初始化</span></span><br><span class="line">        last = idx = <span class="number">1</span>; <span class="comment">//1表示root起始点 空集</span></span><br><span class="line">        link[<span class="number">1</span>] = len[<span class="number">1</span>] = <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//SAM建图</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(ll c)</span></span>&#123;     <span class="comment">//插入字符，为字符ascll码值</span></span><br><span class="line">        c-=<span class="string">'a'</span>;</span><br><span class="line">        ll x = ++idx; <span class="comment">//创建一个新节点x;</span></span><br><span class="line">        len[x] = len[last] + <span class="number">1</span>; <span class="comment">//  长度等于最后一个节点+1</span></span><br><span class="line">        epos[x] = <span class="number">1</span>;  <span class="comment">//接受节点子串除后缀连接还需加一</span></span><br><span class="line">        ll p;  <span class="comment">//第一个有C转移的节点;</span></span><br><span class="line">        <span class="keyword">for</span>(p = last; p &amp;&amp; !nex[p][c]; p = link[p]) nex[p][c] = x;<span class="comment">//沿着后缀连接 将所有没有字符c转移的节点直接指向新节点</span></span><br><span class="line">        <span class="keyword">if</span>(!p) link[x] = <span class="number">1</span>, cnt[<span class="number">1</span>]++;  <span class="comment">//全部都没有c的转移 直接将新节点后缀连接到起点</span></span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            ll q = nex[p][c];    <span class="comment">//p通过c转移到的节点</span></span><br><span class="line">            <span class="keyword">if</span> (len[p] + <span class="number">1</span> == len[q])    <span class="comment">//pq是连续的</span></span><br><span class="line">                link[x] = q, cnt[q]++; <span class="comment">//将新节点后缀连接指向q即可,q节点的被后缀连接数+1</span></span><br><span class="line">            <span class="keyword">else</span>&#123;</span><br><span class="line">                ll nq = ++idx;   <span class="comment">//不连续 需要复制一份q节点</span></span><br><span class="line">                len[nq] = len[p] + <span class="number">1</span>;   <span class="comment">//令nq与p连续</span></span><br><span class="line">                link[nq] = link[q];   <span class="comment">//因后面link[q]改变此处不加cnt</span></span><br><span class="line">                <span class="built_in">memcpy</span>(nex[nq], nex[q], <span class="keyword">sizeof</span>(nex[q]));  <span class="comment">//复制q的信息给nq</span></span><br><span class="line">                <span class="keyword">for</span> (; p&amp;&amp;nex[p][c] == q; p = link[p])</span><br><span class="line">                    nex[p][c] = nq;    <span class="comment">//沿着后缀连接 将所有通过c转移为q的改为nq</span></span><br><span class="line">                link[q] = link[x] = nq; <span class="comment">//将x和q后缀连接改为nq</span></span><br><span class="line">                cnt[nq] += <span class="number">2</span>; <span class="comment">//  nq增加两个后缀连接</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        last=x;  <span class="comment">//更新最后处理的节点</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">GetNpos</span><span class="params">()</span></span>&#123; <span class="comment">//求npos数，即该节点字串出现次数</span></span><br><span class="line">        <span class="built_in">queue</span>&lt;ll&gt;q;</span><br><span class="line">        <span class="keyword">for</span> (ll i = <span class="number">1</span>; i &lt;= idx; i++)</span><br><span class="line">            <span class="keyword">if</span> (!cnt[i])q.push(i);   <span class="comment">//将所有没被后缀连接指向的节点入队</span></span><br><span class="line">        <span class="keyword">while</span> (!q.empty())&#123;</span><br><span class="line">            ll x = q.front();</span><br><span class="line">            q.pop();</span><br><span class="line">            epos[link[x]] += epos[x]; <span class="comment">//子串数量等于所有后缀连接指向该节点的子串数量和+是否为接受节点</span></span><br><span class="line">            <span class="keyword">if</span> (--cnt[link[x]] == <span class="number">0</span>)q.push(link[x]);   <span class="comment">//当所有后缀连接指向该节点的处理完毕后再入队</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function">ll <span class="title">GetSubNum</span><span class="params">()</span></span>&#123; <span class="comment">//求不相同字串数量</span></span><br><span class="line">        ll ans = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (ll i = <span class="number">2</span>; i &lt;= idx; i++) ans+=(len[i]-len[link[i]]);    <span class="comment">//一状态子串数量等于len[i]-len[link[i]]</span></span><br><span class="line">        <span class="keyword">return</span> ans;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">GetSubMax</span><span class="params">()</span></span>&#123;   <span class="comment">//求出所有长度为k的子串中出现次数最多的子串出现次数</span></span><br><span class="line">        GetNpos();</span><br><span class="line">        ll n = <span class="built_in">strlen</span>(s+<span class="number">1</span>);</span><br><span class="line">        <span class="comment">//prllf("%d\n",n);</span></span><br><span class="line">        <span class="keyword">for</span> (ll i = <span class="number">1</span>; i &lt;= idx; i++) a[len[i]] = max(a[len[i]], epos[i]);   <span class="comment">//长度≤k的子串中出现次数最多的子串出现次数的最小值</span></span><br><span class="line">        <span class="keyword">for</span> (ll i = n - <span class="number">1</span>; i &gt;= <span class="number">1</span>; i--) a[i] = max(a[i], a[i + <span class="number">1</span>]);      <span class="comment">//求一遍后缀最大值就是答案</span></span><br><span class="line">        <span class="keyword">for</span> (ll i = <span class="number">1</span>; i &lt;= n; i++) <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, a[i]);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;sam;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">pam</span>&#123;</span></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">    ll nex[maxn][N],fail[maxn];//在当前状态首尾添加字符的状态,失配跳到的状态</span></span><br><span class="line"><span class="comment">    ll len[maxn],S[maxn],pos[maxn];//状态i表示的回文长度,缓存池,状态对应首次出现的位置</span></span><br><span class="line"><span class="comment">    ll cnt[maxn],num[maxn];//状态出现次数,以状态末尾结尾但不包含本条路径的数目</span></span><br><span class="line"><span class="comment">    ll last,n,p;//上个状态,总长度,当前状态编号</span></span><br><span class="line"><span class="comment">    **/</span></span><br><span class="line">    ll nex[maxn][N],fail[maxn];</span><br><span class="line">    ll len[maxn],S[maxn],pos[maxn];</span><br><span class="line">    ll cnt[maxn],num[maxn];</span><br><span class="line">    ll last,n,p;</span><br><span class="line">    <span class="function">ll <span class="title">newnode</span><span class="params">(ll i)</span></span>&#123;</span><br><span class="line">        <span class="built_in">memset</span>(nex[p],<span class="number">0</span>,<span class="keyword">sizeof</span>(nex[p]));</span><br><span class="line">        cnt[p]=num[p]=<span class="number">0</span>;</span><br><span class="line">        len[p]=i;</span><br><span class="line">        <span class="keyword">return</span> p++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">init</span><span class="params">()</span></span>&#123;</span><br><span class="line">        p=<span class="number">0</span>;</span><br><span class="line">        newnode(<span class="number">0</span>);</span><br><span class="line">        newnode(<span class="number">-1</span>);</span><br><span class="line">        last=n=<span class="number">0</span>;</span><br><span class="line">        fail[<span class="number">0</span>]=<span class="number">1</span>;</span><br><span class="line">        S[n]=<span class="number">-1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function">ll <span class="title">get_fail</span><span class="params">(ll i)</span></span>&#123;</span><br><span class="line">        <span class="keyword">while</span>(S[n-len[i]<span class="number">-1</span>]!=S[n]) i=fail[i];</span><br><span class="line">        <span class="keyword">return</span> i;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(ll i,ll po)</span></span>&#123;</span><br><span class="line">        i-=<span class="string">'a'</span>;</span><br><span class="line">        S[++n]=i;</span><br><span class="line">        ll cur=get_fail(last);</span><br><span class="line">        <span class="keyword">if</span>(!nex[cur][i])&#123;</span><br><span class="line">            ll now=newnode(len[cur]+<span class="number">2</span>);</span><br><span class="line">            pos[now]=po;</span><br><span class="line">            fail[now]=nex[get_fail(fail[cur])][i];</span><br><span class="line">            nex[cur][i]=now;</span><br><span class="line">            num[now]=num[fail[now]]+<span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        last=nex[cur][i];</span><br><span class="line">        cnt[last]++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Count</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">for</span>(ll i=p<span class="number">-1</span>; i&gt;=<span class="number">0</span>; i--) cnt[fail[i]]+=cnt[i];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;p;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    ll len;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%s"</span>,s);</span><br><span class="line">    <span class="comment">//for(ll i=1; i&lt;=(ll)2e5; i++) s[i]='z';</span></span><br><span class="line">    sam.init();</span><br><span class="line">    p.init();</span><br><span class="line">    len=<span class="built_in">strlen</span>(s);</span><br><span class="line">    <span class="keyword">for</span>(ll i=<span class="number">0</span>; i&lt;len; i++)&#123;</span><br><span class="line">        sam.add(s[i]);</span><br><span class="line">        p.add(s[i],i);</span><br><span class="line">    &#125;</span><br><span class="line">    sam.last=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(ll i=len<span class="number">-1</span>; i&gt;=<span class="number">0</span>; i--)&#123;</span><br><span class="line">        sam.add(s[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    ll pp=sam.GetSubNum();</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,(pp+p.p<span class="number">-2</span>)/<span class="number">2</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="5th"><a href="#5th" class="headerlink" title="5th"></a>5th</h3><p><a href="https://ac.nowcoder.com/acm/contest/886/C" target="_blank" rel="noopener">C</a></p><p>给定一个字符串，在本质不同的回文串中，有多少对满足，其中一个是另一个的子串。</p><p>一条$next$链上，除奇根偶根，所有父亲都是儿子的子串。</p><p>一条$fail$链上，父亲是儿子的后缀，所以除奇根偶根所有父亲都是儿子的子串。</p><p>对于每一个节点，答案就是其$next$链上除根外的父亲个数+$fail$链上除根外的父亲个数。</p><p>然后由于$fail$链可能会重复走到原来算过的节点上面去，所以再开一个$vis$数组标记一下就可以了。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> ll maxn=<span class="number">200000</span>+<span class="number">10</span>;</span><br><span class="line"><span class="keyword">const</span> ll N=<span class="number">30</span>;</span><br><span class="line"><span class="keyword">char</span> s[maxn];</span><br><span class="line">ll ans;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">pam</span>&#123;</span></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">    ll nex[maxn][N],fail[maxn];//在当前状态首尾添加字符的状态,失配跳到的状态</span></span><br><span class="line"><span class="comment">    ll len[maxn],S[maxn],pos[maxn];//状态i表示的回文长度,缓存池,状态对应首次出现的位置</span></span><br><span class="line"><span class="comment">    ll cnt[maxn],num[maxn];//状态出现次数,以状态末尾结尾但不包含本条路径的数目</span></span><br><span class="line"><span class="comment">    ll last,n,p;//上个状态,总长度,当前状态编号</span></span><br><span class="line"><span class="comment">    **/</span></span><br><span class="line">    ll nex[maxn][N],fail[maxn];</span><br><span class="line">    ll len[maxn],S[maxn],pos[maxn];</span><br><span class="line">    ll cnt[maxn],num[maxn];</span><br><span class="line">    ll vis[maxn];</span><br><span class="line">    ll last,n,p;</span><br><span class="line">    <span class="function">ll <span class="title">newnode</span><span class="params">(ll i)</span></span>&#123;</span><br><span class="line">        <span class="built_in">memset</span>(nex[p],<span class="number">0</span>,<span class="keyword">sizeof</span>(nex[p]));</span><br><span class="line">        <span class="comment">//memset(vis,0,sizeof vis);</span></span><br><span class="line">        cnt[p]=num[p]=<span class="number">0</span>;</span><br><span class="line">        len[p]=i;</span><br><span class="line">        <span class="keyword">return</span> p++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">init</span><span class="params">()</span></span>&#123;</span><br><span class="line">        p=<span class="number">0</span>;</span><br><span class="line">        newnode(<span class="number">0</span>);</span><br><span class="line">        newnode(<span class="number">-1</span>);</span><br><span class="line">        last=n=<span class="number">0</span>;</span><br><span class="line">        fail[<span class="number">0</span>]=<span class="number">1</span>;</span><br><span class="line">        S[n]=<span class="number">-1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function">ll <span class="title">get_fail</span><span class="params">(ll i)</span></span>&#123;</span><br><span class="line">        <span class="keyword">while</span>(S[n-len[i]<span class="number">-1</span>]!=S[n]) i=fail[i];</span><br><span class="line">        <span class="keyword">return</span> i;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(ll i,ll po)</span></span>&#123;</span><br><span class="line">        i-=<span class="string">'a'</span>;</span><br><span class="line">        S[++n]=i;</span><br><span class="line">        ll cur=get_fail(last);</span><br><span class="line">        <span class="keyword">if</span>(!nex[cur][i])&#123;</span><br><span class="line">            ll now=newnode(len[cur]+<span class="number">2</span>);</span><br><span class="line">            pos[now]=po;</span><br><span class="line">            fail[now]=nex[get_fail(fail[cur])][i];</span><br><span class="line">            nex[cur][i]=now;</span><br><span class="line">            num[now]=num[fail[now]]+<span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        last=nex[cur][i];</span><br><span class="line">        cnt[last]++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Count</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">for</span>(ll i=p<span class="number">-1</span>; i&gt;=<span class="number">0</span>; i--) cnt[fail[i]]+=cnt[i];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(ll pp,ll sum)</span></span>&#123; <span class="comment">// p是节点的状态 sum是总的数量  //0和1状态是不计数的</span></span><br><span class="line">        ans+=sum;</span><br><span class="line">        ll add=<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">if</span>(pp==<span class="number">0</span> || pp==<span class="number">1</span>) add=<span class="number">0</span>;</span><br><span class="line">        vis[pp]=<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span>(ll i=<span class="number">0</span>; i&lt;<span class="number">26</span>; i++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(nex[pp][i])&#123;</span><br><span class="line">                ll nxt=nex[pp][i];</span><br><span class="line">                <span class="keyword">if</span>(vis[fail[nxt]]) dfs(nxt,sum+add);</span><br><span class="line">                <span class="keyword">else</span>&#123;</span><br><span class="line">                    vis[fail[nxt]]=<span class="number">1</span>;<span class="comment">//在计算时下一个节点就不需要在记录这个节点了</span></span><br><span class="line">                    ll add1=<span class="number">1</span>;</span><br><span class="line">                    <span class="keyword">if</span>(fail[nxt]==<span class="number">0</span> || fail[nxt]==<span class="number">1</span>) add1=<span class="number">0</span>;</span><br><span class="line">                    dfs(nxt,sum+add+add1);<span class="comment">//往下走</span></span><br><span class="line">                    vis[fail[nxt]]=<span class="number">0</span>;<span class="comment">//重新变为0</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        vis[pp]=<span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">slove</span><span class="params">()</span></span>&#123;</span><br><span class="line">        dfs(<span class="number">0</span>,<span class="number">0</span>);</span><br><span class="line">        dfs(<span class="number">1</span>,<span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;p;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    ll t,ca=<span class="number">1</span>;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%lld"</span>,&amp;t);</span><br><span class="line">    <span class="keyword">while</span>(t--)&#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%s"</span>,s+<span class="number">1</span>);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"Case #%d: "</span>,ca++);</span><br><span class="line">        p.init();</span><br><span class="line">        ans=<span class="number">0</span>;</span><br><span class="line">        ll len=<span class="built_in">strlen</span>(s+<span class="number">1</span>);</span><br><span class="line">        <span class="keyword">for</span>(ll i=<span class="number">1</span>; i&lt;=len; i++)&#123;</span><br><span class="line">            p.add(s[i],i);</span><br><span class="line">        &#125;</span><br><span class="line">        p.slove();</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,ans);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="9th"><a href="#9th" class="headerlink" title="9th"></a>9th</h3><p><a href="https://ac.nowcoder.com/acm/contest/889/H" target="_blank" rel="noopener">H</a></p><p>给定一些序列，每次都要进行一个操作$(l,r,x,y)$，对于区间$[l,r]$当中的数，你需要砍$y$刀，如果选择一个横截面，就直接从左滑到右，遇到高度超过这个横截面就直接砍掉，然后要求每次砍掉的竹子的长度要一样，问你第$x$刀的高度应该在哪。</p><p>主席树。</p><p>这题不是简简单单的主席树求第$k$大,这是要你利用主席树的左右查找的思想去做这道题。</p><p>很明显，砍第$x$刀时，我能计算出获得竹子数目，然后在区间里面查找在哪个高度能符合条件就好了。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> ll maxn=<span class="number">2e5</span>+<span class="number">10</span>;</span><br><span class="line"><span class="keyword">const</span> ll maxm=maxn*<span class="number">40</span>;</span><br><span class="line">ll T[maxm],L[maxm],R[maxm],sum[maxm];</span><br><span class="line">ll all[maxm];</span><br><span class="line">ll h[maxn];</span><br><span class="line">ll n,q,ql,qr,k,tot;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">build</span><span class="params">(ll&amp; rt,ll l,ll r)</span></span>&#123;</span><br><span class="line">    rt=++tot;</span><br><span class="line">    sum[rt]=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span>(l == r) <span class="keyword">return</span> ;</span><br><span class="line">    ll mid=(l+r)&gt;&gt;<span class="number">1</span>;</span><br><span class="line">    build(L[rt],l,mid);</span><br><span class="line">    build(R[rt],mid+<span class="number">1</span>,r);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">update</span><span class="params">(ll&amp; rt,ll l,ll r,ll pre,ll x)</span></span>&#123;</span><br><span class="line">    rt=++tot;</span><br><span class="line">    L[rt]=L[pre];</span><br><span class="line">    R[rt]=R[pre];</span><br><span class="line">    sum[rt]=sum[pre]+<span class="number">1</span>;</span><br><span class="line">    all[rt]=all[pre]+x;</span><br><span class="line">    <span class="keyword">if</span>(l == r) <span class="keyword">return</span> ;</span><br><span class="line">    ll mid=(l+r)&gt;&gt;<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">if</span>(x &lt;= mid) update(L[rt],l,mid,L[pre],x);</span><br><span class="line">    <span class="keyword">else</span> update(R[rt],mid+<span class="number">1</span>,r,R[pre],x);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">query</span><span class="params">(ll x,ll y,ll l,ll r,<span class="keyword">double</span> summ,ll num)</span></span>&#123;</span><br><span class="line">    <span class="comment">//printf("%lld %lld\n",l,r);</span></span><br><span class="line">    <span class="keyword">if</span>(l == r) <span class="keyword">return</span> summ/(sum[y]-sum[x]+num);</span><br><span class="line">    ll mid=(l+r)&gt;&gt;<span class="number">1</span>;</span><br><span class="line">    ll le=all[L[y]]-all[L[x]];  <span class="comment">//左节点的总数</span></span><br><span class="line">    ll ri=mid*(sum[R[y]]-sum[R[x]]+num);</span><br><span class="line">    <span class="keyword">if</span>(<span class="number">1.0</span>*(le+ri)&gt;summ) <span class="keyword">return</span> query(L[x],L[y],l,mid,summ,num+sum[R[y]]-sum[R[x]]);</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">return</span> query(R[x],R[y],mid+<span class="number">1</span>,r,summ-le,num);</span><br><span class="line">&#125;</span><br><span class="line">ll al=<span class="number">2e5</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    ll num;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%lld %lld"</span>,&amp;num,&amp;q);</span><br><span class="line">    tot=<span class="number">0</span>;</span><br><span class="line">    build(T[<span class="number">0</span>],<span class="number">1</span>,al);</span><br><span class="line">    <span class="keyword">for</span>(ll i=<span class="number">1</span>; i&lt;=num; i++)&#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%lld"</span>,&amp;h[i]);</span><br><span class="line">        update(T[i],<span class="number">1</span>,al,T[i<span class="number">-1</span>],h[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(q--)&#123;</span><br><span class="line">        <span class="keyword">double</span> x,y;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%lld %lld %lf %lf"</span>,&amp;ql,&amp;qr,&amp;x,&amp;y);</span><br><span class="line">        <span class="keyword">double</span> summ=(all[T[qr]]-all[T[ql<span class="number">-1</span>]])*<span class="number">1.0</span>*(y-x)/y;</span><br><span class="line">        <span class="keyword">double</span> ans=query(T[ql<span class="number">-1</span>],T[qr],<span class="number">1</span>,al,summ,<span class="number">0</span>);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%.10f\n"</span>,ans);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="10th"><a href="#10th" class="headerlink" title="10th"></a>10th</h3><p><a href="https://ac.nowcoder.com/acm/contest/890/J" target="_blank" rel="noopener">j</a></p><p>斜率优化dp。</p><p><code>dp[i][j]</code>表示前i个木板砍了j刀的最小浪费量。斜率优化dp是解决形如：</p><p>$dp_i = mink (dp_k + f(i))$，然后分两点$l，r$，假设$l \leq r$，然后再列出式子，看谁的决策更加优，然后维护用队列维护就好了。</p><p>一般来说，斜率用乘法就好了，但是这个题好像乘法会wa，估计是溢出了QAQ</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> ll maxn=<span class="number">5010</span>;</span><br><span class="line">ll q[maxn];</span><br><span class="line">ll dp[maxn][<span class="number">2010</span>];</span><br><span class="line">ll sum[maxn];</span><br><span class="line">ll len[maxn];</span><br><span class="line">ll he[maxn];</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span>&#123;</span></span><br><span class="line">    ll w,h;</span><br><span class="line">&#125;s[maxn];</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmp</span><span class="params">(node i,node j)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(i.h == j.h) <span class="keyword">return</span> i.w&gt;j.w;</span><br><span class="line">    <span class="keyword">return</span> i.h&gt;j.h;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">ll <span class="title">up</span><span class="params">(ll i,ll l,ll k)</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> dp[k][i<span class="number">-1</span>]-dp[l][i<span class="number">-1</span>]-(sum[k]-sum[l]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">ll <span class="title">down</span><span class="params">(ll l,ll k)</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> len[k]-len[l];</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    ll n,k;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%lld %lld"</span>,&amp;n,&amp;k);</span><br><span class="line">    <span class="keyword">for</span>(ll i=<span class="number">1</span>; i&lt;=n; i++)</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%lld %lld"</span>,&amp;s[i].w,&amp;s[i].h);</span><br><span class="line">    sort(s+<span class="number">1</span>,s+<span class="number">1</span>+n,cmp);</span><br><span class="line">    <span class="keyword">for</span>(ll i=<span class="number">1</span>; i&lt;=n; i++)&#123;</span><br><span class="line">        he[i]=s[i].h;</span><br><span class="line">        sum[i]=sum[i<span class="number">-1</span>]+s[i].w*s[i].h;</span><br><span class="line">        len[i]=len[i<span class="number">-1</span>]+s[i].w;</span><br><span class="line">        dp[i][<span class="number">1</span>]=sum[i]-s[i].h*len[i];</span><br><span class="line">        <span class="comment">//printf("%lld %lld %lld\n",he[i],sum[i],len[i]);</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(ll j=<span class="number">2</span>; j&lt;=k; j++)&#123;</span><br><span class="line">        ll head=<span class="number">0</span>;</span><br><span class="line">        ll tail=<span class="number">0</span>;</span><br><span class="line">        q[tail++]=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(ll i=<span class="number">1</span>; i&lt;=n; i++)&#123;</span><br><span class="line">            <span class="keyword">while</span>(head+<span class="number">1</span>&lt;tail &amp;&amp; ((up(j,q[head],q[head+<span class="number">1</span>])*<span class="number">1.0</span>)/(down(q[head],q[head+<span class="number">1</span>])*<span class="number">1.0</span>)&lt;-he[i])) head++;</span><br><span class="line">            dp[i][j]=dp[q[head]][j<span class="number">-1</span>]+sum[i]-sum[q[head]]-he[i]*(len[i]-len[q[head]]);</span><br><span class="line">            <span class="keyword">while</span>(head+<span class="number">1</span>&lt;tail &amp;&amp; (up(j,q[tail<span class="number">-2</span>],i)*<span class="number">1.0</span>)/(<span class="number">1.0</span>*down(q[tail<span class="number">-2</span>],i))&lt;(<span class="number">1.0</span>*up(j,q[tail<span class="number">-2</span>],q[tail<span class="number">-1</span>]))/(<span class="number">1.0</span>*down(q[tail<span class="number">-2</span>],q[tail<span class="number">-1</span>]))) tail--;</span><br><span class="line">            q[tail++]=i;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,dp[n][k]);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="HDU多校"><a href="#HDU多校" class="headerlink" title="HDU多校"></a>HDU多校</h2><h3 id="7th"><a href="#7th" class="headerlink" title="7th"></a>7th</h3><p><a href="http://acm.hdu.edu.cn/showproblem.php?pid=6655" target="_blank" rel="noopener">Just Repeat</a></p><p>贪心，不能用map，超时到飞起，手写hash好像ok。不过这里看一种diao一点的方式。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;ext/pb_ds/hash_policy.hpp&gt;//用hash</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;ext/pb_ds/assoc_container.hpp&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> GCC optimize(2)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> __gnu_pbds;</span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn=<span class="number">1e5</span>+<span class="number">10</span>;</span><br><span class="line"><span class="keyword">unsigned</span> <span class="keyword">long</span> <span class="keyword">long</span> k1, k2;</span><br><span class="line"><span class="function"><span class="keyword">unsigned</span> <span class="keyword">long</span> <span class="keyword">long</span> <span class="title">rng</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">long</span> <span class="keyword">long</span> k3 = k1, k4 = k2;</span><br><span class="line">    k1 = k4;</span><br><span class="line">    k3 ^= k3 &lt;&lt; <span class="number">23</span>;</span><br><span class="line">    k2 = k3 ^ k4 ^ (k3 &gt;&gt; <span class="number">17</span>) ^ (k4 &gt;&gt; <span class="number">26</span>);</span><br><span class="line">    <span class="keyword">return</span> k2 + k4;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//cc_hash_table&lt;int,int&gt; hsa,hsb; //拉链法</span></span><br><span class="line">gp_hash_table&lt;<span class="keyword">int</span>,<span class="keyword">int</span>&gt; hsa,hsb; <span class="comment">//探测法</span></span><br><span class="line"><span class="keyword">int</span> mod,n,m,p;</span><br><span class="line"><span class="keyword">int</span> a,b;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span>&#123;</span></span><br><span class="line">    <span class="keyword">int</span> a,id;</span><br><span class="line">    <span class="keyword">friend</span> <span class="keyword">bool</span> <span class="keyword">operator</span> &lt; (node i,node j)&#123;</span><br><span class="line">        <span class="keyword">if</span>(i.a != j.a) <span class="keyword">return</span> i.a&lt;j.a;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">return</span> i.id&lt;j.id;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="comment">//freopen("1010.in","r",stdin);</span></span><br><span class="line">    <span class="comment">//freopen("out.txt","w",stdout);</span></span><br><span class="line">    <span class="keyword">int</span> t;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;t);</span><br><span class="line">    <span class="keyword">while</span>(t--)&#123;</span><br><span class="line">        hsa.clear();</span><br><span class="line">        hsb.clear();</span><br><span class="line">        <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; va;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d %d %d"</span>,&amp;n,&amp;m,&amp;p);</span><br><span class="line">        <span class="keyword">if</span>(p == <span class="number">1</span>)&#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=n; i++)&#123;</span><br><span class="line">                <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;a);</span><br><span class="line">                va.push_back(a);</span><br><span class="line">                hsa[a]++;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=m; i++)&#123;</span><br><span class="line">                <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;b);</span><br><span class="line">                hsb[b]++;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">"%llu %llu %d"</span>,&amp;k1,&amp;k2,&amp;mod);</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=n; i++)&#123;</span><br><span class="line">                a=rng()%mod;</span><br><span class="line">                va.push_back(a);</span><br><span class="line">                hsa[a]++;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">"%llu %llu %d"</span>,&amp;k1,&amp;k2,&amp;mod);</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=m; i++)&#123;</span><br><span class="line">                b=rng()%mod;</span><br><span class="line">                hsb[b]++;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        sort(va.begin(),va.end());</span><br><span class="line">        va.erase(unique(va.begin(),va.end()),va.end());</span><br><span class="line">        <span class="keyword">int</span> ansa=n;</span><br><span class="line">        <span class="keyword">int</span> ansb=m;</span><br><span class="line">        priority_queue&lt;node&gt;pq;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">auto</span> x:va)&#123;</span><br><span class="line">            <span class="keyword">if</span>(hsa[x] &amp;&amp; hsb[x])&#123;</span><br><span class="line">                pq.push(node&#123;hsa[x]+hsb[x],x&#125;);</span><br><span class="line">                ansa-=hsa[x];</span><br><span class="line">                ansb-=hsb[x];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">int</span> st=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span>(!pq.empty())&#123;</span><br><span class="line">            node tmp=pq.top();</span><br><span class="line">            pq.pop();</span><br><span class="line">            <span class="keyword">if</span>(!st) ansa+=(hsa[tmp.id]<span class="number">-1</span>);</span><br><span class="line">            <span class="keyword">else</span> ansb+=(hsb[tmp.id]<span class="number">-1</span>);</span><br><span class="line">            st^=<span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(st) ansb--;</span><br><span class="line">        <span class="keyword">if</span>(ansa&gt;ansb) <span class="built_in">puts</span>(<span class="string">"Cuber QQ"</span>);</span><br><span class="line">        <span class="keyword">else</span> <span class="built_in">puts</span>(<span class="string">"Quber CC"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><a href="http://acm.hdu.edu.cn/showproblem.php?pid=6656" target="_blank" rel="noopener">Kejin Player</a></p><p>期望dp</p><p>首先$dp_i$代表从$i$升到$i+1$所需要的金钱，然后可以得到dp的式子。</p><p>$$dp_{i+1} = p_i * a_i + (1-p_i) * (a_i + \sum_{j=x_i}^{i+1} dp_j)$$</p><p>然后我们需要每次更新$dp_{i+1}$，将上面的式子化简就可以得到：</p><p>$$dp_{i+1} = \frac{p_i * a_i + (1-p_i)*(a_i+ \sum_{j=x_i}^{i} dp_i)}{p_i}$$</p><p>求和可以用一个前缀和代替。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">int</span> t,n,q;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn=<span class="number">5e5</span>+<span class="number">10</span>;</span><br><span class="line"><span class="keyword">const</span> ll mod=<span class="number">1e9</span>+<span class="number">7</span>;</span><br><span class="line">ll r[maxn],s[maxn],x[maxn],a[maxn];</span><br><span class="line">ll p[maxn],pp[maxn];</span><br><span class="line">ll sum[maxn],dp[maxn];</span><br><span class="line"><span class="function">ll <span class="title">qpow</span><span class="params">(ll x,ll n,ll mod)</span></span>&#123;</span><br><span class="line">    ll res=<span class="number">1l</span>l;</span><br><span class="line">    <span class="keyword">while</span>(n)&#123;</span><br><span class="line">        <span class="keyword">if</span>(n&amp;<span class="number">1l</span>l) res=res*x%mod;</span><br><span class="line">        x=x*x%mod;</span><br><span class="line">        n&gt;&gt;=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">ll <span class="title">inv</span><span class="params">(ll x)</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> qpow(x,mod<span class="number">-2</span>,mod);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;t);</span><br><span class="line">    <span class="keyword">while</span>(t--)&#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d %d"</span>,&amp;n,&amp;q);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=n; i++)&#123;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">"%lld %lld %lld %lld"</span>,&amp;r[i],&amp;s[i],&amp;x[i],&amp;a[i]);</span><br><span class="line">            ll tmp=inv(s[i]);</span><br><span class="line">            p[i]=r[i]*tmp%mod;</span><br><span class="line">            pp[i]=(s[i]-r[i])*tmp%mod;</span><br><span class="line">        &#125;</span><br><span class="line">        sum[<span class="number">1</span>]=<span class="number">0</span>;</span><br><span class="line">        dp[<span class="number">1</span>]=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=n; i++)&#123;</span><br><span class="line">            dp[i+<span class="number">1</span>]=(p[i]*a[i]%mod+pp[i]*(a[i]+sum[i]-sum[x[i]]+mod)%mod)%mod*inv(p[i])%mod;</span><br><span class="line">            sum[i+<span class="number">1</span>]=(sum[i]+dp[i+<span class="number">1</span>])%mod;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">while</span>(q--)&#123;</span><br><span class="line">            <span class="keyword">int</span> l,r;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">"%d %d"</span>,&amp;l,&amp;r);</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,(sum[r]-sum[l]+mod)%mod);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><h3 id="Compress-Words"><a href="#Compress-Words" class="headerlink" title="Compress Words"></a><a href="http://codeforces.com/contest/1200/problem/E" target="_blank" rel="noopener">Compress Words</a></h3><p>kmp求前后缀相等。</p><p>好像直接比较已准备好的串就行了，其实不是，比如说你有两个串，一个长度为1000，还有一个串的长度为10，你只需要从990开始比较就行了。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn=<span class="number">1e6</span>+<span class="number">10</span>;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">char</span> ans[maxn];</span><br><span class="line"> </span><br><span class="line"><span class="keyword">int</span> net[maxn],res[maxn];</span><br><span class="line"><span class="keyword">char</span> ptr[maxn],str[maxn];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">get_next</span><span class="params">(<span class="keyword">char</span> *p,<span class="keyword">int</span> *net)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> lp=<span class="built_in">strlen</span>(p);</span><br><span class="line">    <span class="keyword">int</span> j=<span class="number">0</span>,k=<span class="number">-1</span>;</span><br><span class="line">    net[<span class="number">0</span>]=<span class="number">-1</span>;</span><br><span class="line">    net[++j]=++k;</span><br><span class="line">    <span class="keyword">while</span>(j&lt;lp)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(k==<span class="number">-1</span>||p[j]==p[k])</span><br><span class="line">        &#123;</span><br><span class="line">            net[++j]=++k;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            k=net[k];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">Solve</span><span class="params">(<span class="keyword">char</span> *p,<span class="keyword">char</span> *str)</span><span class="comment">//指针str的后缀是其p的前缀</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i=<span class="number">0</span>,k=<span class="number">0</span>;</span><br><span class="line">    get_next(p,net);</span><br><span class="line">    <span class="keyword">int</span> ls=<span class="built_in">strlen</span>(str);</span><br><span class="line">    <span class="comment">// res[j]=k代表str前j个字符的最大匹配个数为k(字符串s的前k个)</span></span><br><span class="line">    <span class="keyword">while</span>(i&lt;ls)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(k==<span class="number">-1</span>||str[i]==p[k])<span class="comment">//i k表示 正在匹配的字符</span></span><br><span class="line">        &#123;</span><br><span class="line">            ++i;</span><br><span class="line">            ++k;</span><br><span class="line">            res[i]=k;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            k=net[k];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> ans=res[ls];</span><br><span class="line">    <span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</span><br><span class="line">    <span class="keyword">if</span>(n==<span class="number">1</span>)&#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%s"</span>,ptr);</span><br><span class="line">        <span class="built_in">puts</span>(ptr);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%s"</span>,ptr);</span><br><span class="line">    <span class="keyword">int</span> cnt=<span class="number">0</span>;<span class="keyword">int</span> plen=<span class="built_in">strlen</span>(ptr);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;plen; i++)&#123;</span><br><span class="line">        ans[cnt++]=ptr[i];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;n; i++)&#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%s"</span>,str);</span><br><span class="line"><span class="comment">//        puts(ptr);</span></span><br><span class="line"><span class="comment">//        puts(str);</span></span><br><span class="line">        <span class="keyword">int</span> slen=<span class="built_in">strlen</span>(str);</span><br><span class="line">        <span class="comment">//printf("%d %d\n",plen,slen);</span></span><br><span class="line">        <span class="keyword">int</span> len=Solve(str,ans+max(<span class="number">0</span>,cnt-slen));</span><br><span class="line">        <span class="comment">//printf("%d\n",len);</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=len; i&lt;slen; i++) ans[cnt++]=str[i];<span class="comment">//printf("%c",str[i]);</span></span><br><span class="line">        ans[cnt]=<span class="string">'\0'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    ans[cnt++]=<span class="string">'\0'</span>;</span><br><span class="line">    <span class="built_in">puts</span>(ans);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>魔鬼hash，只需要计算前面的ans字符串的hash值和目前更新的hash值比较就行。</p><p>不过普通的hash被猛男给hack了，毕竟hash只是有小概率出错，并不是说明不会出错，改个模数也能过，比如$998244353$，改个模数+单hash能过，然后尝试直接拿双hash冲<del>吃饱了撑系列</del>，发现也行！</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> ll mod=<span class="number">998244353</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn=<span class="number">1e6</span>+<span class="number">10</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> ba1=<span class="number">233</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> ba2=<span class="number">2333</span>;</span><br><span class="line">ll hs1[maxn],hs2[maxn];</span><br><span class="line">ll base1[maxn],base2[maxn];</span><br><span class="line">ll hs11[maxn],hs22[maxn];</span><br><span class="line"><span class="function">ll <span class="title">geths1</span><span class="params">(<span class="keyword">int</span> l,<span class="keyword">int</span> r)</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> (hs1[r]-base1[r-l+<span class="number">1</span>]*hs1[l<span class="number">-1</span>]%mod+mod)%mod;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">ll <span class="title">geths2</span><span class="params">(<span class="keyword">int</span> l,<span class="keyword">int</span> r)</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> (hs2[r]-base1[r-l+<span class="number">1</span>]*hs2[l<span class="number">-1</span>]%mod+mod)%mod;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">ll <span class="title">geths11</span><span class="params">(<span class="keyword">int</span> l,<span class="keyword">int</span> r)</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> (hs11[r]-base2[r-l+<span class="number">1</span>]*hs11[l<span class="number">-1</span>]%mod+mod)%mod;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">ll <span class="title">geths22</span><span class="params">(<span class="keyword">int</span> l,<span class="keyword">int</span> r)</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> (hs22[r]-base2[r-l+<span class="number">1</span>]*hs22[l<span class="number">-1</span>]%mod+mod)%mod;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">init</span><span class="params">()</span></span>&#123;</span><br><span class="line">    base1[<span class="number">0</span>]=<span class="number">1</span>;</span><br><span class="line">    base2[<span class="number">0</span>]=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;maxn; i++)&#123;</span><br><span class="line">        base1[i]=base1[i<span class="number">-1</span>]*ba1%mod;</span><br><span class="line">        base2[i]=base2[i<span class="number">-1</span>]*ba2%mod;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">char</span> ans[maxn];</span><br><span class="line"><span class="keyword">char</span> s[maxn];</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">ck</span><span class="params">(<span class="keyword">int</span> len1,<span class="keyword">int</span> len2,<span class="keyword">int</span> len)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(geths1(len1-len+<span class="number">1</span>,len1)==geths2(<span class="number">1</span>,len) &amp;&amp; geths11(len1-len+<span class="number">1</span>,len1)==geths22(<span class="number">1</span>,len)) <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</span><br><span class="line">    init();</span><br><span class="line">    <span class="keyword">if</span>(n == <span class="number">1</span>)&#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%s"</span>,s+<span class="number">1</span>);</span><br><span class="line">        <span class="built_in">puts</span>(s+<span class="number">1</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%s"</span>,ans+<span class="number">1</span>);</span><br><span class="line">    <span class="keyword">int</span> cnt=<span class="built_in">strlen</span>(ans+<span class="number">1</span>);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=cnt; i++)&#123;</span><br><span class="line">        hs1[i]=(hs1[i<span class="number">-1</span>]*ba1+ans[i])%mod;</span><br><span class="line">        hs11[i]=(hs11[i<span class="number">-1</span>]*ba2+ans[i])%mod;</span><br><span class="line">    &#125;</span><br><span class="line">    cnt++;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>; j&lt;n; j++)&#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%s"</span>,s+<span class="number">1</span>);</span><br><span class="line">        <span class="keyword">int</span> len=<span class="built_in">strlen</span>(s+<span class="number">1</span>);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=len; i++)&#123;</span><br><span class="line">            hs2[i]=(hs2[i<span class="number">-1</span>]*ba1+s[i])%mod;</span><br><span class="line">            hs22[i]=(hs22[i<span class="number">-1</span>]*ba2+s[i])%mod;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">int</span> i;</span><br><span class="line">        <span class="keyword">for</span>(i=min(len,cnt<span class="number">-1</span>); i&gt;<span class="number">0</span>; i--)&#123;</span><br><span class="line">            <span class="keyword">if</span>(ck(cnt<span class="number">-1</span>,len,i)) <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        i++;</span><br><span class="line">        <span class="comment">//printf("---%d %d\n",i,cnt);</span></span><br><span class="line">        <span class="keyword">for</span>(; i&lt;=len; i++)&#123;</span><br><span class="line">            ans[cnt]=s[i];</span><br><span class="line">            hs1[cnt]=(hs1[cnt<span class="number">-1</span>]*ba1+ans[cnt])%mod;</span><br><span class="line">            hs11[cnt]=(hs11[cnt<span class="number">-1</span>]*ba2+ans[cnt])%mod;</span><br><span class="line">            cnt++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    ans[cnt]=<span class="string">'\0'</span>;</span><br><span class="line">    <span class="built_in">puts</span>(ans+<span class="number">1</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="White-Lines"><a href="#White-Lines" class="headerlink" title="White Lines"></a><a href="http://codeforces.com/contest/1200/problem/D" target="_blank" rel="noopener">White Lines</a></h3><p>这题。。。一堆预处理，<del>码力题= =</del></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn=<span class="number">2010</span>;</span><br><span class="line"><span class="keyword">int</span> sumH[maxn][maxn];<span class="comment">//第i行第1-j列有多少个'B'</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> sumL[maxn][maxn];<span class="comment">//第j列第1-i列有多少个'B'</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">bool</span> H[maxn][maxn];<span class="comment">//擦除第i行的第j~j+k列是否会将这一行变成白色</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">bool</span> L[maxn][maxn];<span class="comment">//擦除第j列i~i+k行是否会将这一列变成白色</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> ansH[maxn][maxn];<span class="comment">//擦除第i行的第1-j列会产生多少的白线列</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> ansL[maxn][maxn];<span class="comment">//擦除第j列的第1-i行会产生多少白线行</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n,k;</span><br><span class="line"><span class="keyword">char</span> s[maxn];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d %d"</span>,&amp;n,&amp;k);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=n; i++)&#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%s"</span>,s+<span class="number">1</span>);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>; j&lt;=n; j++)&#123;</span><br><span class="line">            H[i][j]=<span class="literal">false</span>;</span><br><span class="line">            sumH[i][j]+=sumH[i][j<span class="number">-1</span>];</span><br><span class="line">            sumL[i][j]+=sumL[i<span class="number">-1</span>][j];</span><br><span class="line">            <span class="keyword">if</span>(s[j] == <span class="string">'B'</span>)&#123;</span><br><span class="line">                sumH[i][j]++;</span><br><span class="line">                sumL[i][j]++;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=n; i++)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>; j&lt;=n; j++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(j+k&gt;n+<span class="number">1</span>) <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">if</span>(sumH[i][n]) <span class="keyword">if</span>(sumH[i][j+k<span class="number">-1</span>]-sumH[i][j<span class="number">-1</span>] == sumH[i][n]) H[i][j]=<span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>; j&lt;=n; j++)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=n; i++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(i+k&gt;n+<span class="number">1</span>) <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">if</span>(sumL[n][j]) <span class="keyword">if</span>(sumL[i+k<span class="number">-1</span>][j]-sumL[i<span class="number">-1</span>][j] == sumL[n][j]) L[i][j]=<span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=n; i++)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>; j&lt;=n; j++)&#123;</span><br><span class="line">            ansH[i][j]=ansH[i][j<span class="number">-1</span>]+L[i][j];</span><br><span class="line">            ansL[i][j]=ansL[i<span class="number">-1</span>][j]+H[i][j];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> ans=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=n; i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(sumH[i][n]==<span class="number">0</span>) ans++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=n; i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(sumL[n][i]==<span class="number">0</span>) ans++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> ma=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=n; i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(i+k&gt;n+<span class="number">1</span>) <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>; j&lt;=n; j++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(j+k&gt;n+<span class="number">1</span>) <span class="keyword">break</span>;</span><br><span class="line">            ma=max(ma,ansH[i][j+k<span class="number">-1</span>]-ansH[i][j<span class="number">-1</span>]+ansL[i+k<span class="number">-1</span>][j]-ansL[i<span class="number">-1</span>][j]);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,ans+ma);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt; 鸽了暑假来自闭系列。&lt;/p&gt;
    
    </summary>
    
      <category term="2019多校" scheme="http://yoursite.com/categories/2019%E5%A4%9A%E6%A0%A1/"/>
    
    
  </entry>
  
  <entry>
    <title>BSGS</title>
    <link href="http://yoursite.com/2019/08/05/BSGS/"/>
    <id>http://yoursite.com/2019/08/05/BSGS/</id>
    <published>2019-08-05T02:21:22.293Z</published>
    <updated>2019-08-06T03:45:07.699Z</updated>
    
    <content type="html"><![CDATA[<p>用于解决$y^x \equiv z\ (mod\ p)$，给定$y,z,p \geq 1$，求解$x$。</p><a id="more"></a><p>当$gcd(y,p)=1$，在这种情况下，有可能给定$p$为质数。设$x=a * m - b$ ，$m= \lceil \sqrt p \rceil$，$ a \in [0,m+1)$，$b \in [0,m)$，那么原式变成$y^{a * m}=z * y^{b}$，先枚举$b$，计算$z * y^{b}(mod\ p)$，存到$map$中，再枚举$a$就好了。</p><h2 id="SDOI2011"><a href="#SDOI2011" class="headerlink" title="SDOI2011"></a><a href="https://www.lydsy.com/JudgeOnline/problem.php?id=2242" target="_blank" rel="noopener">SDOI2011</a></h2><p>题意：给定$y,z,p$，计算1. $y^z (mod \ p)$；2. 满足$x * y \equiv z(mod \ p)$的最小非负整数的$x$；3.满足$y^x  \equiv  z\ (mod\ p)$的最小非负整数的$x$。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line">ll y,z,p;</span><br><span class="line"><span class="function">ll <span class="title">qpow</span><span class="params">(ll x,ll n,ll mod)</span></span>&#123;</span><br><span class="line">    ll res=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span>(n)&#123;</span><br><span class="line">        <span class="keyword">if</span>(n&amp;<span class="number">1</span>) res=res*x%mod;</span><br><span class="line">        x=x*x%mod;</span><br><span class="line">        n&gt;&gt;=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">ll <span class="title">inv</span><span class="params">(ll x,ll mod)</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> qpow(x,mod<span class="number">-2</span>,mod);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">nnot</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">puts</span>(<span class="string">"Orz, I cannot find x!"</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">BSGS</span><span class="params">(ll x,ll y)</span></span>&#123;</span><br><span class="line">    <span class="built_in">map</span>&lt;ll,ll&gt;pw;</span><br><span class="line">    <span class="keyword">if</span>(y == <span class="number">1</span>)&#123;</span><br><span class="line">        <span class="built_in">puts</span>(<span class="string">"0"</span>);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    ll ans = <span class="number">-1</span>, m = <span class="built_in">sqrt</span>(p) + <span class="number">1</span>, xx, s = y;</span><br><span class="line">    <span class="keyword">for</span>(ll i = <span class="number">0</span>; i &lt; m; i++)&#123;</span><br><span class="line">        pw[s] = i;</span><br><span class="line">        s = s * x % p;</span><br><span class="line">    &#125;</span><br><span class="line">    xx = qpow(x, m, p), s = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(ll i = <span class="number">1</span>; i &lt;= m + <span class="number">1</span>; ++i)&#123;</span><br><span class="line">        s = s * xx % p;</span><br><span class="line">        <span class="keyword">if</span>(pw.count(s))&#123;</span><br><span class="line">            ans = i * m - pw[s];</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(ans &lt; <span class="number">0</span>) nnot();</span><br><span class="line">    <span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">"%lld\n"</span>, ans);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    ll t,op;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%lld %lld"</span>,&amp;t,&amp;op);</span><br><span class="line">    <span class="keyword">while</span>(t--)&#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%lld %lld %lld"</span>,&amp;y,&amp;z,&amp;p);</span><br><span class="line">        <span class="keyword">if</span>(op == <span class="number">1</span>) <span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,qpow(y,z,p));</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(op == <span class="number">2</span>)&#123;</span><br><span class="line">            ll tm=y%p;</span><br><span class="line">            <span class="keyword">if</span>(tm==<span class="number">0</span> &amp;&amp; z%p!=<span class="number">0</span>)&#123;</span><br><span class="line">                nnot();</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,z*inv(y,p)%p);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">if</span>(y%p) BSGS(y,z);</span><br><span class="line">            <span class="keyword">else</span> nnot();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><p>当$gcd(y,p) \neq 1$时，就要用到$exgcd$理论。</p><p>将原式写成$y * y^{x-1}+k * p=z,k \in Z$，根据$exgcd$，当$d=gcd(y,p)$不是$z$的约数就不会有解，有：$$\frac{y}{d} * y^{x-1}+k * \frac{p}{d}=\frac{z}{d}$$</p><p>一直递归直到$d=1$，设之间的所有的$d$的乘积为$g$，递归$c$次，令$x’=x-c\ ,\ p’=\frac{p}{g}\ ,\ z=\frac{z}{g}$，$y^{x’} * \frac{y^c}{g} \equiv z’(mod \ p’)$</p><p>然后再用BSGS求解。</p><h2 id="SPOJMOD-Power-Modulo-Inverted"><a href="#SPOJMOD-Power-Modulo-Inverted" class="headerlink" title="SPOJMOD Power Modulo Inverted"></a><a href="http://www.spoj.com/problems/MOD/" target="_blank" rel="noopener">SPOJMOD Power Modulo Inverted</a></h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> GCC optimize(2)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line">ll y,z,p;</span><br><span class="line"><span class="function">ll <span class="title">qpow</span><span class="params">(ll x,ll n,ll mod)</span></span>&#123;</span><br><span class="line">    ll res=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span>(n)&#123;</span><br><span class="line">        <span class="keyword">if</span>(n&amp;<span class="number">1</span>) res=res*x%mod;</span><br><span class="line">        x=x*x%mod;</span><br><span class="line">        n&gt;&gt;=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">ll <span class="title">gcd</span><span class="params">(ll x,ll y)</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> (y==<span class="number">0</span>)?x:gcd(y,x%y);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">ll <span class="title">exBSGS</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(z==<span class="number">1</span>) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    <span class="built_in">map</span>&lt;ll,ll&gt;pw;</span><br><span class="line">    ll cnt=<span class="number">0</span>,mul=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(ll d=gcd(y,p); d!=<span class="number">1</span>; d=gcd(y,p))&#123;</span><br><span class="line">        <span class="keyword">if</span>(z%d) <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">        ++cnt,z/=d,p/=d,mul=(mul*y/d%p);</span><br><span class="line">        <span class="keyword">if</span>(z == mul) <span class="keyword">return</span> cnt;</span><br><span class="line">    &#125;</span><br><span class="line">    ll s=z,m=<span class="built_in">sqrt</span>(p)+<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(ll i=<span class="number">0</span>; i&lt;m; i++)&#123;</span><br><span class="line">        pw[s]=i;</span><br><span class="line">        s=s*y%p;</span><br><span class="line">    &#125;</span><br><span class="line">    ll x=qpow(y,m,p);</span><br><span class="line">    s=mul;</span><br><span class="line">    <span class="keyword">for</span>(ll i=<span class="number">1</span>; i&lt;=m; i++)&#123;</span><br><span class="line">        s=s*x%p;</span><br><span class="line">        <span class="keyword">if</span>(pw.count(s)) <span class="keyword">return</span> i*m-pw[s]+cnt;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">scanf</span>(<span class="string">"%lld %lld %lld"</span>,&amp;y,&amp;p,&amp;z)&amp;&amp;(y||z||p))&#123;</span><br><span class="line">        y%=p;</span><br><span class="line">        z%=p;</span><br><span class="line">        ll ans=exBSGS();</span><br><span class="line">        <span class="keyword">if</span>(ans &lt; <span class="number">0</span>) <span class="built_in">puts</span>(<span class="string">"No Solution"</span>);</span><br><span class="line">        <span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,ans);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h2 id="generator-2"><a href="#generator-2" class="headerlink" title="generator 2"></a><a href="https://ac.nowcoder.com/acm/contest/885/C" target="_blank" rel="noopener">generator 2</a></h2><p>2019年牛客多校第五场。</p><p>题意：你有一个$n$个数字的递推式：$x_{i} \equiv  (a * x_{i-1} + b)mod \ p$ ，给定$n$，$x_0$，$a$，$b$，$p$，其中$p$是素数，询问$Q$次，求一个最小的下标$i$，使得$x_i \equiv  v (mod \ p)$。</p><p>题解：很容易得到关于$x_i$的通项公式：$$x_i = a^i * x_0  + b * \sum_{j=0}^{i-1} a^j = a^i * x_0  + b * (\frac{a^i - 1}{a - 1}) = a ^ i * (\frac{b}{a-1}+x_0) - \frac{b}{a-1}$$</p><p>那么，可以化成$$a^i \equiv \frac{(a-1) * v+b}{(a-1) * x_0+b} (mod \ p)$$</p><p>由于题目需要查询的次数有$1000$次，直接套上面的$BSGS$复杂度太大，所以就需要预处理，我们看上面的代码，每次进行算法时其实都有一次for循环是预处理，我们把这一步放在查询前，改用unorder_map或者手写hash存值。</p><p>进一步优化，我们把预处理的时间增加，而减少查询时间，将预处理改成$\left \lceil p^{\frac{2}{3}} \right \rceil$，然后将查询的时间改成$\left \lceil p^{\frac{1}{3}} \right \rceil$。</p><p>注意这题$a$等于1或者0需要特判。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Hash</span>&#123;</span></span><br><span class="line">    ll mod = <span class="number">2908361</span>;</span><br><span class="line">    ll cnt = <span class="number">0</span>, Head[<span class="number">2908361</span>], nxt[<span class="number">1000006</span>];</span><br><span class="line">    ll val[<span class="number">1000006</span>], pos[<span class="number">1000006</span>];</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">init</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="built_in">memset</span>(Head, <span class="number">-1</span>, <span class="keyword">sizeof</span>(Head)); cnt = <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Insert</span><span class="params">(ll x, ll v)</span></span>&#123;</span><br><span class="line">        ll key = x % mod;</span><br><span class="line">        pos[cnt] = x, val[cnt] = v, nxt[cnt] = Head[key];</span><br><span class="line">        Head[key] = cnt++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function">ll <span class="title">Find</span><span class="params">(ll x)</span></span>&#123;</span><br><span class="line">        ll key = x % mod;</span><br><span class="line">        <span class="keyword">for</span>(ll i = Head[key]; ~i; i = nxt[i])&#123;</span><br><span class="line">            <span class="keyword">if</span>(pos[i] == x) <span class="keyword">return</span> val[i];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">-1l</span>l;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;hs;</span><br><span class="line"><span class="function">ll <span class="title">qpow</span><span class="params">(ll x,ll n,ll mod)</span></span>&#123;</span><br><span class="line">    ll res=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span>(n)&#123;</span><br><span class="line">        <span class="keyword">if</span>(n&amp;<span class="number">1</span>) res=res*x%mod;</span><br><span class="line">        x=x*x%mod;</span><br><span class="line">        n&gt;&gt;=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">ll <span class="title">inv</span><span class="params">(ll x,ll p)</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> qpow(x,p<span class="number">-2</span>,p);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Init</span><span class="params">(ll y,ll p)</span></span>&#123;</span><br><span class="line">    hs.init();</span><br><span class="line">    ll m=<span class="built_in">ceil</span>(<span class="built_in">pow</span>(p,<span class="number">2.0</span>/<span class="number">3.0</span>));</span><br><span class="line">    ll s=<span class="number">1l</span>l;</span><br><span class="line">    <span class="keyword">for</span>(ll i=<span class="number">0</span>; i&lt;=m; i++)&#123;</span><br><span class="line">        hs.Insert(s,i);</span><br><span class="line">        s=s*y%p;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">ll <span class="title">BSGS</span><span class="params">(ll y,ll z,ll p)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(z == <span class="number">1</span>) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    ll ans=<span class="number">-1</span>,m=<span class="built_in">ceil</span>(<span class="built_in">pow</span>(p,<span class="number">1.0</span>/<span class="number">3.0</span>)),s=inv(z,p);</span><br><span class="line">    ll up=<span class="built_in">ceil</span>(<span class="built_in">pow</span>(p,<span class="number">2.0</span>/<span class="number">3.0</span>));</span><br><span class="line">    ll x=qpow(y,up,p);</span><br><span class="line">    <span class="keyword">for</span>(ll i=<span class="number">1</span>; i&lt;=m; i++)&#123;</span><br><span class="line">        s=s*x%p;</span><br><span class="line">        ll fin=hs.Find(s);</span><br><span class="line">        <span class="keyword">if</span>(fin!=<span class="number">-1</span>)&#123;</span><br><span class="line">            ans=i*up-fin;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    ll n,p,x,a,b,v,T;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%lld"</span>,&amp;T);</span><br><span class="line">    <span class="keyword">while</span>(T--)&#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%lld %lld %lld %lld %lld"</span>,&amp;n,&amp;x,&amp;a,&amp;b,&amp;p);</span><br><span class="line">        ll q;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%lld"</span>,&amp;q);</span><br><span class="line">        Init(a,p);</span><br><span class="line">        <span class="keyword">while</span>(q--)&#123;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">"%lld"</span>,&amp;v);</span><br><span class="line">            <span class="keyword">if</span>(a==<span class="number">0</span>)&#123;</span><br><span class="line">                <span class="keyword">if</span>(x==v) <span class="built_in">puts</span>(<span class="string">"0"</span>);</span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">if</span>(b==v) <span class="built_in">puts</span>(<span class="string">"1"</span>);</span><br><span class="line">                <span class="keyword">else</span> <span class="built_in">puts</span>(<span class="string">"-1"</span>);</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(a==<span class="number">1</span>)&#123;</span><br><span class="line">                ll ans=((v-x)*inv(b,p)+p)%p;</span><br><span class="line">                <span class="keyword">if</span>(ans&gt;=n) ans=<span class="number">-1</span>;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,ans);</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            ll z=(((a<span class="number">-1</span>)*v+b)%p*(inv(((a<span class="number">-1</span>)*x+b)%p,p)))%p;</span><br><span class="line">            ll ans=BSGS(a,z,p);</span><br><span class="line">            <span class="keyword">if</span>(ans &gt;= n) ans=<span class="number">-1</span>;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,ans);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;用于解决$y^x \equiv z\ (mod\ p)$，给定$y,z,p \geq 1$，求解$x$。&lt;/p&gt;
    
    </summary>
    
      <category term="数学" scheme="http://yoursite.com/categories/%E6%95%B0%E5%AD%A6/"/>
    
    
  </entry>
  
  <entry>
    <title>kmp&amp;exkmp</title>
    <link href="http://yoursite.com/2019/07/19/kmp/"/>
    <id>http://yoursite.com/2019/07/19/kmp/</id>
    <published>2019-07-19T15:28:41.647Z</published>
    <updated>2019-08-06T07:05:10.385Z</updated>
    
    <content type="html"><![CDATA[<p>之前写过kmp的算法，lwl给了我一个模板，现在再写就出问题了，<del>出来挨打！</del>，不过还好发现的及时。</p><a id="more"></a><h2 id="KMP"><a href="#KMP" class="headerlink" title="KMP"></a>KMP</h2><p><a href="https://www.spoj.com/problems/EPALIN/" target="_blank" rel="noopener">Extend to Palindrome</a></p><p>题意：就是在一个字符串最后添加最少的字符，使得字符串回文。</p><p>思路：求一个正序的串，和一个逆序的串，求其中的正向的后缀和逆向的前缀相等的长度最大值，最后先输出正向的串，在输出逆序中最大长度之后的字符。</p><p>比如说 正序：abaa，逆序：aaba ，那么最长的长度就是2，为aa，然后就输出abaa ba就好了，可以kmp或者hash求最长的长度。</p><p>KMP法（模板拿稳了）：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn=<span class="number">1e5</span>+<span class="number">10</span>;</span><br><span class="line"><span class="keyword">char</span> s[maxn];</span><br><span class="line"><span class="keyword">char</span> t[maxn];</span><br><span class="line"><span class="keyword">int</span> nex[maxn],len;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">cal</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i,j;</span><br><span class="line">    nex[<span class="number">0</span>]=j=<span class="number">-1</span>;</span><br><span class="line">    i=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(i&lt;len)&#123;</span><br><span class="line">        <span class="keyword">while</span>(j!=<span class="number">-1</span> &amp;&amp; s[j]!=s[i]) j=nex[j];</span><br><span class="line">        nex[++i]=++j;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">kmp</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i=<span class="number">0</span>,j=<span class="number">0</span>;</span><br><span class="line">    <span class="comment">//原串t，目的串s</span></span><br><span class="line">    <span class="keyword">while</span>(i&lt;len&amp;&amp;j&lt;len)&#123;</span><br><span class="line">        <span class="keyword">while</span>(j!=<span class="number">-1</span> &amp;&amp; t[i]!=s[j]) j=nex[j];</span><br><span class="line">        i++;</span><br><span class="line">        j++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> j;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="comment">//freopen("in.txt","r",stdin);</span></span><br><span class="line">    <span class="comment">//freopen("out.txt","w",stdout);</span></span><br><span class="line">    <span class="keyword">while</span>(~<span class="built_in">scanf</span>(<span class="string">"%s"</span>,t))&#123;</span><br><span class="line">        len=<span class="built_in">strlen</span>(t);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;len; i++)&#123;</span><br><span class="line">            s[i]=t[len-i<span class="number">-1</span>];</span><br><span class="line">        &#125;</span><br><span class="line">        s[len]=<span class="string">'\0'</span>;</span><br><span class="line">        cal();</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%s"</span>,t);</span><br><span class="line">        <span class="keyword">int</span> tt=kmp();</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=tt; i&lt;len; i++) <span class="built_in">putchar</span>(s[i]);</span><br><span class="line">        <span class="built_in">puts</span>(<span class="string">""</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>hash留坑吧……</p><p>后记：如果是求在任意位置插入任意字符，求插入的最少字符的个数，做法就是区间dp。</p><hr><h2 id="扩展KMP"><a href="#扩展KMP" class="headerlink" title="扩展KMP"></a>扩展KMP</h2><p>用kmp硬刚扩展kmp算法，我哭了。😭</p><p><a href="http://acm.hdu.edu.cn/showproblem.php?pid=6629" target="_blank" rel="noopener">HDU6629</a></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> ll maxn=<span class="number">1e6</span>+<span class="number">10</span>;</span><br><span class="line"><span class="keyword">char</span> s[maxn];</span><br><span class="line"><span class="keyword">char</span> t[maxn];</span><br><span class="line">ll nex[maxn],len;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">cal</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">memset</span>(nex,<span class="number">0</span>,<span class="keyword">sizeof</span> nex);</span><br><span class="line">    <span class="keyword">int</span> i,j;</span><br><span class="line">    nex[<span class="number">0</span>]=j=<span class="number">-1</span>;</span><br><span class="line">    i=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(i&lt;len)&#123;</span><br><span class="line">        <span class="keyword">while</span>(s[j]!=s[i] &amp;&amp; j!=<span class="number">-1</span>) j=nex[j];</span><br><span class="line">        nex[++i]=++j;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">ll Next[maxn];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">getNext</span><span class="params">(<span class="keyword">char</span> t[],ll m)</span></span>&#123;</span><br><span class="line">    Next[<span class="number">0</span>]=m;</span><br><span class="line">    ll j=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(j+<span class="number">1</span>&lt;m&amp;&amp;t[j]==t[j+<span class="number">1</span>]) j++;</span><br><span class="line">    Next[<span class="number">1</span>]=j;</span><br><span class="line">    ll k=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(ll i=<span class="number">2</span>;i&lt;m;i++)&#123;</span><br><span class="line">        ll p=Next[k]+k<span class="number">-1</span>;</span><br><span class="line">        ll L=Next[i-k];</span><br><span class="line">        <span class="keyword">if</span>(i+L&lt;p+<span class="number">1</span>) Next[i]=L;</span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">            j=max(<span class="number">0L</span>L,p-i+<span class="number">1</span>);</span><br><span class="line">            <span class="keyword">while</span>(i+j&lt;m&amp;&amp;t[i+j]==t[j]) j++;</span><br><span class="line">            Next[i]=j;</span><br><span class="line">            k=i;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    ll t;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%lld"</span>,&amp;t);</span><br><span class="line">    <span class="keyword">while</span>(t--)&#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%s"</span>,s);</span><br><span class="line">        len=<span class="built_in">strlen</span>(s);</span><br><span class="line">        cal();</span><br><span class="line">        getNext(s,len);</span><br><span class="line">        ll ans=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(ll i=<span class="number">1</span>; i&lt;len; i++)&#123;</span><br><span class="line">            <span class="comment">//printf("%d\n",Next[i]);</span></span><br><span class="line">            ans+=(Next[i]);</span><br><span class="line">            <span class="keyword">if</span>(Next[i]+i&gt;=len)ans+=<span class="number">0</span>;</span><br><span class="line">            <span class="keyword">else</span> ans++; </span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,ans);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h2 id="模板"><a href="#模板" class="headerlink" title="模板"></a>模板</h2><p>（感谢清巨orz）</p><h3 id="1-KMP"><a href="#1-KMP" class="headerlink" title="1.KMP"></a>1.KMP</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//next[i] 表示t[i-next[i]...i-1]=t[0...next[i]-1]</span></span><br><span class="line"><span class="comment">//循环节len=m%(m-next[m])==0?m-next[m]:1</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">getNext</span><span class="params">(<span class="keyword">char</span> t[],<span class="keyword">int</span> m)</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i,j;</span><br><span class="line">    j=Next[<span class="number">0</span>]=<span class="number">-1</span>;</span><br><span class="line">    i=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(i&lt;m)&#123;</span><br><span class="line">        <span class="keyword">while</span>(j!=<span class="number">-1</span>&amp;&amp;t[i]!=t[j]) j=Next[j];</span><br><span class="line">        Next[++i]=++j;</span><br><span class="line">        <span class="comment">//if(t[++i]==t[++j]) Next[i]=Next[j]; //优化</span></span><br><span class="line">        <span class="comment">//else Next[i]=j;</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">kmp</span><span class="params">(<span class="keyword">char</span> s[],<span class="keyword">int</span> n,<span class="keyword">char</span> t[],<span class="keyword">int</span> m)</span></span>&#123;</span><br><span class="line">    getNext(t,m);</span><br><span class="line">    <span class="keyword">int</span> i=<span class="number">0</span>,j=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(i&lt;n)&#123;</span><br><span class="line">        <span class="keyword">while</span>(j==<span class="number">-1</span>&amp;&amp;s[i]!=t[j]) j=next[j];</span><br><span class="line">        i++,j++;</span><br><span class="line">        <span class="keyword">if</span>(j&gt;=m)&#123;<span class="comment">//匹配成功</span></span><br><span class="line">            ;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2-扩展KMP"><a href="#2-扩展KMP" class="headerlink" title="2.扩展KMP"></a>2.扩展KMP</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//next[i]表示t[i...m-1]与t[0...m-1]的最长公共前缀</span></span><br><span class="line"><span class="comment">//extend[i]表示s[i...n-1]与t[0...m-1]的最长公共前缀</span></span><br><span class="line"><span class="keyword">int</span> Next[maxn],extend[maxn];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">getNext</span><span class="params">(<span class="keyword">char</span> t[],<span class="keyword">int</span> m)</span></span>&#123;</span><br><span class="line">    Next[<span class="number">0</span>]=m;</span><br><span class="line">    <span class="keyword">int</span> j=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(j+<span class="number">1</span>&lt;m&amp;&amp;t[j]==t[j+<span class="number">1</span>]) j++;</span><br><span class="line">    Next[<span class="number">1</span>]=j;</span><br><span class="line">    <span class="keyword">int</span> k=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;m;i++)&#123;</span><br><span class="line">        <span class="keyword">int</span> p=Next[k]+k<span class="number">-1</span>;</span><br><span class="line">        <span class="keyword">int</span> L=Next[i-k];</span><br><span class="line">        <span class="keyword">if</span>(i+L&lt;p+<span class="number">1</span>) Next[i]=L;</span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">            j=max(<span class="number">0</span>,p-i+<span class="number">1</span>);</span><br><span class="line">            <span class="keyword">while</span>(i+j&lt;m&amp;&amp;t[i+j]==t[j]) j++;</span><br><span class="line">            Next[i]=j;</span><br><span class="line">            k=i;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">extendkmp</span><span class="params">(<span class="keyword">char</span> t[],<span class="keyword">int</span> m,<span class="keyword">char</span> s[],<span class="keyword">int</span> n)</span></span>&#123;</span><br><span class="line">    getNext(t,m);</span><br><span class="line">    <span class="keyword">int</span> j=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(j&lt;n&amp;&amp;j&lt;m&amp;&amp;t[j]==s[j]) j++;</span><br><span class="line">    extend[<span class="number">0</span>]=j;</span><br><span class="line">    <span class="keyword">int</span> k=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;n;i++)&#123;</span><br><span class="line">        <span class="keyword">int</span> p=extend[k]+k<span class="number">-1</span>;</span><br><span class="line">        <span class="keyword">int</span> L=Next[i-k];</span><br><span class="line">        <span class="keyword">if</span>(i+L&lt;p+<span class="number">1</span>) extend[i]=L;</span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">            j=max(<span class="number">0</span>,p-i+<span class="number">1</span>);</span><br><span class="line">            <span class="keyword">while</span>(i+j&lt;n&amp;&amp;j&lt;m&amp;&amp;s[i+j]==t[j]) j++;</span><br><span class="line">            extend[i]=j;</span><br><span class="line">            k=i;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;之前写过kmp的算法，lwl给了我一个模板，现在再写就出问题了，&lt;del&gt;出来挨打！&lt;/del&gt;，不过还好发现的及时。&lt;/p&gt;
    
    </summary>
    
      <category term="数据结构" scheme="http://yoursite.com/categories/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
    
  </entry>
  
  <entry>
    <title>Codeforces Round</title>
    <link href="http://yoursite.com/2019/07/18/cf190717/"/>
    <id>http://yoursite.com/2019/07/18/cf190717/</id>
    <published>2019-07-18T02:57:16.330Z</published>
    <updated>2019-07-18T03:04:16.506Z</updated>
    
    <content type="html"><![CDATA[<p><del>差点掉分</del>，D2有思路最后bug多多。然后A题让我们知道了自己英语是白学了</p><a id="more"></a><h2 id="A-Drinks-Choosing"><a href="#A-Drinks-Choosing" class="headerlink" title="A.Drinks Choosing"></a><a href="https://codeforces.com/contest/1195/problem/A" target="_blank" rel="noopener">A.Drinks Choosing</a></h2><p>题意：#%…￥%￥%…￥%……&amp;………&amp;%#￥%#￥…#^#**&amp;#@$#()</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">int</span> n,k;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn=<span class="number">1100</span>;</span><br><span class="line"><span class="keyword">int</span> a[maxn];</span><br><span class="line"><span class="keyword">int</span> vis[maxn];</span><br><span class="line"><span class="keyword">int</span> b[maxn];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d %d"</span>,&amp;n,&amp;k);</span><br><span class="line">    <span class="comment">//memset(vis,2,sizeof vis);</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;n; i++)&#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;a[i]);</span><br><span class="line">        b[a[i]]++;</span><br><span class="line">    &#125;</span><br><span class="line">    sort(b+<span class="number">1</span>,b+<span class="number">1</span>+k);</span><br><span class="line">    <span class="keyword">int</span> all=n/<span class="number">2</span>+n%<span class="number">2</span>;</span><br><span class="line">    <span class="keyword">int</span> ans=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=k; i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(b[i]%<span class="number">2</span>==<span class="number">0</span> &amp;&amp; b[i]!=<span class="number">0</span>)&#123;</span><br><span class="line">            ans+=b[i];</span><br><span class="line">            all-=(b[i]/<span class="number">2</span>);</span><br><span class="line">            b[i]=<span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(b[i]%<span class="number">2</span>==<span class="number">1</span> &amp;&amp; b[i]&gt;<span class="number">1</span>)&#123;</span><br><span class="line">            ans+=(b[i]<span class="number">-1</span>);</span><br><span class="line">            all-=(b[i]/<span class="number">2</span>);</span><br><span class="line">            b[i]=<span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,ans+all);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="B-Sport-Mafia"><a href="#B-Sport-Mafia" class="headerlink" title="B.Sport Mafia"></a><a href="https://codeforces.com/contest/1195/problem/B" target="_blank" rel="noopener">B.Sport Mafia</a></h2><p>推公式，答案就是: $n- \frac { { \sqrt {8 * k + 8 * n + 9 }  } - 3 } {2}$</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    ll n,k;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%lld %lld"</span>,&amp;n,&amp;k);</span><br><span class="line">    ll tmp=n-(<span class="number">-3</span>+(ll)<span class="built_in">sqrt</span>(<span class="number">9</span>+<span class="number">8</span>*n+<span class="number">8</span>*k))/<span class="number">2</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,tmp);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="C-Basketball-Exercise"><a href="#C-Basketball-Exercise" class="headerlink" title="C.Basketball Exercise"></a><a href="https://codeforces.com/contest/1195/problem/C" target="_blank" rel="noopener">C.Basketball Exercise</a></h2><p>dp</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> ll maxn=<span class="number">1e5</span>+<span class="number">10</span>;</span><br><span class="line">ll a[maxn],b[maxn];</span><br><span class="line">ll n;</span><br><span class="line">ll dp[maxn][<span class="number">3</span>];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%lld"</span>,&amp;n);</span><br><span class="line">    <span class="keyword">for</span>(ll i=<span class="number">0</span>; i&lt;n; i++)&#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%lld"</span>,&amp;a[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(ll i=<span class="number">0</span>; i&lt;n; i++)&#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%lld"</span>,&amp;b[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    dp[<span class="number">0</span>][<span class="number">0</span>]=a[<span class="number">0</span>];</span><br><span class="line">    dp[<span class="number">0</span>][<span class="number">1</span>]=b[<span class="number">0</span>];</span><br><span class="line">    dp[<span class="number">1</span>][<span class="number">0</span>]=a[<span class="number">1</span>]+b[<span class="number">0</span>];</span><br><span class="line">    dp[<span class="number">1</span>][<span class="number">1</span>]=a[<span class="number">0</span>]+b[<span class="number">1</span>];</span><br><span class="line">    <span class="keyword">for</span>(ll i=<span class="number">2</span>; i&lt;n; i++)&#123;</span><br><span class="line">        dp[i][<span class="number">0</span>]=max(dp[i<span class="number">-1</span>][<span class="number">1</span>],max(dp[i<span class="number">-2</span>][<span class="number">0</span>],dp[i<span class="number">-2</span>][<span class="number">1</span>]))+a[i];</span><br><span class="line">        dp[i][<span class="number">1</span>]=max(dp[i<span class="number">-1</span>][<span class="number">0</span>],max(dp[i<span class="number">-2</span>][<span class="number">1</span>],dp[i<span class="number">-2</span>][<span class="number">0</span>]))+b[i];</span><br><span class="line"> </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,max(dp[n<span class="number">-1</span>][<span class="number">0</span>],dp[n<span class="number">-1</span>][<span class="number">1</span>]));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="D1-Submarine-in-the-Rybinsk-Sea"><a href="#D1-Submarine-in-the-Rybinsk-Sea" class="headerlink" title="D1.Submarine in the Rybinsk Sea"></a><a href="https://codeforces.com/contest/1195/problem/D1" target="_blank" rel="noopener">D1.Submarine in the Rybinsk Sea</a></h2><p>求贡献</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> ll mod=<span class="number">998244353</span>;</span><br><span class="line">ll n;</span><br><span class="line">ll a[<span class="number">100010</span>];</span><br><span class="line"><span class="keyword">char</span> s[<span class="number">20</span>];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%lld"</span>,&amp;n);</span><br><span class="line">    ll ans=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(ll i=<span class="number">0</span>; i&lt;n; i++)&#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%s"</span>,s);</span><br><span class="line">        ll len=<span class="built_in">strlen</span>(s);</span><br><span class="line">        ll tmp=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(ll i=<span class="number">0</span>; i&lt;len; i++)&#123;</span><br><span class="line">            tmp=(tmp+(s[i]-<span class="string">'0'</span>))%mod;</span><br><span class="line">            <span class="keyword">if</span>(i&lt;len<span class="number">-1</span>) tmp=(tmp*<span class="number">100</span>)%mod;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//printf("%lld %lld\n",tmp,tmp*10);</span></span><br><span class="line">        ans=(ans+tmp)%mod;</span><br><span class="line">        ans=(ans+tmp*<span class="number">10</span>)%mod;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,ans*n%mod);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="D2-Submarine-in-the-Rybinsk-Sea"><a href="#D2-Submarine-in-the-Rybinsk-Sea" class="headerlink" title="D2.Submarine in the Rybinsk Sea"></a><a href="https://codeforces.com/contest/1195/problem/D2" target="_blank" rel="noopener">D2.Submarine in the Rybinsk Sea</a></h2><p>与D1不同的是，每个数的长度不一样。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> ll mod=<span class="number">998244353</span>;</span><br><span class="line">ll n;</span><br><span class="line"><span class="keyword">char</span> s[<span class="number">100010</span>][<span class="number">20</span>];</span><br><span class="line">ll vis[<span class="number">20</span>];</span><br><span class="line">ll ba[<span class="number">25</span>];</span><br><span class="line">ll sum[<span class="number">20</span>];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    ba[<span class="number">0</span>]=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(ll i=<span class="number">1</span>; i&lt;<span class="number">25</span>; i++)&#123;</span><br><span class="line">        ba[i]=ba[i<span class="number">-1</span>]*<span class="number">10</span>%mod;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%lld"</span>,&amp;n);</span><br><span class="line">    ll ans=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(ll i=<span class="number">0</span>; i&lt;n; i++)&#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%s"</span>,s[i]);</span><br><span class="line">        ll len=<span class="built_in">strlen</span>(s[i]);</span><br><span class="line">        vis[len]++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(ll i=<span class="number">18</span>; i&gt;<span class="number">0</span>; i--)&#123;</span><br><span class="line">        sum[i]=sum[i+<span class="number">1</span>]+vis[i];</span><br><span class="line">        <span class="comment">//printf("%lld %lld %lld\n",i,sum[i],vis[2]);</span></span><br><span class="line">    &#125;</span><br><span class="line">    ll cnt=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(ll ii=<span class="number">0</span>; ii&lt;n; ii++)&#123;</span><br><span class="line">        ll c=<span class="built_in">strlen</span>(s[ii]);</span><br><span class="line">        <span class="keyword">for</span>(ll i=c; i&gt;=<span class="number">0</span>; i--)&#123;</span><br><span class="line">            <span class="keyword">if</span>(vis[i]==<span class="number">0</span>) <span class="keyword">continue</span>;</span><br><span class="line">            ll tmp=<span class="number">0</span>;</span><br><span class="line">            ll f=<span class="number">-1</span>;</span><br><span class="line">            <span class="comment">//puts(s[ii]);</span></span><br><span class="line">            <span class="keyword">for</span>(ll k=<span class="number">0</span>; k&lt;c-i; k++)&#123;</span><br><span class="line">                tmp=(tmp*<span class="number">10</span>)%mod;</span><br><span class="line">                tmp=(tmp+s[ii][k]-<span class="string">'0'</span>)%mod;</span><br><span class="line">                f=k;</span><br><span class="line">            &#125;</span><br><span class="line">            tmp=(tmp*ba[(i)*<span class="number">2</span>])%mod*(vis[i]*<span class="number">2</span>)%mod;</span><br><span class="line">            <span class="comment">//printf("%lld &amp;&amp; %lld %lld %lld\n",tmp,f,ba[i*2],c);</span></span><br><span class="line">            f++;</span><br><span class="line">            ll tmpp=<span class="number">0</span>;</span><br><span class="line">            <span class="keyword">for</span>(ll k=f; k&lt;c; k++)&#123;</span><br><span class="line">                tmpp=(tmpp+(s[ii][k]-<span class="string">'0'</span>))%mod;</span><br><span class="line">                <span class="comment">//printf("%c %lld\n",s[ii][k],tmpp);</span></span><br><span class="line">                <span class="keyword">if</span>(k&lt;c<span class="number">-1</span>) tmpp=(tmpp*<span class="number">100</span>)%mod;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">//printf("%lld %lld %lld\n",tmpp,tmpp*10,sum[c]);</span></span><br><span class="line">            <span class="keyword">if</span>(tmp==<span class="number">0</span>) tmp=(tmp+((tmpp+tmpp*<span class="number">10</span>)*sum[c]%mod))%mod;</span><br><span class="line">            <span class="keyword">else</span> tmp=(tmp+((tmpp+tmpp*<span class="number">10</span>)*vis[i]%mod))%mod;</span><br><span class="line">            ans=(ans+tmp)%mod;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//printf("%lld %lld\n",tmp,tmp*10);</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,ans%mod);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;del&gt;差点掉分&lt;/del&gt;，D2有思路最后bug多多。然后A题让我们知道了自己英语是白学了&lt;/p&gt;
    
    </summary>
    
      <category term="codeforces" scheme="http://yoursite.com/categories/codeforces/"/>
    
    
  </entry>
  
  <entry>
    <title>树链剖分</title>
    <link href="http://yoursite.com/2019/07/17/%E6%A0%91%E9%93%BE%E5%89%96%E5%88%86/"/>
    <id>http://yoursite.com/2019/07/17/树链剖分/</id>
    <published>2019-07-17T05:07:39.931Z</published>
    <updated>2019-08-22T05:28:57.567Z</updated>
    
    <content type="html"><![CDATA[<p>最为经典的树链剖分就是对于树删一条链进行同时加或者减操作，然后每次询问。</p><a id="more"></a><h2 id="洛谷P3348"><a href="#洛谷P3348" class="headerlink" title="洛谷P3348"></a><a href="https://www.luogu.org/problemnew/show/P3384" target="_blank" rel="noopener">洛谷P3348</a></h2><p>题意：最为经典的模板题。</p><p>已知一棵包含$N$个结点的树（连通且无环），每个节点上包含一个数值，需要支持以下操作：</p><p>操作1： 格式： $1$ $x$ $y$ $z$ 表示将树从$x$到$y$结点最短路径上所有节点的值都加上$z$</p><p>操作2： 格式： $2$ $x$ $y$ 表示求树从$x$到$y$结点最短路径上所有节点的值之和</p><p>操作3： 格式： $3$ $x$ $z$ 表示将以$x$为根节点的子树内所有节点值都加上$z$</p><p>操作4： 格式： $4$ $x$ 表示求以$x$为根节点的子树内所有节点值之和</p><p>思路：模板接好（树链剖分+线段树）。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> ll maxn=<span class="number">1e5</span>+<span class="number">10</span>;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">edge</span>&#123;</span></span><br><span class="line">    ll next,to;</span><br><span class="line">&#125;e[maxn&lt;&lt;<span class="number">1</span>];</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span>&#123;</span></span><br><span class="line">    ll l,r,ls,rs,sum,lazy;</span><br><span class="line">&#125;a[maxn&lt;&lt;<span class="number">1</span>];</span><br><span class="line">ll n,m,r,rt,mod,v[maxn],head[maxn],cnt,f[maxn],d[maxn],son[maxn],size[maxn],top[maxn],id[maxn],rk[maxn];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(ll x,ll y)</span></span>&#123;</span><br><span class="line">    e[++cnt].next=head[x];</span><br><span class="line">    e[cnt].to=y;</span><br><span class="line">    head[x]=cnt;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs1</span><span class="params">(ll x)</span></span>&#123;</span><br><span class="line">    size[x]=<span class="number">1</span>,d[x]=d[f[x]]+<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(ll v,i=head[x];i;i=e[i].next)</span><br><span class="line">        <span class="keyword">if</span>((v=e[i].to)!=f[x])&#123;</span><br><span class="line">            f[v]=x,dfs1(v),size[x]+=size[v];</span><br><span class="line">            <span class="keyword">if</span>(size[son[x]]&lt;size[v])</span><br><span class="line">                son[x]=v;</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs2</span><span class="params">(ll x,ll tp)</span></span>&#123;</span><br><span class="line">    top[x]=tp,id[x]=++cnt,rk[cnt]=x;</span><br><span class="line">    <span class="keyword">if</span>(son[x])</span><br><span class="line">        dfs2(son[x],tp);</span><br><span class="line">    <span class="keyword">for</span>(ll v,i=head[x];i;i=e[i].next)</span><br><span class="line">        <span class="keyword">if</span>((v=e[i].to)!=f[x]&amp;&amp;v!=son[x])</span><br><span class="line">            dfs2(v,v);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">pushup</span><span class="params">(ll x)</span></span>&#123;</span><br><span class="line">    a[x].sum=(a[a[x].ls].sum+a[a[x].rs].sum)%mod;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">build</span><span class="params">(ll l,ll r,ll x)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(l==r)&#123;</span><br><span class="line">        a[x].sum=v[rk[l]],a[x].l=a[x].r=l;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    ll mid=(l+r)&gt;&gt;<span class="number">1</span>;</span><br><span class="line">    a[x].ls=cnt++,a[x].rs=cnt++;</span><br><span class="line">    build(l,mid,a[x].ls),build(mid+<span class="number">1</span>,r,a[x].rs);</span><br><span class="line">    a[x].l=a[a[x].ls].l,a[x].r=a[a[x].rs].r;</span><br><span class="line">    pushup(x);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> ll <span class="title">len</span><span class="params">(ll x)</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> a[x].r-a[x].l+<span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">pushdown</span><span class="params">(ll x)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(a[x].lazy)&#123;</span><br><span class="line">        ll ls=a[x].ls,rs=a[x].rs,lz=a[x].lazy;</span><br><span class="line">        (a[ls].lazy+=lz)%=mod,(a[rs].lazy+=lz)%=mod;</span><br><span class="line">        (a[ls].sum+=lz*len(ls))%=mod,(a[rs].sum+=lz*len(rs))%=mod;</span><br><span class="line">        a[x].lazy=<span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">update</span><span class="params">(ll l,ll r,ll c,ll x)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(a[x].l&gt;=l&amp;&amp;a[x].r&lt;=r)&#123;</span><br><span class="line">        (a[x].lazy+=c)%=mod,(a[x].sum+=len(x)*c)%=mod;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    pushdown(x);</span><br><span class="line">    ll mid=(a[x].l+a[x].r)&gt;&gt;<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">if</span>(mid&gt;=l)</span><br><span class="line">        update(l,r,c,a[x].ls);</span><br><span class="line">    <span class="keyword">if</span>(mid&lt;r)</span><br><span class="line">        update(l,r,c,a[x].rs);</span><br><span class="line">    pushup(x);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">ll <span class="title">query</span><span class="params">(ll l,ll r,ll x)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(a[x].l&gt;=l&amp;&amp;a[x].r&lt;=r)</span><br><span class="line">        <span class="keyword">return</span> a[x].sum;</span><br><span class="line">    pushdown(x);</span><br><span class="line">    ll mid=(a[x].l+a[x].r)&gt;&gt;<span class="number">1</span>,tot=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span>(mid&gt;=l)</span><br><span class="line">        tot+=query(l,r,a[x].ls);</span><br><span class="line">    <span class="keyword">if</span>(mid&lt;r)</span><br><span class="line">        tot+=query(l,r,a[x].rs);</span><br><span class="line">    <span class="keyword">return</span> tot%mod;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> ll <span class="title">sum</span><span class="params">(ll x,ll y)</span></span>&#123;</span><br><span class="line">    ll ret=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(top[x]!=top[y])&#123;</span><br><span class="line">        <span class="keyword">if</span>(d[top[x]]&lt;d[top[y]])</span><br><span class="line">            swap(x,y);</span><br><span class="line">        (ret+=query(id[top[x]],id[x],rt))%=mod;</span><br><span class="line">        x=f[top[x]];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(id[x]&gt;id[y])</span><br><span class="line">        swap(x,y);</span><br><span class="line">    <span class="keyword">return</span> (ret+query(id[x],id[y],rt))%mod;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">updates</span><span class="params">(ll x,ll y,ll c)</span></span>&#123;</span><br><span class="line">    <span class="keyword">while</span>(top[x]!=top[y])&#123;</span><br><span class="line">        <span class="keyword">if</span>(d[top[x]]&lt;d[top[y]])</span><br><span class="line">            swap(x,y);</span><br><span class="line">        update(id[top[x]],id[x],c,rt);</span><br><span class="line">        x=f[top[x]];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(id[x]&gt;id[y])</span><br><span class="line">        swap(x,y);</span><br><span class="line">    update(id[x],id[y],c,rt);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%lld %lld %lld %lld"</span>,&amp;n,&amp;m,&amp;r,&amp;mod);</span><br><span class="line">    <span class="keyword">for</span>(ll i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%lld"</span>,&amp;v[i]);</span><br><span class="line">    <span class="keyword">for</span>(ll x,y,i=<span class="number">1</span>;i&lt;n;i++)&#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%lld %lld"</span>,&amp;x,&amp;y);</span><br><span class="line">        add(x,y),add(y,x);</span><br><span class="line">    &#125;</span><br><span class="line">    cnt=<span class="number">0</span>,dfs1(r),dfs2(r,r);</span><br><span class="line">    cnt=<span class="number">0</span>,build(<span class="number">1</span>,n,rt=cnt++);</span><br><span class="line">    <span class="keyword">for</span>(ll op,x,y,k,i=<span class="number">1</span>;i&lt;=m;i++)&#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%lld"</span>,&amp;op);</span><br><span class="line">        <span class="keyword">if</span>(op==<span class="number">1</span>)&#123;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">"%lld %lld %lld"</span>,&amp;x,&amp;y,&amp;k);</span><br><span class="line">            updates(x,y,k);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(op==<span class="number">2</span>)&#123;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">"%lld %lld"</span>,&amp;x,&amp;y);</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,sum(x,y));</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(op==<span class="number">3</span>)&#123;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">"%lld %lld"</span>,&amp;x,&amp;y);</span><br><span class="line">            update(id[x],id[x]+size[x]<span class="number">-1</span>,y,rt);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">"%lld"</span>,&amp;x);</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,query(id[x],id[x]+size[x]<span class="number">-1</span>,rt));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;最为经典的树链剖分就是对于树删一条链进行同时加或者减操作，然后每次询问。&lt;/p&gt;
    
    </summary>
    
      <category term="数据结构" scheme="http://yoursite.com/categories/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
    
  </entry>
  
  <entry>
    <title>Educational Codeforces Round 68(Rated for Div.2)</title>
    <link href="http://yoursite.com/2019/07/15/cf190714/"/>
    <id>http://yoursite.com/2019/07/15/cf190714/</id>
    <published>2019-07-15T05:50:45.879Z</published>
    <updated>2019-07-15T08:09:46.494Z</updated>
    
    <content type="html"><![CDATA[<p><del>日常掉分</del></p><a id="more"></a><h2 id="A-Remove-a-Progression"><a href="#A-Remove-a-Progression" class="headerlink" title="A.Remove a Progression"></a><a href="https://codeforces.com/contest/1194/problem/A" target="_blank" rel="noopener">A.Remove a Progression</a></h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> t;</span><br><span class="line">    <span class="keyword">int</span> n,x;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;t);</span><br><span class="line">    <span class="keyword">while</span>(t--)&#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d %d"</span>,&amp;n,&amp;x);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,<span class="number">2</span>*x);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="B-Yet-Another-Crosses-Problem"><a href="#B-Yet-Another-Crosses-Problem" class="headerlink" title="B.Yet Another Crosses Problem"></a><a href="https://codeforces.com/contest/1194/problem/B" target="_blank" rel="noopener">B.Yet Another Crosses Problem</a></h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">int</span> n,m;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn=<span class="number">5e4</span>+<span class="number">10</span>;</span><br><span class="line"><span class="built_in">vector</span>&lt;<span class="keyword">char</span>&gt;mp[maxn];</span><br><span class="line"><span class="keyword">char</span> s[maxn];</span><br><span class="line"><span class="keyword">int</span> an[maxn];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> t;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;t);</span><br><span class="line">    <span class="keyword">while</span>(t--)&#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d %d"</span>,&amp;n,&amp;m);</span><br><span class="line">        getchar();</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;n; i++)&#123;</span><br><span class="line">            mp[i].clear();</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">"%s"</span>,&amp;s);</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>; j&lt;m; j++)&#123;</span><br><span class="line">                mp[i].push_back(s[j]);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>; j&lt;m; j++)&#123;</span><br><span class="line">            <span class="keyword">int</span> jj=<span class="number">0</span>;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;n; i++)&#123;</span><br><span class="line">                <span class="keyword">if</span>(mp[i][j] == <span class="string">'*'</span>) jj++;</span><br><span class="line">            &#125;</span><br><span class="line">            an[j]=jj;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">int</span> ans=<span class="number">0x3f3f3f3f</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;n; i++)&#123;</span><br><span class="line">            <span class="keyword">int</span> q=<span class="number">0</span>;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>; j&lt;m; j++)&#123;</span><br><span class="line">                <span class="keyword">if</span>(mp[i][j]==<span class="string">'*'</span>) q++;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">int</span> pp=<span class="number">0</span>,pos=<span class="number">-1</span>;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>; j&lt;m; j++)&#123;</span><br><span class="line">                <span class="keyword">if</span>(pp&lt;an[j])&#123;</span><br><span class="line">                    pos=j;</span><br><span class="line">                    pp=an[j];</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">if</span>(pp==an[j])&#123;</span><br><span class="line">                    <span class="keyword">if</span>(mp[i][j]==<span class="string">'.'</span>) pos=j;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(pos==<span class="number">-1</span>)&#123;</span><br><span class="line">                ans=min(ans,m+n<span class="number">-1</span>-q);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="keyword">if</span>(mp[i][pos]==<span class="string">'*'</span>) ans=min(ans,m+n<span class="number">-1</span>-q-pp+<span class="number">1</span>);</span><br><span class="line">                <span class="keyword">else</span> ans=min(ans,m+n<span class="number">-1</span>-pp-q);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,ans);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="C-From-S-To-T"><a href="#C-From-S-To-T" class="headerlink" title="C.From S To T"></a><a href="https://codeforces.com/contest/1194/problem/C" target="_blank" rel="noopener">C.From S To T</a></h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn=<span class="number">110</span>;</span><br><span class="line"><span class="keyword">char</span> s[maxn],t[maxn],p[maxn];</span><br><span class="line"><span class="keyword">int</span> vis[<span class="number">300</span>];</span><br><span class="line"><span class="keyword">int</span> vi[<span class="number">300</span>];</span><br><span class="line"><span class="keyword">int</span> v[<span class="number">300</span>];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> tt;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;tt);</span><br><span class="line">    <span class="keyword">while</span>(tt--)&#123;</span><br><span class="line">        <span class="built_in">memset</span>(vis,<span class="number">0</span>,<span class="keyword">sizeof</span> vis);</span><br><span class="line">        <span class="built_in">memset</span>(vi,<span class="number">0</span>,<span class="keyword">sizeof</span> vi);</span><br><span class="line">        <span class="built_in">memset</span>(v,<span class="number">0</span>,<span class="keyword">sizeof</span> v);</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%s %s %s"</span>,s,t,p);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;<span class="built_in">strlen</span>(s); i++)&#123;</span><br><span class="line">            vis[s[i]]++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;<span class="built_in">strlen</span>(t); i++)&#123;</span><br><span class="line">            vi[t[i]]++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;<span class="built_in">strlen</span>(p); i++)&#123;</span><br><span class="line">            v[p[i]]++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">bool</span> flag=<span class="literal">true</span>;</span><br><span class="line">        <span class="keyword">int</span> j=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;<span class="built_in">strlen</span>(s); i++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(j==<span class="built_in">strlen</span>(t))&#123;</span><br><span class="line">                flag=<span class="literal">false</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">for</span>(; j&lt;<span class="built_in">strlen</span>(t); j++)&#123;</span><br><span class="line">                <span class="keyword">if</span>(t[j] == s[i])&#123;</span><br><span class="line">                    <span class="comment">//printf("%c\n",t[j]);</span></span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">continue</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(t[j]!=s[i])&#123;</span><br><span class="line">                flag=<span class="literal">false</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> j++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="string">'a'</span>; i&lt;=<span class="string">'z'</span>; i++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(vis[i]==vi[i]) <span class="keyword">continue</span>;</span><br><span class="line">            <span class="keyword">if</span>(vis[i]&lt;vi[i] &amp;&amp; vis[i]+v[i]&gt;=vi[i])&#123;</span><br><span class="line">                v[i]--;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span>&#123;</span><br><span class="line">                flag=<span class="literal">false</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(flag) <span class="built_in">puts</span>(<span class="string">"YES"</span>);</span><br><span class="line">        <span class="keyword">else</span> <span class="built_in">puts</span>(<span class="string">"NO"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="D-1-2-K-Game"><a href="#D-1-2-K-Game" class="headerlink" title="D.1-2-K Game"></a><a href="https://codeforces.com/contest/1194/problem/D" target="_blank" rel="noopener">D.1-2-K Game</a></h2><p>题意：给你一堆石子数量为n，你一次只能拿走1或2或k，最后一个没有石子拿的人输（描述与题目说法不一样，本质是一样的）</p><p>思路：博弈题。</p><p>分情况讨论，首先0是必败态，1，2是必胜态，然后3是必败态…一直到$k$是必胜态。<br>如果$n&lt;k$，那么我只能拿1或2，根据巴什博弈，当$n \equiv 0(mod \ 3)$必败，否则必胜。</p><p>接下来讨论$n \geq k$的情况：</p><p>那如果$k \not\equiv 0(mod \ 3)$的话，那么$k$一定是必胜态，$k-1$和$k+1$必有一个必胜态，假设$k\equiv 1(mod \ 3)$，那么$k-1$就是必败态，$k+1$就是必胜态，然后一直下去和前面巴什博弈规律一样，$k\equiv 2(mod \ 3)$也是如此。</p><p>那么如果$k\equiv 0(mod \ 3)$的话，$k-1$必胜态，$k$必胜态，$k+1$必败，$k+2$，$k+3$必胜 ……$k+k-1$ 和 $k+k$是必胜态 $2 * k+1$必胜(因为可以拿$k$使得变成必败态)，所以规律就出来了，当$n \equiv k (mod \ (k+1))$就是必胜态，否则就判断<code>n%(k+1)%3​</code>的值，如果等于0，就是必败态，否则就是必胜态。</p><p><del>不会sg函数，只能手推</del></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn=<span class="number">110</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> tt;</span><br><span class="line">    <span class="comment">//freopen("in.txt","r",stdin);</span></span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;tt);</span><br><span class="line">    <span class="keyword">int</span> cnt=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span>(tt--)&#123;</span><br><span class="line">        <span class="keyword">int</span> n,k;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d %d"</span>,&amp;n,&amp;k);</span><br><span class="line">        <span class="keyword">if</span>(n == <span class="number">0</span>)&#123;</span><br><span class="line">            <span class="comment">//printf("%d %d %d ",cnt++,n,k);</span></span><br><span class="line">            <span class="built_in">puts</span>(<span class="string">"Bob"</span>);</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(k == n || n&lt;=<span class="number">2</span>)&#123;</span><br><span class="line">            <span class="comment">//printf("%d %d %d ",cnt++,n,k);</span></span><br><span class="line">            <span class="built_in">puts</span>(<span class="string">"Alice"</span>);</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(n&lt;k||k%<span class="number">3</span>!=<span class="number">0</span>)&#123;</span><br><span class="line">            <span class="comment">//printf("%d %d %d ",cnt++,n,k);</span></span><br><span class="line">            <span class="keyword">if</span>(n%<span class="number">3</span>!=<span class="number">0</span>) <span class="built_in">puts</span>(<span class="string">"Alice"</span>);</span><br><span class="line">            <span class="keyword">else</span> <span class="built_in">puts</span>(<span class="string">"Bob"</span>);</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="comment">//printf("%d %d %d ",cnt++,n,k);</span></span><br><span class="line">            <span class="keyword">int</span> tmp=n%(k+<span class="number">1</span>);</span><br><span class="line">            <span class="keyword">if</span>(tmp == k) <span class="built_in">puts</span>(<span class="string">"Alice"</span>);</span><br><span class="line">            <span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="keyword">if</span>(tmp%<span class="number">3</span>==<span class="number">0</span>) <span class="built_in">puts</span>(<span class="string">"Bob"</span>);</span><br><span class="line">                <span class="keyword">else</span> <span class="built_in">puts</span>(<span class="string">"Alice"</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;del&gt;日常掉分&lt;/del&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="codeforces" scheme="http://yoursite.com/categories/codeforces/"/>
    
    
  </entry>
  
  <entry>
    <title>Codeforces Round#573(Div 2)</title>
    <link href="http://yoursite.com/2019/07/13/cf190712/"/>
    <id>http://yoursite.com/2019/07/13/cf190712/</id>
    <published>2019-07-13T02:42:41.852Z</published>
    <updated>2019-07-13T14:05:18.302Z</updated>
    
    <content type="html"><![CDATA[<p>又是深夜肝题，不过这次被疯狂卡题，涨分+0<del>（小幸运）</del></p><a id="more"></a><h2 id="A-Tokitsukaze-and-Enhancement"><a href="#A-Tokitsukaze-and-Enhancement" class="headerlink" title="A.Tokitsukaze and Enhancement"></a><a href="https://codeforces.com/contest/1191/problem/A" target="_blank" rel="noopener">A.Tokitsukaze and Enhancement</a></h2><p>题意：对于一个数，如果对4取余之后，余数为1,3,2,0时，等级为$A,B,C,D$，优先级降低。给你一个数，你能加0，1，2，你能达到的最高等级是什么。</p><p>思路：暴力模拟<del>，还可以找规律直接输出的</del>。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">cal</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(x%<span class="number">4</span>==<span class="number">1</span>) <span class="keyword">return</span> <span class="number">4</span>;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(x%<span class="number">4</span>==<span class="number">3</span>) <span class="keyword">return</span> <span class="number">3</span>;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(x%<span class="number">4</span>==<span class="number">2</span>) <span class="keyword">return</span> <span class="number">2</span>;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</span><br><span class="line">    <span class="keyword">int</span> x1=n,x2=n+<span class="number">1</span>,x3=n+<span class="number">2</span>;</span><br><span class="line">    <span class="keyword">int</span> a1=cal(x1),a2=cal(x2),a3=cal(x3);</span><br><span class="line">    <span class="keyword">if</span>(a1 &gt; a2 &amp;&amp; a1&gt;a3)&#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"0 %c"</span>,<span class="string">'A'</span>+<span class="number">4</span>-a1);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(a2&gt;a1 &amp; a2&gt;a3)&#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"1 %c"</span>,<span class="string">'A'</span>+<span class="number">4</span>-a2);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"2 %c"</span>,<span class="string">'A'</span>+<span class="number">4</span>-a3);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="B-Tokitsukaze-and-Mahjong"><a href="#B-Tokitsukaze-and-Mahjong" class="headerlink" title="B.Tokitsukaze and Mahjong"></a><a href="https://codeforces.com/contest/1191/problem/B" target="_blank" rel="noopener">B.Tokitsukaze and Mahjong</a></h2><p>题意：有三种花色的麻将${m,p,s }$，每个花色有1-9的数字，问你最少还要抓多少个牌就可以凑成同花顺含三个或者三个一模一样的牌。</p><p>思路：模拟题。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">int</span> s[<span class="number">11</span>],m[<span class="number">11</span>],p[<span class="number">11</span>];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">cal</span><span class="params">(<span class="keyword">char</span> c)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(c == <span class="string">'s'</span>) <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(c == <span class="string">'m'</span>) <span class="keyword">return</span> <span class="number">2</span>;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">return</span> <span class="number">3</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">ok</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=<span class="number">9</span>; i++) <span class="keyword">if</span>(s[i]==<span class="number">3</span>) <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=<span class="number">9</span>; i++) <span class="keyword">if</span>(m[i]==<span class="number">3</span>) <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=<span class="number">9</span>; i++) <span class="keyword">if</span>(p[i]==<span class="number">3</span>) <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=<span class="number">7</span>; i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(s[i]==<span class="number">1</span> &amp;&amp; s[i+<span class="number">1</span>]==<span class="number">1</span> &amp;&amp; s[i+<span class="number">2</span>]==<span class="number">1</span>) <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=<span class="number">7</span>; i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(m[i]==<span class="number">1</span> &amp;&amp; m[i+<span class="number">1</span>]==<span class="number">1</span> &amp;&amp; m[i+<span class="number">2</span>]==<span class="number">1</span>) <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=<span class="number">7</span>; i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(p[i]==<span class="number">1</span> &amp;&amp; p[i+<span class="number">1</span>]==<span class="number">1</span> &amp;&amp; p[i+<span class="number">2</span>]==<span class="number">1</span>) <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">okk</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=<span class="number">8</span>; i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(s[i]==<span class="number">1</span> &amp;&amp; s[i+<span class="number">1</span>]==<span class="number">1</span>) <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=<span class="number">8</span>; i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(m[i]==<span class="number">1</span> &amp;&amp; m[i+<span class="number">1</span>]==<span class="number">1</span>) <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=<span class="number">8</span>; i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(p[i]==<span class="number">1</span> &amp;&amp; p[i+<span class="number">1</span>]==<span class="number">1</span>) <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">okkk</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=<span class="number">7</span>; i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(s[i]==<span class="number">1</span> &amp;&amp; s[i+<span class="number">2</span>]==<span class="number">1</span>) <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=<span class="number">7</span>; i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(m[i]==<span class="number">1</span> &amp;&amp; m[i+<span class="number">2</span>]==<span class="number">1</span>) <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=<span class="number">7</span>; i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(p[i]==<span class="number">1</span> &amp;&amp; p[i+<span class="number">2</span>]==<span class="number">1</span>) <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">okkkk</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=<span class="number">9</span>; i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(s[i]==<span class="number">2</span>) <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=<span class="number">9</span>; i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(m[i]==<span class="number">2</span>) <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=<span class="number">9</span>; i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(p[i]==<span class="number">2</span>) <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> c1,c2,c3;</span><br><span class="line">    <span class="keyword">int</span> x,y,z;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d%c %d%c %d%c"</span>,&amp;x,&amp;c1,&amp;y,&amp;c2,&amp;z,&amp;c3);</span><br><span class="line">    <span class="keyword">if</span>(cal(c1)==<span class="number">1</span>) s[x]++;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(cal(c1)==<span class="number">2</span>) m[x]++;</span><br><span class="line">    <span class="keyword">else</span> p[x]++;</span><br><span class="line">    <span class="keyword">if</span>(cal(c2)==<span class="number">1</span>) s[y]++;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(cal(c2)==<span class="number">2</span>) m[y]++;</span><br><span class="line">    <span class="keyword">else</span> p[y]++;</span><br><span class="line">    <span class="keyword">if</span>(cal(c3)==<span class="number">1</span>) s[z]++;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(cal(c3)==<span class="number">2</span>) m[z]++;</span><br><span class="line">    <span class="keyword">else</span> p[z]++;</span><br><span class="line">    <span class="keyword">if</span>(ok()) <span class="built_in">puts</span>(<span class="string">"0"</span>);</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(okk() || okkk() || okkkk()) <span class="built_in">puts</span>(<span class="string">"1"</span>);</span><br><span class="line">        <span class="keyword">else</span> <span class="built_in">puts</span>(<span class="string">"2"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="C-Tokitsukaze-and-Discard-Items"><a href="#C-Tokitsukaze-and-Discard-Items" class="headerlink" title="C.Tokitsukaze and Discard Items"></a><a href="https://codeforces.com/contest/1191/problem/C" target="_blank" rel="noopener">C.Tokitsukaze and Discard Items</a></h2><p>题意：很多页面，对于每一个页面进行删除特殊数的操作，每删除一个页面的数就要从后面移动若干个数来填补，问你最终我要进行几次删除操作。</p><p>思路：由于n最多有$10^{18}$，直接在n中查找肯定不行，所以直接对m个特殊的数操作，然后就是一道模拟题。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> ll maxn=<span class="number">1e5</span>+<span class="number">10</span>;</span><br><span class="line">ll n,k,m;</span><br><span class="line">ll a[maxn];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%lld %lld %lld"</span>,&amp;n,&amp;m,&amp;k);</span><br><span class="line">    <span class="keyword">for</span>(ll i=<span class="number">0</span>; i&lt;m; i++)&#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%lld"</span>,&amp;a[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    ll ans=<span class="number">0</span>;</span><br><span class="line">    ll sum=<span class="number">0</span>;</span><br><span class="line">    ll l=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(ll i=<span class="number">0</span>; i&lt;m; i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(a[i]-ans&lt;=k)&#123;</span><br><span class="line">            l++;</span><br><span class="line">            <span class="keyword">if</span>(sum == <span class="number">0</span>) sum++;</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            ans+=l;</span><br><span class="line">            <span class="keyword">if</span>(a[i]-ans&gt;k)&#123;</span><br><span class="line">                ll tmp=(a[i]-ans<span class="number">-1</span>)/k;</span><br><span class="line">                ans+=(tmp*k);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">//printf("%lld\n",ans);</span></span><br><span class="line">            l=<span class="number">1</span>;</span><br><span class="line">            sum++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,sum);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="D-Tokitsukaze-CSL-and-Stone-Game"><a href="#D-Tokitsukaze-CSL-and-Stone-Game" class="headerlink" title="D.Tokitsukaze, CSL and Stone Game"></a><a href="https://codeforces.com/contest/1191/problem/D" target="_blank" rel="noopener">D.Tokitsukaze, CSL and Stone Game</a></h2><p>题意：两个人玩n堆石子游戏，每个人拿一颗，如果轮到一个人没石子拿了或者拿了之后存在两堆石子的数量一样，就输，问你谁赢？</p><p>思路：如果对于第一个人无论怎么取都输了，那么就直接输出第二个人赢，否则就一定会到0,1,2,3,…,n-1状态，那么只要看到这个状态拿石子数量的奇偶性即可。</p><p>对于第一个人的必输状态有如下四种</p><p>$cnt_0 \geq 2 $</p><p>$\exists  x \ ,\ cnt_x \geq 3$</p><p>$\exists {x,y} ,\ cnt_x \geq 2 \ and\ cnt_y \geq 2$</p><p>$\exists{x}, \ cnt_x\geq2 \ and \ cnt_{x-1}\geq1$</p><p>判断即可。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line">ll n;</span><br><span class="line"><span class="built_in">map</span>&lt;ll,ll&gt;ma;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%lld"</span>,&amp;n);</span><br><span class="line">    ll sum=<span class="number">0</span>,x;</span><br><span class="line">    ll aa=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">bool</span> flag=<span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">for</span>(ll i=<span class="number">0</span>; i&lt;n; i++)&#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%lld"</span>,&amp;x);</span><br><span class="line">        ma[x]++;</span><br><span class="line">        <span class="keyword">if</span>(ma[x]==<span class="number">3</span> || (ma[x]&gt;=<span class="number">2</span>&amp;&amp;ma[x<span class="number">-1</span>]&gt;<span class="number">0</span>) || (ma[x]&gt;<span class="number">0</span> &amp;&amp; ma[x+<span class="number">1</span>]&gt;=<span class="number">2</span>)) flag=<span class="literal">true</span>;</span><br><span class="line">        <span class="keyword">if</span>(ma[x]==<span class="number">2</span>) aa++;</span><br><span class="line">        sum+=x;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(flag || aa&gt;=<span class="number">2</span> || ma[<span class="number">0</span>]&gt;=<span class="number">2</span>)&#123;</span><br><span class="line">        <span class="built_in">puts</span>(<span class="string">"cslnb"</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    ll tmp=(<span class="number">0</span>+n<span class="number">-1</span>)*n/<span class="number">2</span>;</span><br><span class="line">    sum-=tmp;</span><br><span class="line">    <span class="keyword">if</span>(sum&amp;<span class="number">1</span>) <span class="built_in">puts</span>(<span class="string">"sjfnb"</span>);</span><br><span class="line">    <span class="keyword">else</span> <span class="built_in">puts</span>(<span class="string">"cslnb"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;又是深夜肝题，不过这次被疯狂卡题，涨分+0&lt;del&gt;（小幸运）&lt;/del&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="codeforces" scheme="http://yoursite.com/categories/codeforces/"/>
    
    
  </entry>
  
  <entry>
    <title>区间dp</title>
    <link href="http://yoursite.com/2019/07/11/%E5%8C%BA%E9%97%B4dp/"/>
    <id>http://yoursite.com/2019/07/11/区间dp/</id>
    <published>2019-07-11T15:03:13.833Z</published>
    <updated>2019-07-13T14:05:30.855Z</updated>
    
    <content type="html"><![CDATA[<p>复习一波区间dp，不然有时候玄学区间dp过题很难受，题目来源：<a href="https://cn.vjudge.net/contest/308873#overview" target="_blank" rel="noopener">[kuangbin带你飞]专题二十二 区间DP</a> 。</p><a id="more"></a><h2 id="A-Halloween-Costumes"><a href="#A-Halloween-Costumes" class="headerlink" title="A-Halloween Costumes"></a><a href="https://cn.vjudge.net/contest/308873#problem/A" target="_blank" rel="noopener">A-Halloween Costumes</a></h2><p>题意：有n个万圣节聚会，每个聚会有要穿一种衣服过去$a_i$，可以将一件衣服套在本来穿的衣服上，如果参加的聚会要穿的这种衣服在我外面套的衣服的里面，有两种选择，要么重新拿一件对应样式的衣服，要么脱下穿在对应样式外的所有衣服；如果里面没有对应样式的衣服，就要重新另拿一件。脱下的衣服不能重新穿回去<del>（有些拗口，建议看题目自行体会，语文水平有限）</del>，问你对于所有聚会，所需最少的衣服数量。</p><p>思路：<code>dp[i][j]</code>代表区间i到j所需最少的数目，那么首先有<code>dp[i][j]=dp[i][j-1]+1</code>，然后在枚举断点的时候，如果枚举的断点k，有<code>a[k]=a[j]</code>的话，那么对于j这一点，我可以脱下<code>dp[k+1][j-1]</code>件衣服，回到k这一个状态点，即<code>dp[i][j]=min(dp[i][j],dp[i][k]+dp[k+1][j-1])</code>，注意条件不是<code>a[i]=a[k]</code>，因为i到k中的状态可能会影响到k到j的状态（比如说在k点，我脱下了一件后面要用到的衣服，就会有矛盾）</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn=<span class="number">110</span>;</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="keyword">int</span> dp[maxn][maxn],a[maxn];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> t,cnt=<span class="number">1</span>;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;t);</span><br><span class="line">    <span class="keyword">while</span>(t--)&#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=n; i++)&#123;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;a[i]);</span><br><span class="line">            dp[i][i]=<span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> len=<span class="number">2</span>; len&lt;=n; len++)&#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=n; i++)&#123;</span><br><span class="line">                <span class="keyword">int</span> j=i+len<span class="number">-1</span>;</span><br><span class="line">                <span class="keyword">if</span>(j&gt;n) <span class="keyword">break</span>;</span><br><span class="line">                dp[i][j]=dp[i][j<span class="number">-1</span>]+<span class="number">1</span>;</span><br><span class="line">                <span class="keyword">for</span>(<span class="keyword">int</span> k=i; k&lt;j; k++)&#123;</span><br><span class="line">                    <span class="keyword">if</span>(a[k] == a[j]) dp[i][j]=min(dp[i][j],dp[i][k]+dp[k+<span class="number">1</span>][j<span class="number">-1</span>]);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"Case %d: %d\n"</span>,cnt++,dp[<span class="number">1</span>][n]);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="B-Brackets"><a href="#B-Brackets" class="headerlink" title="B-Brackets"></a><a href="https://cn.vjudge.net/contest/308873#problem/B" target="_blank" rel="noopener">B-Brackets</a></h2><p>题意：一个括号序列，问你最长的匹配子序列长为多少。</p><p>思路：区间dp，转移方程：如果k和j能匹配，<code>dp[i][j]=max(dp[i][j],dp[i][k],dp[i][k-1]+dp[k+1][j-1]+2)</code>。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn=<span class="number">110</span>;</span><br><span class="line"><span class="keyword">int</span> dp[maxn][maxn];</span><br><span class="line"><span class="keyword">char</span> a[maxn];</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">c</span><span class="params">(<span class="keyword">char</span> c1,<span class="keyword">char</span> c2)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(c1==<span class="string">'('</span> &amp;&amp; c2==<span class="string">')'</span>) <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    <span class="keyword">if</span>(c1==<span class="string">'['</span> &amp;&amp; c2==<span class="string">']'</span>) <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">scanf</span>(<span class="string">"%s"</span>,a+<span class="number">1</span>))&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="built_in">strcmp</span>(a+<span class="number">1</span>,<span class="string">"end"</span>) == <span class="number">0</span>) <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">int</span> n=<span class="built_in">strlen</span>(a+<span class="number">1</span>);</span><br><span class="line">        <span class="built_in">memset</span>(dp,<span class="number">0</span>,<span class="keyword">sizeof</span> dp);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> len=<span class="number">2</span>; len&lt;=n; len++)&#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=n; i++)&#123;</span><br><span class="line">                <span class="keyword">int</span> j=i+len<span class="number">-1</span>;</span><br><span class="line">                <span class="keyword">if</span>(j&gt;n) <span class="keyword">break</span>;</span><br><span class="line">                dp[i][j]=dp[i][j<span class="number">-1</span>];</span><br><span class="line">                <span class="keyword">for</span>(<span class="keyword">int</span> k=i; k&lt;j; k++)&#123;</span><br><span class="line">                    <span class="keyword">if</span>(c(a[k],a[j])) dp[i][j]=max(dp[i][j],dp[i][k<span class="number">-1</span>]+dp[k+<span class="number">1</span>][j<span class="number">-1</span>]+<span class="number">2</span>);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,dp[<span class="number">1</span>][n]);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="F-You-Are-the-One"><a href="#F-You-Are-the-One" class="headerlink" title="F-You Are the One"></a><a href="https://cn.vjudge.net/contest/308873#problem/F" target="_blank" rel="noopener">F-You Are the One</a></h2><p>题意：有$n$个人，每个人有一个愤怒值$a_i$，有一个小房间，根据题目意思这个小房间实现的堆栈的功能，然后对于每个人，如果他前面有$k$个人，他就会有$a_i * k$的愤怒值，小房间通过堆栈原理可以实现将位置微调，$n$个人必须依次进入小房间，问你最小的愤怒值。</p><p>思路：区间dp，而到枚举断点的时候是枚举第i个人第几个出去的，详情看代码。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> inf=<span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn=<span class="number">110</span>;</span><br><span class="line"><span class="keyword">int</span> dp[maxn][maxn];</span><br><span class="line"><span class="keyword">char</span> a[maxn];</span><br><span class="line"><span class="keyword">int</span> sum[maxn];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> t,n,cnt=<span class="number">1</span>;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;t);</span><br><span class="line">    <span class="keyword">while</span>(t--)&#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</span><br><span class="line">        <span class="built_in">memset</span>(dp,<span class="number">0</span>,<span class="keyword">sizeof</span> dp);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=n; i++)&#123;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;a[i]);</span><br><span class="line">            sum[i]=sum[i<span class="number">-1</span>]+a[i];</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j=i+<span class="number">1</span>; j&lt;=n; j++) dp[i][j]=inf;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> len=<span class="number">2</span>; len&lt;=n; len++)&#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=n; i++)&#123;</span><br><span class="line">                <span class="keyword">int</span> j=i+len<span class="number">-1</span>;</span><br><span class="line">                <span class="keyword">if</span>(j&gt;n) <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">for</span>(<span class="keyword">int</span> k=<span class="number">1</span>; k&lt;=len; k++)&#123;</span><br><span class="line">                    dp[i][j]=min(dp[i][j],dp[i+<span class="number">1</span>][k+i<span class="number">-1</span>]+dp[i+k][j]+a[i]*(k<span class="number">-1</span>)+(sum[j]-sum[i+k<span class="number">-1</span>])*k);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"Case #%d: %d\n"</span>,cnt++,dp[<span class="number">1</span>][n]);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="G-String-painter"><a href="#G-String-painter" class="headerlink" title="G-String painter"></a><a href="https://cn.vjudge.net/contest/308873#problem/G" target="_blank" rel="noopener">G-String painter</a></h2><p>题意：两个相同长度的字符串s和t，你可以选择一段区间，将其变成同一个字符，问你将第一个字符串刷成第二串最小需要多少个操作。</p><p>思路：和A题非常相似，先用A题的思路将字符串s处理好，<code>dp[i][j]</code>代表区间i到j变成任意其他的字符所需的最小步数，然后再对t字符串进行处理，也是区间dp的思维，<code>a[i]</code>代表从1到i区间所需的最小操作。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn=<span class="number">110</span>;</span><br><span class="line"><span class="keyword">int</span> dp[maxn][maxn];</span><br><span class="line"><span class="keyword">char</span> s[maxn],t[maxn];</span><br><span class="line"><span class="keyword">int</span> a[maxn];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">while</span>(~<span class="built_in">scanf</span>(<span class="string">"%s %s"</span>,s+<span class="number">1</span>,t+<span class="number">1</span>))&#123;</span><br><span class="line">        <span class="keyword">int</span> n=<span class="built_in">strlen</span>(s+<span class="number">1</span>);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=n; i++) dp[i][i]=<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> len=<span class="number">2</span>; len&lt;=n; len++)&#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=n; i++)&#123;</span><br><span class="line">                <span class="keyword">int</span> j=i+len<span class="number">-1</span>;</span><br><span class="line">                <span class="keyword">if</span>(j&gt;n) <span class="keyword">break</span>;</span><br><span class="line">                dp[i][j]=dp[i][j<span class="number">-1</span>]+<span class="number">1</span>;</span><br><span class="line">                <span class="keyword">for</span>(<span class="keyword">int</span> k=i; k&lt;j; k++)&#123;</span><br><span class="line">                    <span class="keyword">if</span>(t[k] == t[j]) dp[i][j]=min(dp[i][j],dp[i][k]+dp[k+<span class="number">1</span>][j<span class="number">-1</span>]);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=n; i++) a[i]=dp[<span class="number">1</span>][i];</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=n; i++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(s[i] == t[i]) a[i]=a[i<span class="number">-1</span>];</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>; j&lt;i; j++)</span><br><span class="line">                a[i]=min(a[i],a[j]+dp[j+<span class="number">1</span>][i]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,a[n]);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;复习一波区间dp，不然有时候玄学区间dp过题很难受，题目来源：&lt;a href=&quot;https://cn.vjudge.net/contest/308873#overview&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;[kuangbin带你飞]专题二十二 区间DP&lt;/a&gt; 。&lt;/p&gt;
    
    </summary>
    
      <category term="dp" scheme="http://yoursite.com/categories/dp/"/>
    
    
  </entry>
  
  <entry>
    <title>hash</title>
    <link href="http://yoursite.com/2019/07/11/hash/"/>
    <id>http://yoursite.com/2019/07/11/hash/</id>
    <published>2019-07-11T08:44:34.974Z</published>
    <updated>2019-08-06T03:47:06.242Z</updated>
    
    <content type="html"><![CDATA[<p><del>遇到hash的题目默默流下眼泪😥</del></p><a id="more"></a><h2 id="小w的a-b问题"><a href="#小w的a-b问题" class="headerlink" title="小w的a=b问题"></a><a href="https://ac.nowcoder.com/acm/contest/923/B" target="_blank" rel="noopener">小w的a=b问题</a></h2><p>题意：给你两个数组a和b，长度为n和m，问你$\prod_{i=1}^{n}a_i ! $是否等于$\prod_{i=1}^{m}b_i ! $，其中$1 \leq n,m \leq 10^5$,$0 \leq a_i,b_i \leq 10^5$</p><p><del>初次遇到这种题目，我以为是一个推公式的题目，把我整懵了，果然数据结构的知识还是灰常重要啊[点头]</del></p><p>思路：用两个比较大一点的质数作为模系，然后计算每个阶乘$(0 \sim10^5)$所在模系hash值，用两个可以保证不冲突的几率大大减小。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> ll maxn=<span class="number">1e5</span>+<span class="number">10</span>;</span><br><span class="line">ll mod1=<span class="number">1e9</span>+<span class="number">7</span>,mod2=<span class="number">1e9</span>+<span class="number">9</span>;</span><br><span class="line">ll m1[maxn],m2[maxn];</span><br><span class="line">ll t,n,m,a;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">init</span><span class="params">()</span></span>&#123;</span><br><span class="line">    m1[<span class="number">0</span>]=m2[<span class="number">0</span>]=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(ll i=<span class="number">1</span>; i&lt;maxn; i++)&#123;</span><br><span class="line">        m1[i]=m1[i<span class="number">-1</span>]*i%mod1;</span><br><span class="line">        m2[i]=m2[i<span class="number">-1</span>]*i%mod2;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    init();</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%lld"</span>,&amp;t);</span><br><span class="line">    <span class="keyword">while</span>(t--)&#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%lld %lld"</span>,&amp;n,&amp;m);</span><br><span class="line">        ll s1=<span class="number">1</span>,s2=<span class="number">1</span>,s3=<span class="number">1</span>,s4=<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span>(ll i=<span class="number">0</span>; i&lt;n; i++)&#123;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">"%lld"</span>,&amp;a);</span><br><span class="line">            s1=s1*m1[a]%mod1;</span><br><span class="line">            s2=s2*m2[a]%mod2;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(ll i=<span class="number">0</span>; i&lt;m; i++)&#123;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">"%lld"</span>,&amp;a);</span><br><span class="line">            s3=s3*m1[a]%mod1;</span><br><span class="line">            s4=s4*m2[a]%mod2;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(s1==s3 &amp;&amp; s2==s4) <span class="built_in">puts</span>(<span class="string">"equal"</span>);</span><br><span class="line">        <span class="keyword">else</span> <span class="built_in">puts</span>(<span class="string">"unequal"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h2 id="字符串hash"><a href="#字符串hash" class="headerlink" title="字符串hash"></a>字符串hash</h2><p>上面是数字的hash，而字符串的hash就是一个$O(n)$的预处理。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="keyword">unsigned</span> <span class="keyword">long</span> <span class="keyword">long</span> ull;</span><br><span class="line"><span class="comment">//ull 会溢出取模</span></span><br><span class="line"><span class="keyword">const</span> ull base=<span class="number">233</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn=<span class="number">1e5</span>+<span class="number">10</span>;</span><br><span class="line"><span class="keyword">char</span> s[maxn];</span><br><span class="line">ull hs[maxn],p[maxn];</span><br><span class="line"><span class="function">ull <span class="title">geths</span><span class="params">(<span class="keyword">int</span> l,<span class="keyword">int</span> r)</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> (ull)hs[r]-p[r-l+<span class="number">1</span>]*hs[l<span class="number">-1</span>];</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">init</span><span class="params">()</span></span>&#123;</span><br><span class="line">    p[<span class="number">0</span>]=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;maxn; i++) p[i]=p[i<span class="number">-1</span>]*base;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%s"</span>,s+<span class="number">1</span>);</span><br><span class="line">    <span class="keyword">int</span> len=<span class="built_in">strlen</span>(s+<span class="number">1</span>);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=len; i++)&#123;</span><br><span class="line">        hs[i]=hs[i<span class="number">-1</span>]*base+s[i];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h2 id="手写hash，可以替代map加速查询"><a href="#手写hash，可以替代map加速查询" class="headerlink" title="手写hash，可以替代map加速查询"></a>手写hash，可以替代map加速查询</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Hash</span>&#123;</span></span><br><span class="line">    ll mod = <span class="number">2908361</span>;</span><br><span class="line">    ll cnt = <span class="number">0</span>, Head[<span class="number">2908361</span>], nxt[<span class="number">1000006</span>];</span><br><span class="line">    ll val[<span class="number">1000006</span>], pos[<span class="number">1000006</span>];</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">init</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="built_in">memset</span>(Head, <span class="number">-1</span>, <span class="keyword">sizeof</span>(Head)); cnt = <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Insert</span><span class="params">(ll x, ll v)</span></span>&#123;</span><br><span class="line">        ll key = x % mod;</span><br><span class="line">        pos[cnt] = x, val[cnt] = v, nxt[cnt] = Head[key];</span><br><span class="line">        Head[key] = cnt++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function">ll <span class="title">Find</span><span class="params">(ll x)</span></span>&#123;</span><br><span class="line">        ll key = x % mod;</span><br><span class="line">        <span class="keyword">for</span>(ll i = Head[key]; ~i; i = nxt[i])&#123;</span><br><span class="line">            <span class="keyword">if</span>(pos[i] == x) <span class="keyword">return</span> val[i];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">-1l</span>l;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;hs;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;del&gt;遇到hash的题目默默流下眼泪😥&lt;/del&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="数据结构" scheme="http://yoursite.com/categories/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
    
  </entry>
  
  <entry>
    <title>主席树</title>
    <link href="http://yoursite.com/2019/07/10/%E4%B8%BB%E5%B8%AD%E6%A0%91/"/>
    <id>http://yoursite.com/2019/07/10/主席树/</id>
    <published>2019-07-10T02:56:42.874Z</published>
    <updated>2019-08-24T02:29:39.810Z</updated>
    
    <content type="html"><![CDATA[<p><del>狂补数据结构的知识！！还需慢慢消化🐷</del>主席树的本质就是线段树，叫做可持久化线段树，最为经典的问题就是查询区间第k小的数<del>(说是第k大，<a href="http://acm.hdu.edu.cn/showproblem.php?pid=2665" target="_blank" rel="noopener">HDU2665</a>上面说the  kth big number​)</del>，分静态(不带修改)和动态(带修改)两种。</p><a id="more"></a><h2 id="POJ2104-HDU2665-静态"><a href="#POJ2104-HDU2665-静态" class="headerlink" title="POJ2104||HDU2665(静态)"></a><a href="http://poj.org/problem?id=2104" target="_blank" rel="noopener">POJ2104</a>||<a href="http://acm.hdu.edu.cn/showproblem.php?pid=2665" target="_blank" rel="noopener">HDU2665</a>(静态)</h2><p>题意：主席树入门题，题意是查询区间内第k小，主席树入门模板题，可以参考这篇<a href="https://blog.csdn.net/williamsun0122/article/details/77871278" target="_blank" rel="noopener">blog</a>。<del>POJ上面的数据好像有点弱，</del>。</p><p>每次加入一个新的节点，就要更新线段树，T[i]代表第i颗线段树的根节点，sum[i]表示节点i对应区间的个数，然后根据线段树的性质，左边的子节点总比右边的子节点的数小，那么左边子节点总数就说明左边子节点的最小的数还要小，然后根据左右子节点的个数可以判断出我要找的第k小数在哪个区间内，递归查找就可以了。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn=<span class="number">1e5</span>+<span class="number">10</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxm=maxn*<span class="number">40</span>;</span><br><span class="line"><span class="keyword">int</span> T[maxn],L[maxm],R[maxm],sum[maxm];</span><br><span class="line"><span class="keyword">int</span> sz[maxn],h[maxn]; <span class="comment">//sz为原序列,h为离散化之后的序列</span></span><br><span class="line"><span class="keyword">int</span> n,q,ql,qr,k,tot;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">build</span><span class="params">(<span class="keyword">int</span>&amp; rt,<span class="keyword">int</span> l,<span class="keyword">int</span> r)</span></span>&#123;</span><br><span class="line">    rt=++tot;</span><br><span class="line">    sum[rt]=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span>(l == r) <span class="keyword">return</span> ;</span><br><span class="line">    <span class="keyword">int</span> mid=(l+r)&gt;&gt;<span class="number">1</span>;</span><br><span class="line">    build(L[rt],l,mid);</span><br><span class="line">    build(R[rt],mid+<span class="number">1</span>,r);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">update</span><span class="params">(<span class="keyword">int</span>&amp; rt,<span class="keyword">int</span> l,<span class="keyword">int</span> r,<span class="keyword">int</span> pre,<span class="keyword">int</span> x)</span></span>&#123;</span><br><span class="line">    rt=++tot;</span><br><span class="line">    L[rt]=L[pre];</span><br><span class="line">    R[rt]=R[pre];</span><br><span class="line">    sum[rt]=sum[pre]+<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">if</span>(l == r) <span class="keyword">return</span> ;</span><br><span class="line">    <span class="keyword">int</span> mid=(l+r)&gt;&gt;<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">if</span>(x &lt;= mid) update(L[rt],l,mid,L[pre],x);</span><br><span class="line">    <span class="keyword">else</span> update(R[rt],mid+<span class="number">1</span>,r,R[pre],x);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">query</span><span class="params">(<span class="keyword">int</span> s,<span class="keyword">int</span> e,<span class="keyword">int</span> l,<span class="keyword">int</span> r,<span class="keyword">int</span> k)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(l == r) <span class="keyword">return</span> l;</span><br><span class="line">    <span class="keyword">int</span> mid=(l+r)&gt;&gt;<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">int</span> res=sum[L[e]]-sum[L[s]];</span><br><span class="line">    <span class="keyword">if</span>(k &lt;= res) <span class="keyword">return</span> query(L[s],L[e],l,mid,k);</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">return</span> query(R[s],R[e],mid+<span class="number">1</span>,r,k-res);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d %d"</span>,&amp;n,&amp;q);</span><br><span class="line">    tot=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=n; i++)&#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;sz[i]);</span><br><span class="line">        h[i]=sz[i];</span><br><span class="line">    &#125;</span><br><span class="line">    sort(h+<span class="number">1</span>,h+<span class="number">1</span>+n);</span><br><span class="line">    <span class="keyword">int</span> num=unique(h+<span class="number">1</span>,h+<span class="number">1</span>+n)-(h+<span class="number">1</span>);</span><br><span class="line">    build(T[<span class="number">0</span>],<span class="number">1</span>,num);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=n; i++) update(T[i],<span class="number">1</span>,num,T[i<span class="number">-1</span>],lower_bound(h+<span class="number">1</span>,h+<span class="number">1</span>+num,sz[i])-(h));</span><br><span class="line">    <span class="keyword">while</span>(q--)&#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d %d %d"</span>,&amp;ql,&amp;qr,&amp;k);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,h[query(T[ql<span class="number">-1</span>],T[qr],<span class="number">1</span>,num,k)]);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="ZOJ-2122-Dynamic-Rankings-动态"><a href="#ZOJ-2122-Dynamic-Rankings-动态" class="headerlink" title="ZOJ-2122.Dynamic Rankings(动态)"></a><a href="http://acm.zju.edu.cn/onlinejudge/showProblem.do?problemCode=2112" target="_blank" rel="noopener">ZOJ-2122.Dynamic Rankings(动态)</a></h2><p>题意：动态求区间第k小，可参考<a href="https://blog.csdn.net/WilliamSun0122/article/details/77885781" target="_blank" rel="noopener">blog</a>。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">6e4</span>+<span class="number">5</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxm = <span class="number">1e4</span>+<span class="number">5</span>;</span><br><span class="line"><span class="keyword">int</span> T[maxn],S[maxn],L[maxn*<span class="number">32</span>],R[maxn*<span class="number">32</span>],sum[maxn*<span class="number">32</span>];</span><br><span class="line"><span class="keyword">int</span> sz[maxn],h[maxn];</span><br><span class="line"><span class="keyword">int</span> ul[maxn],ur[maxn];</span><br><span class="line"><span class="keyword">int</span> tot,num,n,q;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span>&#123;</span></span><br><span class="line">    <span class="keyword">int</span> l,r,k;</span><br><span class="line">    <span class="keyword">bool</span> flag; <span class="comment">//ture代表Q，false代表C</span></span><br><span class="line">&#125;Q[maxm];  <span class="comment">//存储询问</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">build</span><span class="params">(<span class="keyword">int</span>&amp; rt,<span class="keyword">int</span> l,<span class="keyword">int</span> r)</span></span>&#123;</span><br><span class="line">    rt = ++tot;</span><br><span class="line">    sum[rt]=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span>(l==r) <span class="keyword">return</span>;</span><br><span class="line">    <span class="keyword">int</span> mid = (l+r)&gt;&gt;<span class="number">1</span>;</span><br><span class="line">    build(L[rt],l,mid);</span><br><span class="line">    build(R[rt],mid+<span class="number">1</span>,r);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">update</span><span class="params">(<span class="keyword">int</span>&amp; rt,<span class="keyword">int</span> pre,<span class="keyword">int</span> l,<span class="keyword">int</span> r,<span class="keyword">int</span> x,<span class="keyword">int</span> val)</span></span>&#123;</span><br><span class="line">    rt = ++tot;</span><br><span class="line">    L[rt] = L[pre];</span><br><span class="line">    R[rt] = R[pre];</span><br><span class="line">    sum[rt] = sum[pre]+val;</span><br><span class="line">    <span class="keyword">if</span>(l==r) <span class="keyword">return</span>;</span><br><span class="line">    <span class="keyword">int</span> mid = (l+r)&gt;&gt;<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">if</span>(x&lt;=mid) update(L[rt],L[pre],l,mid,x,val);</span><br><span class="line">    <span class="keyword">else</span> update(R[rt],R[pre],mid+<span class="number">1</span>,r,x,val);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">lowbit</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> x&amp;(-x);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> val)</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> res = lower_bound(h+<span class="number">1</span>,h+<span class="number">1</span>+num,sz[x])-h;</span><br><span class="line">    <span class="keyword">while</span>(x&lt;=n)&#123;</span><br><span class="line">        update(S[x],S[x],<span class="number">1</span>,num,res,val);</span><br><span class="line">        x += lowbit(x);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">Sum</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">bool</span> flag)</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> res=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(x&gt;<span class="number">0</span>)&#123;</span><br><span class="line">        <span class="keyword">if</span>(flag) res += sum[L[ur[x]]];</span><br><span class="line">        <span class="keyword">else</span> res += sum[L[ul[x]]];</span><br><span class="line">        x -= lowbit(x);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">query</span><span class="params">(<span class="keyword">int</span> s,<span class="keyword">int</span> e,<span class="keyword">int</span> ts,<span class="keyword">int</span> te,<span class="keyword">int</span> l,<span class="keyword">int</span> r,<span class="keyword">int</span> k)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(l==r) <span class="keyword">return</span> l;</span><br><span class="line">    <span class="keyword">int</span> mid = (l+r)&gt;&gt;<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">int</span> res = Sum(e,<span class="literal">true</span>)-Sum(s,<span class="literal">false</span>)+sum[L[te]]-sum[L[ts]];</span><br><span class="line">    <span class="keyword">if</span>(k&lt;=res)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=e;i;i-=lowbit(i)) ur[i] = L[ur[i]];</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=s;i;i-=lowbit(i)) ul[i] = L[ul[i]];</span><br><span class="line">        <span class="keyword">return</span> query(s,e,L[ts],L[te],l,mid,k);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=e;i;i-=lowbit(i)) ur[i] = R[ur[i]];</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=s;i;i-=lowbit(i)) ul[i] = R[ul[i]];</span><br><span class="line">        <span class="keyword">return</span> query(s,e,R[ts],R[te],mid+<span class="number">1</span>,r,k-res);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> t;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;t);</span><br><span class="line">    <span class="keyword">while</span>(t--)&#123;</span><br><span class="line">        <span class="keyword">char</span> str[<span class="number">5</span>];</span><br><span class="line">        num=<span class="number">0</span>;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;n,&amp;q);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++) <span class="built_in">scanf</span>(<span class="string">"%d"</span>,sz+i),h[++num]=sz[i];</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=q;i++)&#123;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">"%s"</span>,str);</span><br><span class="line">            <span class="keyword">if</span>(str[<span class="number">0</span>]==<span class="string">'Q'</span>)&#123;</span><br><span class="line">                <span class="built_in">scanf</span>(<span class="string">"%d%d%d"</span>,&amp;Q[i].l,&amp;Q[i].r,&amp;Q[i].k);</span><br><span class="line">                Q[i].flag=<span class="literal">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;Q[i].l,&amp;Q[i].r);</span><br><span class="line">                Q[i].flag=<span class="literal">false</span>;</span><br><span class="line">                h[++num]=Q[i].r;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        sort(h+<span class="number">1</span>,h+<span class="number">1</span>+num);</span><br><span class="line">        <span class="keyword">int</span> tmp = unique(h+<span class="number">1</span>,h+<span class="number">1</span>+num)-h<span class="number">-1</span>;</span><br><span class="line">        num = tmp;</span><br><span class="line">        tot=<span class="number">0</span>;</span><br><span class="line">        build(T[<span class="number">0</span>],<span class="number">1</span>,num);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++) update(T[i],T[i<span class="number">-1</span>],<span class="number">1</span>,num,lower_bound(h+<span class="number">1</span>,h+<span class="number">1</span>+num,sz[i])-h,<span class="number">1</span>);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++) S[i] = T[<span class="number">0</span>];</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=q;i++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(Q[i].flag)&#123;</span><br><span class="line">                <span class="keyword">for</span>(<span class="keyword">int</span> j=Q[i].r;j;j-=lowbit(j)) ur[j] = S[j];</span><br><span class="line">                <span class="keyword">for</span>(<span class="keyword">int</span> j=Q[i].l<span class="number">-1</span>;j;j-=lowbit(j)) ul[j] = S[j];</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,h[query(Q[i].l<span class="number">-1</span>,Q[i].r,T[Q[i].l<span class="number">-1</span>],T[Q[i].r],<span class="number">1</span>,num,Q[i].k)]);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span>&#123;</span><br><span class="line">                add(Q[i].l,<span class="number">-1</span>);</span><br><span class="line">                sz[Q[i].l] = Q[i].r;</span><br><span class="line">                add(Q[i].l,<span class="number">1</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h2 id="HDU6703"><a href="#HDU6703" class="headerlink" title="HDU6703"></a><a href="http://acm.hdu.edu.cn/showproblem.php?pid=6703" target="_blank" rel="noopener">HDU6703</a></h2><p>主席树加set</p><p>你有两个操作：$(1,pos)$将$a_{pos}$变成$a_{pos}+10^7$；$(2,r,k)$求$a_1$到$a_r$的一个不存在的值的最小值$x$使得$x\geq k$。</p><p>并且强制要求在线做。</p><p>直接用主席树在$[1,r]$中跑出一个值，然后利用set存一些被操作的值，因为被操作的值也是备选答案，两者取最小值就好，因为元素都是不重复的，所以这种方法可行。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn=<span class="number">1e5</span>+<span class="number">10</span>;</span><br><span class="line"><span class="keyword">int</span> a[maxn];</span><br><span class="line"><span class="keyword">int</span> n,m;</span><br><span class="line"><span class="keyword">int</span> op,r,k,pos;</span><br><span class="line"><span class="keyword">int</span> ans=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxm=maxn*<span class="number">40</span>;</span><br><span class="line"><span class="keyword">int</span> T[maxn],L[maxm],R[maxm],sum[maxm];</span><br><span class="line"><span class="built_in">set</span>&lt;<span class="keyword">int</span>&gt;s;</span><br><span class="line"><span class="keyword">int</span> q,ql,qr,tot;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">build</span><span class="params">(<span class="keyword">int</span>&amp; rt,<span class="keyword">int</span> l,<span class="keyword">int</span> r)</span></span>&#123;</span><br><span class="line">    rt=++tot;</span><br><span class="line">    sum[rt]=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span>(l == r) <span class="keyword">return</span> ;</span><br><span class="line">    <span class="keyword">int</span> mid=(l+r)&gt;&gt;<span class="number">1</span>;</span><br><span class="line">    build(L[rt],l,mid);</span><br><span class="line">    build(R[rt],mid+<span class="number">1</span>,r);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">update</span><span class="params">(<span class="keyword">int</span>&amp; rt,<span class="keyword">int</span> l,<span class="keyword">int</span> r,<span class="keyword">int</span> pre,<span class="keyword">int</span> x)</span></span>&#123;</span><br><span class="line">    rt=++tot;</span><br><span class="line">    L[rt]=L[pre];</span><br><span class="line">    R[rt]=R[pre];</span><br><span class="line">    sum[rt]=sum[pre]+<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">if</span>(l == r) <span class="keyword">return</span> ;</span><br><span class="line">    <span class="keyword">int</span> mid=(l+r)&gt;&gt;<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">if</span>(x &lt;= mid) update(L[rt],l,mid,L[pre],x);</span><br><span class="line">    <span class="keyword">else</span> update(R[rt],mid+<span class="number">1</span>,r,R[pre],x);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> Fi;</span><br><span class="line"><span class="keyword">int</span> ll,rr;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">query</span><span class="params">(<span class="keyword">int</span> rt,<span class="keyword">int</span> l,<span class="keyword">int</span> r)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(Fi &lt; n+<span class="number">1</span>) <span class="keyword">return</span> ;</span><br><span class="line">    <span class="keyword">if</span>(l&gt;=ll &amp;&amp; r&lt;=rr)&#123;</span><br><span class="line">        <span class="keyword">int</span> res=sum[rt];</span><br><span class="line">        <span class="keyword">if</span>(res==<span class="number">0</span>)&#123;</span><br><span class="line">            Fi=l;</span><br><span class="line">            <span class="keyword">return</span> ;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(sum[rt] == r-l+<span class="number">1</span>) <span class="keyword">return</span> ;</span><br><span class="line">        <span class="keyword">int</span> mid=(l+r)&gt;&gt;<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">if</span>(sum[L[rt]] == mid-l+<span class="number">1</span>) query(R[rt],mid+<span class="number">1</span>,r);</span><br><span class="line">        <span class="keyword">else</span> query(L[rt],l,mid);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> mid=(l+r)&gt;&gt;<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">if</span>(ll&lt;=mid) query(L[rt],l,mid);</span><br><span class="line">    <span class="keyword">if</span>(rr&gt;mid)  query(R[rt],mid+<span class="number">1</span>,r);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> T_T;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;T_T);</span><br><span class="line">    <span class="keyword">while</span>(T_T--)&#123;</span><br><span class="line">        ans=<span class="number">0</span>;</span><br><span class="line">        tot=<span class="number">0</span>;</span><br><span class="line">        s.clear();</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d %d"</span>,&amp;n,&amp;m);</span><br><span class="line">        build(T[<span class="number">0</span>],<span class="number">1</span>,n);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=n; i++)&#123;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;a[i]);</span><br><span class="line">            update(T[i],<span class="number">1</span>,n,T[i<span class="number">-1</span>],a[i]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">while</span>(m--)&#123;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;op);</span><br><span class="line">            s.insert(n+<span class="number">1</span>); </span><br><span class="line">            <span class="comment">//这个元素必定存在，没有会出错，使得到的的解小，因为lower_bound如果没有找到会返回最后一个值</span></span><br><span class="line">            <span class="keyword">if</span>(op == <span class="number">1</span>)&#123;</span><br><span class="line">                <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;pos);</span><br><span class="line">                pos^=ans;</span><br><span class="line">                s.insert(a[pos]);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="built_in">scanf</span>(<span class="string">"%d %d"</span>,&amp;r,&amp;k);</span><br><span class="line">                r^=ans;</span><br><span class="line">                k^=ans;</span><br><span class="line">                Fi=n+<span class="number">1</span>;</span><br><span class="line">                <span class="keyword">int</span> Fi1=*(s.lower_bound(k));</span><br><span class="line">                ll=k,rr=n;</span><br><span class="line">                query(T[r],<span class="number">1</span>,n);</span><br><span class="line">                ans=min(Fi1,Fi);</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,ans); </span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;del&gt;狂补数据结构的知识！！还需慢慢消化🐷&lt;/del&gt;主席树的本质就是线段树，叫做可持久化线段树，最为经典的问题就是查询区间第k小的数&lt;del&gt;(说是第k大，&lt;a href=&quot;http://acm.hdu.edu.cn/showproblem.php?pid=2665&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;HDU2665&lt;/a&gt;上面说the  kth big number​)&lt;/del&gt;，分静态(不带修改)和动态(带修改)两种。&lt;/p&gt;
    
    </summary>
    
      <category term="数据结构" scheme="http://yoursite.com/categories/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
    
  </entry>
  
  <entry>
    <title>莫队算法</title>
    <link href="http://yoursite.com/2019/07/08/%E8%8E%AB%E9%98%9F%E7%AE%97%E6%B3%95/"/>
    <id>http://yoursite.com/2019/07/08/莫队算法/</id>
    <published>2019-07-08T12:56:01.976Z</published>
    <updated>2019-09-14T01:11:46.661Z</updated>
    
    <content type="html"><![CDATA[<p><del>自从上次邀请赛之后说要学习莫队算法，一直拖到现在，💊</del>总的来说，莫队算法是一种离线分块的算法，将总区间分成若干个块($\sqrt{n}$)，然后对每一块更新查询$ans$的值。时间复杂度$O\ (n\sqrt{n})$</p><a id="more"></a><p>这里强烈安利一篇<a href="http://www.myblog.link/2016/01/26/MO-s-Algorithm/" target="_blank" rel="noopener">blog</a></p><h2 id="SPOJ-D-query"><a href="#SPOJ-D-query" class="headerlink" title="SPOJ D-query"></a><a href="https://www.spoj.com/problems/DQUERY/" target="_blank" rel="noopener">SPOJ D-query</a></h2><p>题意：给定一个长度为n序列，再给定m次查询，每次查询区间内出现元素的种类数</p><p>思路：<del>听说可以主席树或者离线树状数组做，</del>莫队算法的入门题，耗时270ms。将所有查询分成$\sqrt{n}$个块，再按照块排序，然后对于每个块可以利用之前算过的答案(即数量)来更新当前的答案(数量)。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn=<span class="number">1e6</span>+<span class="number">10</span>;</span><br><span class="line"><span class="keyword">int</span> a[maxn],n,m,cnt[maxn],ans=<span class="number">0</span>,anss[maxn],block;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span>&#123;</span></span><br><span class="line">    <span class="keyword">int</span> L,R,i;</span><br><span class="line">&#125;q[maxn];</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmp</span><span class="params">(node x,node y)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(x.L/block != y.L/block) <span class="keyword">return</span> x.L/block &lt; y.L/block;</span><br><span class="line">    <span class="keyword">return</span> x.R &lt; y.R;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> p)</span></span>&#123;</span><br><span class="line">    cnt[a[p]]++;</span><br><span class="line">    <span class="keyword">if</span>(cnt[a[p]] == <span class="number">1</span>) ans++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">del</span><span class="params">(<span class="keyword">int</span> p)</span></span>&#123;</span><br><span class="line">    cnt[a[p]]--;</span><br><span class="line">    <span class="keyword">if</span>(cnt[a[p]] == <span class="number">0</span>) ans--;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</span><br><span class="line">    block=<span class="built_in">sqrt</span>(n);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=n; i++) <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;a[i]);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;m);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=m; i++)&#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d %d"</span>,&amp;q[i].L,&amp;q[i].R);</span><br><span class="line">        q[i].i=i;</span><br><span class="line">    &#125;</span><br><span class="line">    sort(q+<span class="number">1</span>,q+m+<span class="number">1</span>,cmp);</span><br><span class="line">    <span class="keyword">int</span> cL=<span class="number">1</span>,cR=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=m; i++)&#123;</span><br><span class="line">        <span class="keyword">int</span> L=q[i].L,R=q[i].R;</span><br><span class="line">        <span class="keyword">while</span>(cL &lt; L) del(cL++);</span><br><span class="line">        <span class="keyword">while</span>(cL &gt; L) add(--cL);</span><br><span class="line">        <span class="keyword">while</span>(cR &lt; R) add(++cR);</span><br><span class="line">        <span class="keyword">while</span>(cR &gt; R) del(cR--);</span><br><span class="line">        anss[q[i].i]=ans;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=m; i++) <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,anss[i]);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="codeforces-Powerful-array"><a href="#codeforces-Powerful-array" class="headerlink" title="codeforces-Powerful array"></a><a href="https://codeforces.com/contest/86/problem/D" target="_blank" rel="noopener">codeforces-Powerful array</a></h2><p>题意：给定n个元素序列，m次询问，要统计区间内[l,r]元素个数乘以元素的值的和$\sum_{l}^{r}cnt_i^2*i$，对于不同元素区间只计算一次。</p><p>思路：莫队算法，只需要修改del函数和add函数就行，在每次更新cnt前面，加上<code>ans-=(1LL*a[p]*cnt[a[p]]*cnt[a[p]]);</code>，更新之后再加上<code>ans+=(1LL*a[p]*cnt[a[p]]*cnt[a[p]]);</code>，注意不能把全部变量变成long long，会超时的😑。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn=<span class="number">1e6</span>+<span class="number">10</span>;</span><br><span class="line"><span class="keyword">int</span> a[maxn],n,m,cnt[maxn],block;</span><br><span class="line">ll ans=<span class="number">0</span>,anss[maxn];</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span>&#123;</span></span><br><span class="line">    <span class="keyword">int</span> L,R,i;</span><br><span class="line">&#125;q[maxn];</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmp</span><span class="params">(node x,node y)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(x.L/block != y.L/block) <span class="keyword">return</span> x.L/block &lt; y.L/block;</span><br><span class="line">    <span class="keyword">return</span> x.R &lt; y.R;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(ll p)</span></span>&#123;</span><br><span class="line">    ans-=(<span class="number">1L</span>L*a[p]*cnt[a[p]]*cnt[a[p]]);</span><br><span class="line">    cnt[a[p]]++;</span><br><span class="line">    ans+=(<span class="number">1L</span>L*a[p]*cnt[a[p]]*cnt[a[p]]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">del</span><span class="params">(ll p)</span></span>&#123;</span><br><span class="line">    ans-=(<span class="number">1L</span>L*a[p]*cnt[a[p]]*cnt[a[p]]);</span><br><span class="line">    cnt[a[p]]--;</span><br><span class="line">    ans+=(<span class="number">1L</span>L*a[p]*cnt[a[p]]*cnt[a[p]]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d %d"</span>,&amp;n,&amp;m);</span><br><span class="line">    block=<span class="built_in">sqrt</span>(n);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=n; i++) <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;a[i]);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=m; i++)&#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d %d"</span>,&amp;q[i].L,&amp;q[i].R);</span><br><span class="line">        q[i].i=i;</span><br><span class="line">    &#125;</span><br><span class="line">    sort(q+<span class="number">1</span>,q+m+<span class="number">1</span>,cmp);</span><br><span class="line">    <span class="keyword">int</span> cL=<span class="number">1</span>,cR=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=m; i++)&#123;</span><br><span class="line">        <span class="keyword">int</span> L=q[i].L,R=q[i].R;</span><br><span class="line">        <span class="keyword">while</span>(cL &lt; L) del(cL++);</span><br><span class="line">        <span class="keyword">while</span>(cL &gt; L) add(--cL);</span><br><span class="line">        <span class="keyword">while</span>(cR &lt; R) add(++cR);</span><br><span class="line">        <span class="keyword">while</span>(cR &gt; R) del(cR--);</span><br><span class="line">        anss[q[i].i]=ans;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(ll i=<span class="number">1</span>; i&lt;=m; i++) <span class="built_in">printf</span>(<span class="string">"%I64d\n"</span>,anss[i]);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="区间求和"><a href="#区间求和" class="headerlink" title="区间求和"></a><a href="https://ac.nowcoder.com/acm/contest/1085/G" target="_blank" rel="noopener">区间求和</a></h2><p>题意：给定$n$个元素，$m$次询问，求区间$[l\ ,\ r]$内$\sum_{i=l}^{r}{a_i * cnt_{a_i}}$</p><p>与上题不同的是，每个元素都要算到。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> ll maxn=<span class="number">1e6</span>+<span class="number">10</span>;</span><br><span class="line">ll a[maxn],n,m,cnt[maxn],block;</span><br><span class="line">ll ans=<span class="number">0</span>,anss[maxn];</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span>&#123;</span></span><br><span class="line">    ll L,R,i;</span><br><span class="line">&#125;q[maxn];</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmp</span><span class="params">(node x,node y)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(x.L/block != y.L/block) <span class="keyword">return</span> x.L/block &lt; y.L/block;</span><br><span class="line">    <span class="keyword">return</span> x.R &lt; y.R;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(ll p)</span></span>&#123;</span><br><span class="line">    ans+=(a[p]*cnt[a[p]]);</span><br><span class="line">    cnt[a[p]]++;</span><br><span class="line">    ans+=(a[p]*cnt[a[p]]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">del</span><span class="params">(ll p)</span></span>&#123;</span><br><span class="line">    ans-=(a[p]*cnt[a[p]]);</span><br><span class="line">    cnt[a[p]]--;</span><br><span class="line">    ans-=(a[p]*cnt[a[p]]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%lld %lld"</span>,&amp;n,&amp;m);</span><br><span class="line">    block=<span class="built_in">sqrt</span>(n);</span><br><span class="line">    <span class="keyword">for</span>(ll i=<span class="number">1</span>; i&lt;=n; i++) <span class="built_in">scanf</span>(<span class="string">"%lld"</span>,&amp;a[i]);</span><br><span class="line">    <span class="keyword">for</span>(ll i=<span class="number">1</span>; i&lt;=m; i++)&#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%lld %lld"</span>,&amp;q[i].L,&amp;q[i].R);</span><br><span class="line">        q[i].i=i;</span><br><span class="line">    &#125;</span><br><span class="line">    sort(q+<span class="number">1</span>,q+m+<span class="number">1</span>,cmp);</span><br><span class="line">    ll cL=<span class="number">1</span>,cR=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(ll i=<span class="number">1</span>; i&lt;=m; i++)&#123;</span><br><span class="line">        ll L=q[i].L,R=q[i].R;</span><br><span class="line">        <span class="keyword">while</span>(cL &lt; L) del(cL++);</span><br><span class="line">        <span class="keyword">while</span>(cL &gt; L) add(--cL);</span><br><span class="line">        <span class="keyword">while</span>(cR &lt; R) add(++cR);</span><br><span class="line">        <span class="keyword">while</span>(cR &gt; R) del(cR--);</span><br><span class="line">        anss[q[i].i]=ans;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(ll i=<span class="number">1</span>; i&lt;=m; i++) <span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,anss[i]);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="HDU-6534-Chika-and-Friendly-Pairs"><a href="#HDU-6534-Chika-and-Friendly-Pairs" class="headerlink" title="HDU-6534.Chika and Friendly Pairs"></a><a href="http://acm.hdu.edu.cn/showproblem.php?pid=6534" target="_blank" rel="noopener">HDU-6534.Chika and Friendly Pairs</a></h2><p><del>湘潭邀请赛C题，当时卡的题，现在补掉</del></p><p>题意：给定一个长度为$n$的序列，$m$次询问，一个数$k$。询问你在区间$[l\ ,\ r]$中，符合$|a_i-a_j|\leq k$并且$i &lt; j$有多少对这样的数。</p><p>思路：<strong>莫队+树状数组+离散化</strong>，首先对于每次查询$a_i$，我只要查询区间内$[a_i-k\ ,\ a_i+k]$的种数即可，利用树状数组就行，然后由于序列中的数最大有$10^9$，而数的个数只有$27000$，就可以通过离散化将其缩小，再用莫队算法。</p><p>对于新加进来的数$a_i$，<code>ans+=(query(up[l])-query(lowa[l]))</code>，然后再<code>add(mida[l],1)</code>，仔细想想就会发现，如果你先写add函数，就会把本身的值也算进去。</p><p>对于去掉的数$a_i$，则需要先<code>add(mida[l],-1)</code>，然后再更新ans，<code>ans-=(query(up[l])-query(lowa[l]))</code>，因为query查询的时候会把mida[l]也计算进来。</p><p>离散化的模版</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//n 原数组大小 num 原数组中的元素 lsh 离散化的数组 cnt 离散化后的数组大小 </span></span><br><span class="line"><span class="keyword">int</span> lsh[MAXN],cnt,num[MAXN],n;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=n; i++) &#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;num[i]);</span><br><span class="line">lsh[i]=num[i];</span><br><span class="line">&#125;</span><br><span class="line">sort(lsh+<span class="number">1</span>,lsh+n+<span class="number">1</span>);</span><br><span class="line">cnt = unique(lsh+<span class="number">1</span>,lsh+n+<span class="number">1</span>)-(lsh+<span class="number">1</span>);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=n; i++)</span><br><span class="line">num[i]=lower_bound(lsh+<span class="number">1</span>,lsh+cnt+<span class="number">1</span>,num[i])-lsh;</span><br></pre></td></tr></table></figure><p>该题ac的代码（390MS）</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn=<span class="number">27010</span>;</span><br><span class="line"><span class="keyword">int</span> mp[maxn*<span class="number">3</span>],a[maxn],upa[maxn],lowa[maxn],mida[maxn];</span><br><span class="line"><span class="keyword">int</span> tree[maxn*<span class="number">3</span>],ans=<span class="number">0</span>,anss[maxn];</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span>&#123;</span></span><br><span class="line">    <span class="keyword">int</span> l,r;</span><br><span class="line">    <span class="keyword">int</span> i;</span><br><span class="line">&#125;q[maxn];</span><br><span class="line"><span class="keyword">int</span> n,m,block,k;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmp</span><span class="params">(node i,node j)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(i.l/block != j.l/block) <span class="keyword">return</span> i.l/block &lt; j.l/block;</span><br><span class="line">    <span class="keyword">return</span> i.r &lt; j.r;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">lowbit</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> x&amp;(-x);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> val)</span></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=x; i&lt;maxn*<span class="number">3</span>; i+=lowbit(i)) tree[i]+=val;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">query</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> ans=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=x; i; i-=lowbit(i)) ans+=tree[i];</span><br><span class="line">    <span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d %d %d"</span>,&amp;n,&amp;m,&amp;k);</span><br><span class="line">    <span class="keyword">int</span> sum=<span class="number">1</span>;</span><br><span class="line">    block=<span class="built_in">sqrt</span>(n);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=n; i++)&#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;a[i]);</span><br><span class="line">        mp[sum++]=a[i];</span><br><span class="line">        mp[sum++]=a[i]+k;</span><br><span class="line">        mp[sum++]=a[i]-k<span class="number">-1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    sort(mp+<span class="number">1</span>,mp+sum);</span><br><span class="line">    <span class="keyword">int</span> num=unique(mp+<span class="number">1</span>,mp+sum)-(mp+<span class="number">1</span>);</span><br><span class="line">    <span class="keyword">int</span> pos;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=n; i++)&#123;</span><br><span class="line">        pos=lower_bound(mp+<span class="number">1</span>,mp+num+<span class="number">1</span>,a[i]+k)-mp;</span><br><span class="line">        upa[i]=pos;</span><br><span class="line">        pos=lower_bound(mp+<span class="number">1</span>,mp+num+<span class="number">1</span>,a[i]-k<span class="number">-1</span>)-mp;</span><br><span class="line">        lowa[i]=pos;</span><br><span class="line">        pos=lower_bound(mp+<span class="number">1</span>,mp+num+<span class="number">1</span>,a[i])-mp;</span><br><span class="line">        mida[i]=pos;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=m; i++)&#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d %d"</span>,&amp;q[i].l,&amp;q[i].r);</span><br><span class="line">        q[i].i=i;</span><br><span class="line">    &#125;</span><br><span class="line">    sort(q+<span class="number">1</span>,q+m+<span class="number">1</span>,cmp);</span><br><span class="line">    <span class="keyword">int</span> cL=<span class="number">1</span>,cR=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=m; i++)&#123;</span><br><span class="line">        <span class="keyword">int</span> L=q[i].l;</span><br><span class="line">        <span class="keyword">int</span> R=q[i].r;</span><br><span class="line">        <span class="keyword">while</span>(cR&lt;R)&#123;</span><br><span class="line">            cR++;</span><br><span class="line">            ans+=(query(upa[cR])-query(lowa[cR]));</span><br><span class="line">            add(mida[cR],<span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">while</span>(cR&gt;R)&#123;</span><br><span class="line">            add(mida[cR],<span class="number">-1</span>);</span><br><span class="line">            ans-=(query(upa[cR])-query(lowa[cR]));</span><br><span class="line">            cR--;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">while</span>(cL&lt;L)&#123;</span><br><span class="line">            add(mida[cL],<span class="number">-1</span>);</span><br><span class="line">            ans-=(query(upa[cL])-query(lowa[cL]));</span><br><span class="line">            cL++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">while</span>(cL&gt;L)&#123;</span><br><span class="line">            cL--;</span><br><span class="line">            ans+=(query(upa[cL])-query(lowa[cL]));</span><br><span class="line">            add(mida[cL],<span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        anss[q[i].i]=ans;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=m; i++) <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,anss[i]);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;del&gt;自从上次邀请赛之后说要学习莫队算法，一直拖到现在，💊&lt;/del&gt;总的来说，莫队算法是一种离线分块的算法，将总区间分成若干个块($\sqrt{n}$)，然后对每一块更新查询$ans$的值。时间复杂度$O\ (n\sqrt{n})$&lt;/p&gt;
    
    </summary>
    
      <category term="数据结构" scheme="http://yoursite.com/categories/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
    
  </entry>
  
  <entry>
    <title>牛客练习赛49</title>
    <link href="http://yoursite.com/2019/07/06/newcoder190705/"/>
    <id>http://yoursite.com/2019/07/06/newcoder190705/</id>
    <published>2019-07-06T11:15:20.753Z</published>
    <updated>2019-07-13T02:00:31.543Z</updated>
    
    <content type="html"><![CDATA[<p><del>说好的人均3.5道题呢？骗我们打代码</del></p><a id="more"></a><h4 id="A筱玛爱地理"><a href="#A筱玛爱地理" class="headerlink" title="A筱玛爱地理"></a><a href="https://ac.nowcoder.com/acm/contest/946/A" target="_blank" rel="noopener">A筱玛爱地理</a></h4><p>  在经济地理学中，交通的联结度表示交通网络的发达程度，通常用贝塔指数来计算与比较。若用$V$表示一个交通网络中结点的数量，用$E$表示边的数量，则贝塔指数的计算方式为：$ \beta = \frac{E}{V}$。 </p><p>“实践是检验真理的唯一标准”。作为一个热爱地理的好筱玛，她马上就把新学的知识应用到实践当中去。筱玛一口气出了$n$张交通网络规划图，其中第$i$张交通网络$G_i$有$V_i$个结点和$E_i$条边。筱玛一眼就看出了哪张图好、哪张图坏。但是作为一个负责任的好筱玛，她必须带领同学们一起进步。因此，她需要你将所有的$n$张图按照贝塔指数排序，并求出它们各自的贝塔指数在模$10^9+7$意义下的值</p><p>直接计算$\beta$(浮点数)，然后排序，再求逆元输出取模之后的结果就好了</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line">ll t;</span><br><span class="line">ll x,y;</span><br><span class="line"><span class="keyword">const</span> ll mod=<span class="number">1e9</span>+<span class="number">7</span>;</span><br><span class="line"><span class="function">ll <span class="title">qpow</span><span class="params">(ll x,ll n,ll mod)</span></span>&#123;</span><br><span class="line">    ll res=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span>(n)&#123;</span><br><span class="line">        <span class="keyword">if</span>(n&amp;<span class="number">1</span>) res=res*x%mod;</span><br><span class="line">        x=x*x%mod;</span><br><span class="line">        n&gt;&gt;=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> res%mod;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span>&#123;</span></span><br><span class="line">    ll v,e;</span><br><span class="line">    <span class="keyword">double</span> x;</span><br><span class="line">    ll y;</span><br><span class="line">&#125;a[<span class="number">200010</span>];</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmp</span><span class="params">(node i,node j)</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> i.x&gt;j.x;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%lld"</span>,&amp;t);</span><br><span class="line">    <span class="keyword">for</span>(ll i=<span class="number">0</span>; i&lt;t; i++)&#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%lld %lld"</span>,&amp;a[i].v,&amp;a[i].e);</span><br><span class="line">        <span class="comment">//printf("%lld\n",y*qpow(x,mod-2,mod)%mod);</span></span><br><span class="line">        a[i].y=a[i].e*qpow(a[i].v,mod<span class="number">-2</span>,mod)%mod;</span><br><span class="line">        <span class="comment">//a[i++]=y*qpow(x,mod-2,mod)%mod;</span></span><br><span class="line">        a[i].x=a[i].e*<span class="number">1.0</span>/a[i].v*<span class="number">1.0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    sort(a,a+t,cmp);</span><br><span class="line">    <span class="keyword">for</span>(ll j=<span class="number">0</span>; j&lt;t; j++) <span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,a[j].y);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="D筱玛爱线段树"><a href="#D筱玛爱线段树" class="headerlink" title="D筱玛爱线段树"></a><a href="https://ac.nowcoder.com/acm/contest/946/D" target="_blank" rel="noopener">D筱玛爱线段树</a></h4><p>筱玛的爷爷马爷在游戏中被筱玛吊打了，于是他恼羞成怒，决定给筱玛出这样一道数据结构题：<br>给定一个长度为n的数组A，刚开始每一项的值均为0。<br>支持以下两种操作，操作共m次：<br> 1 l r ：将$A_i \sim A_j$的每一项的值加上1。<br> 2 l r ：执行操作编号在[l,r]内的所有操作各一次，保证r小于当前操作的编号。<br>m次操作结束后，你要告诉马爷A数组变成什么样子了。<br>由于答案可能会很大，你只需要输出数组<br>A中的每个数在模 $10^9+7$ 意义下的值</p><p>方法一：线段树，维护了两棵线段树即可</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> ll maxn=<span class="number">100010</span>;</span><br><span class="line"><span class="keyword">const</span> ll mod=<span class="number">1e9</span>+<span class="number">7</span>;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">seg</span>&#123;</span></span><br><span class="line">    ll l,r;</span><br><span class="line">    ll mark;</span><br><span class="line">    ll val;</span><br><span class="line">&#125;s[maxn*<span class="number">4</span>],ss[maxn*<span class="number">4</span>];</span><br><span class="line">ll a[maxn];</span><br><span class="line">ll b[maxn];</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span>&#123;</span></span><br><span class="line">    ll op;</span><br><span class="line">    ll l,r;</span><br><span class="line">&#125;x[maxn];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">pushup</span><span class="params">(ll i)</span></span>&#123;</span><br><span class="line">    s[i].val=(s[i&lt;&lt;<span class="number">1L</span>L].val+s[(i&lt;&lt;<span class="number">1L</span>L)|<span class="number">1L</span>L].val)%mod;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">pushdown</span><span class="params">(ll i)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(s[i].mark)&#123;</span><br><span class="line">        s[i&lt;&lt;<span class="number">1L</span>L].val=(s[i&lt;&lt;<span class="number">1L</span>L].val+((s[i&lt;&lt;<span class="number">1L</span>L].r-s[i&lt;&lt;<span class="number">1L</span>L].l+<span class="number">1L</span>L)*s[i].mark%mod))%mod;</span><br><span class="line">        s[(i&lt;&lt;<span class="number">1L</span>L)|<span class="number">1L</span>L].val=(s[(i&lt;&lt;<span class="number">1L</span>L)|<span class="number">1L</span>L].val+((s[(i&lt;&lt;<span class="number">1L</span>L)|<span class="number">1L</span>L].r-s[(i&lt;&lt;<span class="number">1L</span>L)|<span class="number">1L</span>L].l+<span class="number">1L</span>L)*s[i].mark%mod))%mod;</span><br><span class="line">        s[i&lt;&lt;<span class="number">1L</span>L].mark=(s[i&lt;&lt;<span class="number">1L</span>L].mark+s[i].mark)%mod;</span><br><span class="line">        s[(i&lt;&lt;<span class="number">1L</span>L)|<span class="number">1L</span>L].mark=(s[(i&lt;&lt;<span class="number">1L</span>L)|<span class="number">1L</span>L].mark+s[i].mark)%mod;</span><br><span class="line">        s[i].mark=<span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">build</span><span class="params">(ll i,ll l,ll r)</span></span>&#123;</span><br><span class="line">    s[i].l=l;</span><br><span class="line">    s[i].r=r;</span><br><span class="line">    s[i].mark=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span>(l == r)&#123;</span><br><span class="line">        s[i].val=a[l];</span><br><span class="line">        <span class="keyword">return</span> ;</span><br><span class="line">    &#125;</span><br><span class="line">    ll mid=(l+r)&gt;&gt;<span class="number">1L</span>L;</span><br><span class="line">    build(i&lt;&lt;<span class="number">1L</span>L,l,mid);</span><br><span class="line">    build((i&lt;&lt;<span class="number">1L</span>L)|<span class="number">1L</span>L,mid+<span class="number">1L</span>L,r);</span><br><span class="line">    pushup(i);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">ll <span class="title">query</span><span class="params">(ll i,ll l,ll r,ll sl,ll sr)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(l&gt;=sl &amp;&amp; r&lt;=sr) <span class="keyword">return</span> s[i].val;</span><br><span class="line">    pushdown(i);</span><br><span class="line">    ll mid=(l+r)&gt;&gt;<span class="number">1L</span>L;</span><br><span class="line">    ll sum=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span>(mid&gt;=sl) sum=(sum+query(i&lt;&lt;<span class="number">1L</span>L,l,mid,sl,sr))%mod;</span><br><span class="line">    <span class="keyword">if</span>(mid&lt;sr) sum=(sum+query((i&lt;&lt;<span class="number">1L</span>L)|<span class="number">1L</span>L,mid+<span class="number">1L</span>L,r,sl,sr))%mod;</span><br><span class="line">    <span class="keyword">return</span> sum%mod;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">updata</span><span class="params">(ll i,ll l,ll r,ll sl,ll sr,ll val)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(l&gt;=sl &amp;&amp; r&lt;=sr)&#123;</span><br><span class="line">        s[i].val=(s[i].val+(s[i].r-s[i].l+<span class="number">1L</span>L)*val%mod)%mod;</span><br><span class="line">        s[i].mark=(s[i].mark+val)%mod;</span><br><span class="line">        <span class="keyword">return</span> ;</span><br><span class="line">    &#125;</span><br><span class="line">    ll mid=(l+r)&gt;&gt;<span class="number">1L</span>L;</span><br><span class="line">    pushdown(i);</span><br><span class="line">    <span class="keyword">if</span>(mid&gt;=sl) updata(i&lt;&lt;<span class="number">1L</span>L,l,mid,sl,sr,val);</span><br><span class="line">    <span class="keyword">if</span>(mid&lt;sr) updata((i&lt;&lt;<span class="number">1L</span>L)|<span class="number">1L</span>L,mid+<span class="number">1L</span>L,r,sl,sr,val);</span><br><span class="line">    pushup(i);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">pushup1</span><span class="params">(ll i)</span></span>&#123;</span><br><span class="line">    ss[i].val=(ss[i&lt;&lt;<span class="number">1L</span>L].val+ss[(i&lt;&lt;<span class="number">1L</span>L)|<span class="number">1L</span>L].val)%mod;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">pushdown1</span><span class="params">(ll i)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(ss[i].mark)&#123;</span><br><span class="line">        ss[i&lt;&lt;<span class="number">1L</span>L].val=(ss[i&lt;&lt;<span class="number">1L</span>L].val+((ss[i&lt;&lt;<span class="number">1L</span>L].r-ss[i&lt;&lt;<span class="number">1L</span>L].l+<span class="number">1L</span>L)*ss[i].mark%mod))%mod;</span><br><span class="line">        ss[(i&lt;&lt;<span class="number">1L</span>L)|<span class="number">1L</span>L].val=(ss[(i&lt;&lt;<span class="number">1L</span>L)|<span class="number">1L</span>L].val+((ss[(i&lt;&lt;<span class="number">1L</span>L)|<span class="number">1L</span>L].r-ss[(i&lt;&lt;<span class="number">1L</span>L)|<span class="number">1L</span>L].l+<span class="number">1L</span>L)*ss[i].mark%mod))%mod;</span><br><span class="line">        ss[i&lt;&lt;<span class="number">1L</span>L].mark=(ss[i&lt;&lt;<span class="number">1L</span>L].mark+ss[i].mark)%mod;</span><br><span class="line">        ss[(i&lt;&lt;<span class="number">1L</span>L)|<span class="number">1L</span>L].mark=(ss[(i&lt;&lt;<span class="number">1L</span>L)|<span class="number">1L</span>L].mark+ss[i].mark)%mod;</span><br><span class="line">        ss[i].mark=<span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">build1</span><span class="params">(ll i,ll l,ll r)</span></span>&#123;</span><br><span class="line">    ss[i].l=l;</span><br><span class="line">    ss[i].r=r;</span><br><span class="line">    ss[i].mark=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span>(l == r)&#123;</span><br><span class="line">        ss[i].val=b[l];</span><br><span class="line">        <span class="keyword">return</span> ;</span><br><span class="line">    &#125;</span><br><span class="line">    ll mid=(l+r)&gt;&gt;<span class="number">1L</span>L;</span><br><span class="line">    build1(i&lt;&lt;<span class="number">1L</span>L,l,mid);</span><br><span class="line">    build1((i&lt;&lt;<span class="number">1L</span>L)|<span class="number">1L</span>L,mid+<span class="number">1L</span>L,r);</span><br><span class="line">    pushup1(i);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">ll <span class="title">query1</span><span class="params">(ll i,ll l,ll r,ll ssl,ll ssr)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(l&gt;=ssl &amp;&amp; r&lt;=ssr) <span class="keyword">return</span> ss[i].val;</span><br><span class="line">    pushdown1(i);</span><br><span class="line">    ll mid=(l+r)&gt;&gt;<span class="number">1L</span>L;</span><br><span class="line">    ll ssum=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span>(mid&gt;=ssl) ssum=(ssum+query1(i&lt;&lt;<span class="number">1L</span>L,l,mid,ssl,ssr))%mod;</span><br><span class="line">    <span class="keyword">if</span>(mid&lt;ssr) ssum=(ssum+query1((i&lt;&lt;<span class="number">1L</span>L)|<span class="number">1L</span>L,mid+<span class="number">1L</span>L,r,ssl,ssr))%mod;</span><br><span class="line">    <span class="keyword">return</span> ssum%mod;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">updata1</span><span class="params">(ll i,ll l,ll r,ll ssl,ll ssr,ll val)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(l&gt;=ssl &amp;&amp; r&lt;=ssr)&#123;</span><br><span class="line">        ss[i].val=(ss[i].val+(ss[i].r-ss[i].l+<span class="number">1L</span>L)*val%mod)%mod;</span><br><span class="line">        ss[i].mark=(ss[i].mark+val)%mod;</span><br><span class="line">        <span class="keyword">return</span> ;</span><br><span class="line">    &#125;</span><br><span class="line">    ll mid=(l+r)&gt;&gt;<span class="number">1L</span>L;</span><br><span class="line">    pushdown1(i);</span><br><span class="line">    <span class="keyword">if</span>(mid&gt;=ssl) updata1(i&lt;&lt;<span class="number">1L</span>L,l,mid,ssl,ssr,val);</span><br><span class="line">    <span class="keyword">if</span>(mid&lt;ssr) updata1((i&lt;&lt;<span class="number">1L</span>L)|<span class="number">1L</span>L,mid+<span class="number">1L</span>L,r,ssl,ssr,val);</span><br><span class="line">    pushup1(i);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    ll n,m;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%lld"</span>,&amp;n);</span><br><span class="line">    <span class="built_in">memset</span>(a,<span class="number">0</span>,<span class="keyword">sizeof</span> a);</span><br><span class="line">    build(<span class="number">1</span>,<span class="number">1</span>,n);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%lld"</span>,&amp;m);</span><br><span class="line">    <span class="comment">//m=100000;</span></span><br><span class="line">    <span class="keyword">for</span>(ll i=<span class="number">1</span>; i&lt;=m; i++)&#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%lld %lld %lld"</span>,&amp;x[i].op,&amp;x[i].l,&amp;x[i].r);</span><br><span class="line">        <span class="comment">//if(i == 1) x[i].op=1,x[i].l=1,x[i].r=n;</span></span><br><span class="line">        <span class="comment">//else x[i].op=2,x[i].l=1,x[i].r=i-1;</span></span><br><span class="line">        b[i]=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//for(ll i=1; i&lt;=m; i++) b[i]=1;</span></span><br><span class="line">    build1(<span class="number">1</span>,<span class="number">1</span>,m);</span><br><span class="line">    <span class="comment">//cout&lt;&lt;query1(1,1,m,1,1)&lt;&lt;endl;;</span></span><br><span class="line">    <span class="keyword">for</span>(ll i=m; i&gt;<span class="number">0</span>; i--)&#123;</span><br><span class="line">        <span class="keyword">if</span>(x[i].op == <span class="number">1</span>)&#123;</span><br><span class="line">            updata(<span class="number">1</span>,<span class="number">1</span>,n,x[i].l,x[i].r,query1(<span class="number">1</span>,<span class="number">1</span>,m,i,i));</span><br><span class="line">            <span class="comment">//printf("%d\n",query1(1,1,m,i,i));</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            updata1(<span class="number">1</span>,<span class="number">1</span>,m,x[i].l,x[i].r,query1(<span class="number">1</span>,<span class="number">1</span>,m,i,i));</span><br><span class="line">            <span class="comment">//printf("%lld\n",query1(1,1,m,i,i));</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(ll i=<span class="number">1</span>; i&lt;=n; i++)&#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%lld%c"</span>,query(<span class="number">1</span>,<span class="number">1</span>,n,i,i),i&lt;n?<span class="string">' '</span>:<span class="string">'\n'</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>方法二：差分(留坑待补……)</p><h4 id="E筱玛爱游戏"><a href="#E筱玛爱游戏" class="headerlink" title="E筱玛爱游戏"></a><a href="https://ac.nowcoder.com/acm/contest/946/E" target="_blank" rel="noopener">E筱玛爱游戏</a></h4><p>  两个人轮流从桌面上取走一个数，并把这个数放入集合中。 </p><p>  如果在某次操作结束后，集合中存在一个异或和为0的<strong>非空</strong>子集，那么进行这次操作的人输。 </p><p>  如果全部取完，则最后操作的人赢。 </p><p>  筱玛和马爷都聪明绝顶，他们都会按照最优策略进行游戏。 </p><p>  马爷作为筱玛的爷爷，决定让筱玛选择先手还是后手。 </p><p>  筱玛为了稳操胜券，想提前知道对于当前的游戏，是先手必胜还是后手必胜。 </p><p>  筱玛想考考你，让你帮他解决这个问题</p><p>   思路：每一个数都是一个向量，以二进制形式的向量，此时数的异或就是向量的加法(不带进位)，就是求所有向量不相关的集合，其实就是矩阵的秩。然后就要求所有的向量组矩阵的秩，如果秩为偶数，后手赢，否则先手赢。可以通过高斯消元或者线性基，这里是线性基的方法</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line">ll n,m,a[<span class="number">100</span>];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">ran</span><span class="params">(ll x)</span></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(ll i=<span class="number">60</span>; ~i; i--)&#123;</span><br><span class="line">        <span class="keyword">if</span>(x&gt;&gt;i &amp; <span class="number">1</span>)&#123;</span><br><span class="line">            <span class="keyword">if</span>(!a[i])&#123;</span><br><span class="line">                a[i]=x;</span><br><span class="line">                <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> x^=a[i];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%lld"</span>,&amp;n);</span><br><span class="line">    ll ans=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(ll i=<span class="number">1</span>; i&lt;=n; i++)&#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%lld"</span>,&amp;m);</span><br><span class="line">        ans+=ran(m);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(ans&amp;<span class="number">1</span>) <span class="built_in">puts</span>(<span class="string">"First"</span>);</span><br><span class="line">    <span class="keyword">else</span> <span class="built_in">puts</span>(<span class="string">"Second"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;del&gt;说好的人均3.5道题呢？骗我们打代码&lt;/del&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="牛客" scheme="http://yoursite.com/categories/%E7%89%9B%E5%AE%A2/"/>
    
    
  </entry>
  
</feed>
