<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Hope_Y&#39;s blog</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2019-08-05T02:21:24.719Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>Hope_Y</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>BSGS</title>
    <link href="http://yoursite.com/2019/08/05/BSGS/"/>
    <id>http://yoursite.com/2019/08/05/BSGS/</id>
    <published>2019-08-05T02:21:22.293Z</published>
    <updated>2019-08-05T02:21:24.719Z</updated>
    
    <content type="html"><![CDATA[<p>用于解决$y^x \ =\ z\ (mod\ p)$，给定$y,z,p \geq 1$，求解$x$。</p><a id="more"></a><p>当$gcd(y,p)=1$，在这种情况下，有可能给定$p$为质数。设$x=a<em>m-b, m=\lceil \sqrt p \rceil, a\in[0,m+1), b\in[0,m)$，那么原式变成$y^{a</em>m}=z<em>y^{b}$，先枚举$b$，计算$z</em>y^{b}(mod\ p)$，存到$map$中，再枚举$a$就好了。</p><h2 id="SDOI2011"><a href="#SDOI2011" class="headerlink" title="SDOI2011"></a><a href="https://www.lydsy.com/JudgeOnline/problem.php?id=2242" target="_blank" rel="noopener">SDOI2011</a></h2><p>题意：给定$y,z,p$，计算1. $y^z (mod \ p)$；2. 满足$x*y=z(mod \ p)$的最小非负整数的$x$；3.满足$y^x \ =\ z\ (mod\ p)$的最小非负整数的$x$。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line">ll y,z,p;</span><br><span class="line"><span class="function">ll <span class="title">qpow</span><span class="params">(ll x,ll n,ll mod)</span></span>&#123;</span><br><span class="line">    ll res=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span>(n)&#123;</span><br><span class="line">        <span class="keyword">if</span>(n&amp;<span class="number">1</span>) res=res*x%mod;</span><br><span class="line">        x=x*x%mod;</span><br><span class="line">        n&gt;&gt;=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">ll <span class="title">inv</span><span class="params">(ll x,ll mod)</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> qpow(x,mod<span class="number">-2</span>,mod);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">nnot</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">puts</span>(<span class="string">"Orz, I cannot find x!"</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">BSGS</span><span class="params">(ll x,ll y)</span></span>&#123;</span><br><span class="line">    <span class="built_in">map</span>&lt;ll,ll&gt;pw;</span><br><span class="line">    <span class="keyword">if</span>(y == <span class="number">1</span>)&#123;</span><br><span class="line">        <span class="built_in">puts</span>(<span class="string">"0"</span>);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    ll ans = <span class="number">-1</span>, m = <span class="built_in">sqrt</span>(p) + <span class="number">1</span>, xx, s = y;</span><br><span class="line">    <span class="keyword">for</span>(ll i = <span class="number">0</span>; i &lt; m; i++)&#123;</span><br><span class="line">        pw[s] = i;</span><br><span class="line">        s = s * x % p;</span><br><span class="line">    &#125;</span><br><span class="line">    xx = qpow(x, m, p), s = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(ll i = <span class="number">1</span>; i &lt;= m + <span class="number">1</span>; ++i)&#123;</span><br><span class="line">        s = s * xx % p;</span><br><span class="line">        <span class="keyword">if</span>(pw.count(s))&#123;</span><br><span class="line">            ans = i * m - pw[s];</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(ans &lt; <span class="number">0</span>) nnot();</span><br><span class="line">    <span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">"%lld\n"</span>, ans);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    ll t,op;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%lld %lld"</span>,&amp;t,&amp;op);</span><br><span class="line">    <span class="keyword">while</span>(t--)&#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%lld %lld %lld"</span>,&amp;y,&amp;z,&amp;p);</span><br><span class="line">        <span class="keyword">if</span>(op == <span class="number">1</span>) <span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,qpow(y,z,p));</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(op == <span class="number">2</span>)&#123;</span><br><span class="line">            ll tm=y%p;</span><br><span class="line">            <span class="keyword">if</span>(tm==<span class="number">0</span> &amp;&amp; z%p!=<span class="number">0</span>)&#123;</span><br><span class="line">                nnot();</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,z*inv(y,p)%p);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">if</span>(y%p) BSGS(y,z);</span><br><span class="line">            <span class="keyword">else</span> nnot();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><p>当$gcd(y,p) \neq 1$时，就要用到$exgcd$理论。</p><p>将原式写成$y<em>y^{x-1}+k</em>p=z,k \in Z$，根据$exgcd$，当$d=gcd(y,p)$不是$z$的约数就不会有解，有：$$\frac{y}{d}<em>y^{x-1}+k</em>\frac{p}{d}=\frac{z}{d}$$</p><p>一直递归直到$d=1$，设之间的所有的$d$的乘积为$g$，递归$c$次，令$x’=x-c\ ,\ p’=\frac{p}{g}\ ,\ z=\frac{z}{g}$，$y^{x’}*\frac{y^c}{g}=z’(mod \ p’)$</p><p>然后在用BSGS求解。</p><h2 id="SPOJMOD-Power-Modulo-Inverted"><a href="#SPOJMOD-Power-Modulo-Inverted" class="headerlink" title="SPOJMOD Power Modulo Inverted"></a><a href="http://www.spoj.com/problems/MOD/" target="_blank" rel="noopener">SPOJMOD Power Modulo Inverted</a></h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> GCC optimize(2)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line">ll y,z,p;</span><br><span class="line"><span class="function">ll <span class="title">qpow</span><span class="params">(ll x,ll n,ll mod)</span></span>&#123;</span><br><span class="line">    ll res=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span>(n)&#123;</span><br><span class="line">        <span class="keyword">if</span>(n&amp;<span class="number">1</span>) res=res*x%mod;</span><br><span class="line">        x=x*x%mod;</span><br><span class="line">        n&gt;&gt;=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">ll <span class="title">gcd</span><span class="params">(ll x,ll y)</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> (y==<span class="number">0</span>)?x:gcd(y,x%y);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">ll <span class="title">exBSGS</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(z==<span class="number">1</span>) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    <span class="built_in">map</span>&lt;ll,ll&gt;pw;</span><br><span class="line">    ll cnt=<span class="number">0</span>,mul=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(ll d=gcd(y,p); d!=<span class="number">1</span>; d=gcd(y,p))&#123;</span><br><span class="line">        <span class="keyword">if</span>(z%d) <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">        ++cnt,z/=d,p/=d,mul=(mul*y/d%p);</span><br><span class="line">        <span class="keyword">if</span>(z == mul) <span class="keyword">return</span> cnt;</span><br><span class="line">    &#125;</span><br><span class="line">    ll s=z,m=<span class="built_in">sqrt</span>(p)+<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(ll i=<span class="number">0</span>; i&lt;m; i++)&#123;</span><br><span class="line">        pw[s]=i;</span><br><span class="line">        s=s*y%p;</span><br><span class="line">    &#125;</span><br><span class="line">    ll x=qpow(y,m,p);</span><br><span class="line">    s=mul;</span><br><span class="line">    <span class="keyword">for</span>(ll i=<span class="number">1</span>; i&lt;=m; i++)&#123;</span><br><span class="line">        s=s*x%p;</span><br><span class="line">        <span class="keyword">if</span>(pw.count(s)) <span class="keyword">return</span> i*m-pw[s]+cnt;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">scanf</span>(<span class="string">"%lld %lld %lld"</span>,&amp;y,&amp;p,&amp;z)&amp;&amp;(y||z||p))&#123;</span><br><span class="line">        y%=p;</span><br><span class="line">        z%=p;</span><br><span class="line">        ll ans=exBSGS();</span><br><span class="line">        <span class="keyword">if</span>(ans &lt; <span class="number">0</span>) <span class="built_in">puts</span>(<span class="string">"No Solution"</span>);</span><br><span class="line">        <span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,ans);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;用于解决$y^x \ =\ z\ (mod\ p)$，给定$y,z,p \geq 1$，求解$x$。&lt;/p&gt;
    
    </summary>
    
      <category term="数学" scheme="http://yoursite.com/categories/%E6%95%B0%E5%AD%A6/"/>
    
    
  </entry>
  
  <entry>
    <title>kmp</title>
    <link href="http://yoursite.com/2019/07/19/kmp/"/>
    <id>http://yoursite.com/2019/07/19/kmp/</id>
    <published>2019-07-19T15:28:41.647Z</published>
    <updated>2019-07-19T15:31:03.846Z</updated>
    
    <content type="html"><![CDATA[<p>之前写过kmp的算法，lwl给了我一个模板，现在再写就出问题了，<del>出来挨打！</del>，不过还好发现的及时。</p><a id="more"></a><h2 id="Extend-to-Palindrome"><a href="#Extend-to-Palindrome" class="headerlink" title="Extend to Palindrome"></a><a href="https://www.spoj.com/problems/EPALIN/" target="_blank" rel="noopener">Extend to Palindrome</a></h2><p>题意：就是在一个字符串最后添加最少的字符，使得字符串回文。</p><p>思路：求一个正序的串，和一个逆序的串，求其中的正向的后缀和逆向的前缀相等的长度最大值，最后先输出正向的串，在输出逆序中最大长度之后的字符。</p><p>比如说 正序：abaa，逆序：aaba ，那么最长的长度就是2，为aa，然后就输出abaa ba就好了，可以kmp或者hash求最长的长度。</p><p>KMP法（模板拿稳了）：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn=<span class="number">1e5</span>+<span class="number">10</span>;</span><br><span class="line"><span class="keyword">char</span> s[maxn];</span><br><span class="line"><span class="keyword">char</span> t[maxn];</span><br><span class="line"><span class="keyword">int</span> nex[maxn],len;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">cal</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i,j;</span><br><span class="line">    nex[<span class="number">0</span>]=j=<span class="number">-1</span>;</span><br><span class="line">    i=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(i&lt;len)&#123;</span><br><span class="line">        <span class="keyword">while</span>(j!=<span class="number">-1</span> &amp;&amp; s[j]!=s[i]) j=nex[j];</span><br><span class="line">        nex[++i]=++j;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">kmp</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i=<span class="number">0</span>,j=<span class="number">0</span>;</span><br><span class="line">    <span class="comment">//原串t，目的串s</span></span><br><span class="line">    <span class="keyword">while</span>(i&lt;len&amp;&amp;j&lt;len)&#123;</span><br><span class="line">        <span class="keyword">while</span>(j!=<span class="number">-1</span> &amp;&amp; t[i]!=s[j]) j=nex[j];</span><br><span class="line">        i++;</span><br><span class="line">        j++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> j;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="comment">//freopen("in.txt","r",stdin);</span></span><br><span class="line">    <span class="comment">//freopen("out.txt","w",stdout);</span></span><br><span class="line">    <span class="keyword">while</span>(~<span class="built_in">scanf</span>(<span class="string">"%s"</span>,t))&#123;</span><br><span class="line">        len=<span class="built_in">strlen</span>(t);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;len; i++)&#123;</span><br><span class="line">            s[i]=t[len-i<span class="number">-1</span>];</span><br><span class="line">        &#125;</span><br><span class="line">        s[len]=<span class="string">'\0'</span>;</span><br><span class="line">        cal();</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%s"</span>,t);</span><br><span class="line">        <span class="keyword">int</span> tt=kmp();</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=tt; i&lt;len; i++) <span class="built_in">putchar</span>(s[i]);</span><br><span class="line">        <span class="built_in">puts</span>(<span class="string">""</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>hash留坑吧……</p><p>后记：如果是求在任意位置插入任意字符，求插入的最少字符的个数，做法就是区间dp。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;之前写过kmp的算法，lwl给了我一个模板，现在再写就出问题了，&lt;del&gt;出来挨打！&lt;/del&gt;，不过还好发现的及时。&lt;/p&gt;
    
    </summary>
    
      <category term="数据结构" scheme="http://yoursite.com/categories/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
    
  </entry>
  
  <entry>
    <title>Codeforces Round</title>
    <link href="http://yoursite.com/2019/07/18/cf190717/"/>
    <id>http://yoursite.com/2019/07/18/cf190717/</id>
    <published>2019-07-18T02:57:16.330Z</published>
    <updated>2019-07-18T03:04:16.506Z</updated>
    
    <content type="html"><![CDATA[<p><del>差点掉分</del>，D2有思路最后bug多多。然后A题让我们知道了自己英语是白学了</p><a id="more"></a><h2 id="A-Drinks-Choosing"><a href="#A-Drinks-Choosing" class="headerlink" title="A.Drinks Choosing"></a><a href="https://codeforces.com/contest/1195/problem/A" target="_blank" rel="noopener">A.Drinks Choosing</a></h2><p>题意：#%…￥%￥%…￥%……&amp;………&amp;%#￥%#￥…#^#**&amp;#@$#()</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">int</span> n,k;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn=<span class="number">1100</span>;</span><br><span class="line"><span class="keyword">int</span> a[maxn];</span><br><span class="line"><span class="keyword">int</span> vis[maxn];</span><br><span class="line"><span class="keyword">int</span> b[maxn];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d %d"</span>,&amp;n,&amp;k);</span><br><span class="line">    <span class="comment">//memset(vis,2,sizeof vis);</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;n; i++)&#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;a[i]);</span><br><span class="line">        b[a[i]]++;</span><br><span class="line">    &#125;</span><br><span class="line">    sort(b+<span class="number">1</span>,b+<span class="number">1</span>+k);</span><br><span class="line">    <span class="keyword">int</span> all=n/<span class="number">2</span>+n%<span class="number">2</span>;</span><br><span class="line">    <span class="keyword">int</span> ans=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=k; i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(b[i]%<span class="number">2</span>==<span class="number">0</span> &amp;&amp; b[i]!=<span class="number">0</span>)&#123;</span><br><span class="line">            ans+=b[i];</span><br><span class="line">            all-=(b[i]/<span class="number">2</span>);</span><br><span class="line">            b[i]=<span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(b[i]%<span class="number">2</span>==<span class="number">1</span> &amp;&amp; b[i]&gt;<span class="number">1</span>)&#123;</span><br><span class="line">            ans+=(b[i]<span class="number">-1</span>);</span><br><span class="line">            all-=(b[i]/<span class="number">2</span>);</span><br><span class="line">            b[i]=<span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,ans+all);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="B-Sport-Mafia"><a href="#B-Sport-Mafia" class="headerlink" title="B.Sport Mafia"></a><a href="https://codeforces.com/contest/1195/problem/B" target="_blank" rel="noopener">B.Sport Mafia</a></h2><p>推公式，答案就是: $n- \frac { { \sqrt {8 * k + 8 * n + 9 }  } - 3 } {2}$</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    ll n,k;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%lld %lld"</span>,&amp;n,&amp;k);</span><br><span class="line">    ll tmp=n-(<span class="number">-3</span>+(ll)<span class="built_in">sqrt</span>(<span class="number">9</span>+<span class="number">8</span>*n+<span class="number">8</span>*k))/<span class="number">2</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,tmp);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="C-Basketball-Exercise"><a href="#C-Basketball-Exercise" class="headerlink" title="C.Basketball Exercise"></a><a href="https://codeforces.com/contest/1195/problem/C" target="_blank" rel="noopener">C.Basketball Exercise</a></h2><p>dp</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> ll maxn=<span class="number">1e5</span>+<span class="number">10</span>;</span><br><span class="line">ll a[maxn],b[maxn];</span><br><span class="line">ll n;</span><br><span class="line">ll dp[maxn][<span class="number">3</span>];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%lld"</span>,&amp;n);</span><br><span class="line">    <span class="keyword">for</span>(ll i=<span class="number">0</span>; i&lt;n; i++)&#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%lld"</span>,&amp;a[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(ll i=<span class="number">0</span>; i&lt;n; i++)&#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%lld"</span>,&amp;b[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    dp[<span class="number">0</span>][<span class="number">0</span>]=a[<span class="number">0</span>];</span><br><span class="line">    dp[<span class="number">0</span>][<span class="number">1</span>]=b[<span class="number">0</span>];</span><br><span class="line">    dp[<span class="number">1</span>][<span class="number">0</span>]=a[<span class="number">1</span>]+b[<span class="number">0</span>];</span><br><span class="line">    dp[<span class="number">1</span>][<span class="number">1</span>]=a[<span class="number">0</span>]+b[<span class="number">1</span>];</span><br><span class="line">    <span class="keyword">for</span>(ll i=<span class="number">2</span>; i&lt;n; i++)&#123;</span><br><span class="line">        dp[i][<span class="number">0</span>]=max(dp[i<span class="number">-1</span>][<span class="number">1</span>],max(dp[i<span class="number">-2</span>][<span class="number">0</span>],dp[i<span class="number">-2</span>][<span class="number">1</span>]))+a[i];</span><br><span class="line">        dp[i][<span class="number">1</span>]=max(dp[i<span class="number">-1</span>][<span class="number">0</span>],max(dp[i<span class="number">-2</span>][<span class="number">1</span>],dp[i<span class="number">-2</span>][<span class="number">0</span>]))+b[i];</span><br><span class="line"> </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,max(dp[n<span class="number">-1</span>][<span class="number">0</span>],dp[n<span class="number">-1</span>][<span class="number">1</span>]));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="D1-Submarine-in-the-Rybinsk-Sea"><a href="#D1-Submarine-in-the-Rybinsk-Sea" class="headerlink" title="D1.Submarine in the Rybinsk Sea"></a><a href="https://codeforces.com/contest/1195/problem/D1" target="_blank" rel="noopener">D1.Submarine in the Rybinsk Sea</a></h2><p>求贡献</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> ll mod=<span class="number">998244353</span>;</span><br><span class="line">ll n;</span><br><span class="line">ll a[<span class="number">100010</span>];</span><br><span class="line"><span class="keyword">char</span> s[<span class="number">20</span>];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%lld"</span>,&amp;n);</span><br><span class="line">    ll ans=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(ll i=<span class="number">0</span>; i&lt;n; i++)&#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%s"</span>,s);</span><br><span class="line">        ll len=<span class="built_in">strlen</span>(s);</span><br><span class="line">        ll tmp=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(ll i=<span class="number">0</span>; i&lt;len; i++)&#123;</span><br><span class="line">            tmp=(tmp+(s[i]-<span class="string">'0'</span>))%mod;</span><br><span class="line">            <span class="keyword">if</span>(i&lt;len<span class="number">-1</span>) tmp=(tmp*<span class="number">100</span>)%mod;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//printf("%lld %lld\n",tmp,tmp*10);</span></span><br><span class="line">        ans=(ans+tmp)%mod;</span><br><span class="line">        ans=(ans+tmp*<span class="number">10</span>)%mod;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,ans*n%mod);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="D2-Submarine-in-the-Rybinsk-Sea"><a href="#D2-Submarine-in-the-Rybinsk-Sea" class="headerlink" title="D2.Submarine in the Rybinsk Sea"></a><a href="https://codeforces.com/contest/1195/problem/D2" target="_blank" rel="noopener">D2.Submarine in the Rybinsk Sea</a></h2><p>与D1不同的是，每个数的长度不一样。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> ll mod=<span class="number">998244353</span>;</span><br><span class="line">ll n;</span><br><span class="line"><span class="keyword">char</span> s[<span class="number">100010</span>][<span class="number">20</span>];</span><br><span class="line">ll vis[<span class="number">20</span>];</span><br><span class="line">ll ba[<span class="number">25</span>];</span><br><span class="line">ll sum[<span class="number">20</span>];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    ba[<span class="number">0</span>]=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(ll i=<span class="number">1</span>; i&lt;<span class="number">25</span>; i++)&#123;</span><br><span class="line">        ba[i]=ba[i<span class="number">-1</span>]*<span class="number">10</span>%mod;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%lld"</span>,&amp;n);</span><br><span class="line">    ll ans=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(ll i=<span class="number">0</span>; i&lt;n; i++)&#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%s"</span>,s[i]);</span><br><span class="line">        ll len=<span class="built_in">strlen</span>(s[i]);</span><br><span class="line">        vis[len]++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(ll i=<span class="number">18</span>; i&gt;<span class="number">0</span>; i--)&#123;</span><br><span class="line">        sum[i]=sum[i+<span class="number">1</span>]+vis[i];</span><br><span class="line">        <span class="comment">//printf("%lld %lld %lld\n",i,sum[i],vis[2]);</span></span><br><span class="line">    &#125;</span><br><span class="line">    ll cnt=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(ll ii=<span class="number">0</span>; ii&lt;n; ii++)&#123;</span><br><span class="line">        ll c=<span class="built_in">strlen</span>(s[ii]);</span><br><span class="line">        <span class="keyword">for</span>(ll i=c; i&gt;=<span class="number">0</span>; i--)&#123;</span><br><span class="line">            <span class="keyword">if</span>(vis[i]==<span class="number">0</span>) <span class="keyword">continue</span>;</span><br><span class="line">            ll tmp=<span class="number">0</span>;</span><br><span class="line">            ll f=<span class="number">-1</span>;</span><br><span class="line">            <span class="comment">//puts(s[ii]);</span></span><br><span class="line">            <span class="keyword">for</span>(ll k=<span class="number">0</span>; k&lt;c-i; k++)&#123;</span><br><span class="line">                tmp=(tmp*<span class="number">10</span>)%mod;</span><br><span class="line">                tmp=(tmp+s[ii][k]-<span class="string">'0'</span>)%mod;</span><br><span class="line">                f=k;</span><br><span class="line">            &#125;</span><br><span class="line">            tmp=(tmp*ba[(i)*<span class="number">2</span>])%mod*(vis[i]*<span class="number">2</span>)%mod;</span><br><span class="line">            <span class="comment">//printf("%lld &amp;&amp; %lld %lld %lld\n",tmp,f,ba[i*2],c);</span></span><br><span class="line">            f++;</span><br><span class="line">            ll tmpp=<span class="number">0</span>;</span><br><span class="line">            <span class="keyword">for</span>(ll k=f; k&lt;c; k++)&#123;</span><br><span class="line">                tmpp=(tmpp+(s[ii][k]-<span class="string">'0'</span>))%mod;</span><br><span class="line">                <span class="comment">//printf("%c %lld\n",s[ii][k],tmpp);</span></span><br><span class="line">                <span class="keyword">if</span>(k&lt;c<span class="number">-1</span>) tmpp=(tmpp*<span class="number">100</span>)%mod;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">//printf("%lld %lld %lld\n",tmpp,tmpp*10,sum[c]);</span></span><br><span class="line">            <span class="keyword">if</span>(tmp==<span class="number">0</span>) tmp=(tmp+((tmpp+tmpp*<span class="number">10</span>)*sum[c]%mod))%mod;</span><br><span class="line">            <span class="keyword">else</span> tmp=(tmp+((tmpp+tmpp*<span class="number">10</span>)*vis[i]%mod))%mod;</span><br><span class="line">            ans=(ans+tmp)%mod;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//printf("%lld %lld\n",tmp,tmp*10);</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,ans%mod);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;del&gt;差点掉分&lt;/del&gt;，D2有思路最后bug多多。然后A题让我们知道了自己英语是白学了&lt;/p&gt;
    
    </summary>
    
      <category term="codeforces" scheme="http://yoursite.com/categories/codeforces/"/>
    
    
  </entry>
  
  <entry>
    <title>树链剖分</title>
    <link href="http://yoursite.com/2019/07/17/%E6%A0%91%E9%93%BE%E5%89%96%E5%88%86/"/>
    <id>http://yoursite.com/2019/07/17/树链剖分/</id>
    <published>2019-07-17T05:07:39.931Z</published>
    <updated>2019-07-17T05:07:40.029Z</updated>
    
    <content type="html"><![CDATA[<p>最为经典的树链剖分就是对于树删一条链进行同时加或者减操作，然后每次询问。</p><a id="more"></a><h2 id="洛谷P3348"><a href="#洛谷P3348" class="headerlink" title="洛谷P3348"></a><a href="https://www.luogu.org/problemnew/show/P3384" target="_blank" rel="noopener">洛谷P3348</a></h2><p>题意：最为经典的模板题。</p><p>已知一棵包含$N$个结点的树（连通且无环），每个节点上包含一个数值，需要支持以下操作：</p><p>操作1： 格式： $1$ $x$ $y$ $z$ 表示将树从$x$到$y$结点最短路径上所有节点的值都加上$z$</p><p>操作2： 格式： $2$ $x$ $y$ 表示求树从$x$到$y$结点最短路径上所有节点的值之和</p><p>操作3： 格式： $3$ $x$ $z$ 表示将以$x$为根节点的子树内所有节点值都加上$z$</p><p>操作4： 格式： $4$ $x$ 表示求以$x$为根节点的子树内所有节点值之和</p><p>思路：模板接好（树链剖分+线段树）。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> ll maxn=<span class="number">1e5</span>+<span class="number">10</span>;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">edge</span>&#123;</span></span><br><span class="line">    ll next,to;</span><br><span class="line">&#125;e[maxn&lt;&lt;<span class="number">1</span>];</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span>&#123;</span></span><br><span class="line">    ll l,r,ls,rs,sum,lazy;</span><br><span class="line">&#125;a[maxn&lt;&lt;<span class="number">1</span>];</span><br><span class="line">ll n,m,r,rt,mod,v[maxn],head[maxn],cnt,f[maxn],d[maxn],son[maxn],size[maxn],top[maxn],id[maxn],rk[maxn];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(ll x,ll y)</span></span>&#123;</span><br><span class="line">    e[++cnt].next=head[x];</span><br><span class="line">    e[cnt].to=y;</span><br><span class="line">    head[x]=cnt;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs1</span><span class="params">(ll x)</span></span>&#123;</span><br><span class="line">    size[x]=<span class="number">1</span>,d[x]=d[f[x]]+<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(ll v,i=head[x];i;i=e[i].next)</span><br><span class="line">        <span class="keyword">if</span>((v=e[i].to)!=f[x])&#123;</span><br><span class="line">            f[v]=x,dfs1(v),size[x]+=size[v];</span><br><span class="line">            <span class="keyword">if</span>(size[son[x]]&lt;size[v])</span><br><span class="line">                son[x]=v;</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs2</span><span class="params">(ll x,ll tp)</span></span>&#123;</span><br><span class="line">    top[x]=tp,id[x]=++cnt,rk[cnt]=x;</span><br><span class="line">    <span class="keyword">if</span>(son[x])</span><br><span class="line">        dfs2(son[x],tp);</span><br><span class="line">    <span class="keyword">for</span>(ll v,i=head[x];i;i=e[i].next)</span><br><span class="line">        <span class="keyword">if</span>((v=e[i].to)!=f[x]&amp;&amp;v!=son[x])</span><br><span class="line">            dfs2(v,v);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">pushup</span><span class="params">(ll x)</span></span>&#123;</span><br><span class="line">    a[x].sum=(a[a[x].ls].sum+a[a[x].rs].sum)%mod;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">build</span><span class="params">(ll l,ll r,ll x)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(l==r)&#123;</span><br><span class="line">        a[x].sum=v[rk[l]],a[x].l=a[x].r=l;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    ll mid=(l+r)&gt;&gt;<span class="number">1</span>;</span><br><span class="line">    a[x].ls=cnt++,a[x].rs=cnt++;</span><br><span class="line">    build(l,mid,a[x].ls),build(mid+<span class="number">1</span>,r,a[x].rs);</span><br><span class="line">    a[x].l=a[a[x].ls].l,a[x].r=a[a[x].rs].r;</span><br><span class="line">    pushup(x);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> ll <span class="title">len</span><span class="params">(ll x)</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> a[x].r-a[x].l+<span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">pushdown</span><span class="params">(ll x)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(a[x].lazy)&#123;</span><br><span class="line">        ll ls=a[x].ls,rs=a[x].rs,lz=a[x].lazy;</span><br><span class="line">        (a[ls].lazy+=lz)%=mod,(a[rs].lazy+=lz)%=mod;</span><br><span class="line">        (a[ls].sum+=lz*len(ls))%=mod,(a[rs].sum+=lz*len(rs))%=mod;</span><br><span class="line">        a[x].lazy=<span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">update</span><span class="params">(ll l,ll r,ll c,ll x)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(a[x].l&gt;=l&amp;&amp;a[x].r&lt;=r)&#123;</span><br><span class="line">        (a[x].lazy+=c)%=mod,(a[x].sum+=len(x)*c)%=mod;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    pushdown(x);</span><br><span class="line">    ll mid=(a[x].l+a[x].r)&gt;&gt;<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">if</span>(mid&gt;=l)</span><br><span class="line">        update(l,r,c,a[x].ls);</span><br><span class="line">    <span class="keyword">if</span>(mid&lt;r)</span><br><span class="line">        update(l,r,c,a[x].rs);</span><br><span class="line">    pushup(x);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">ll <span class="title">query</span><span class="params">(ll l,ll r,ll x)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(a[x].l&gt;=l&amp;&amp;a[x].r&lt;=r)</span><br><span class="line">        <span class="keyword">return</span> a[x].sum;</span><br><span class="line">    pushdown(x);</span><br><span class="line">    ll mid=(a[x].l+a[x].r)&gt;&gt;<span class="number">1</span>,tot=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span>(mid&gt;=l)</span><br><span class="line">        tot+=query(l,r,a[x].ls);</span><br><span class="line">    <span class="keyword">if</span>(mid&lt;r)</span><br><span class="line">        tot+=query(l,r,a[x].rs);</span><br><span class="line">    <span class="keyword">return</span> tot%mod;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> ll <span class="title">sum</span><span class="params">(ll x,ll y)</span></span>&#123;</span><br><span class="line">    ll ret=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(top[x]!=top[y])&#123;</span><br><span class="line">        <span class="keyword">if</span>(d[top[x]]&lt;d[top[y]])</span><br><span class="line">            swap(x,y);</span><br><span class="line">        (ret+=query(id[top[x]],id[x],rt))%=mod;</span><br><span class="line">        x=f[top[x]];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(id[x]&gt;id[y])</span><br><span class="line">        swap(x,y);</span><br><span class="line">    <span class="keyword">return</span> (ret+query(id[x],id[y],rt))%mod;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">updates</span><span class="params">(ll x,ll y,ll c)</span></span>&#123;</span><br><span class="line">    <span class="keyword">while</span>(top[x]!=top[y])&#123;</span><br><span class="line">        <span class="keyword">if</span>(d[top[x]]&lt;d[top[y]])</span><br><span class="line">            swap(x,y);</span><br><span class="line">        update(id[top[x]],id[x],c,rt);</span><br><span class="line">        x=f[top[x]];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(id[x]&gt;id[y])</span><br><span class="line">        swap(x,y);</span><br><span class="line">    update(id[x],id[y],c,rt);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%lld %lld %lld %lld"</span>,&amp;n,&amp;m,&amp;r,&amp;mod);</span><br><span class="line">    <span class="keyword">for</span>(ll i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%lld"</span>,&amp;v[i]);</span><br><span class="line">    <span class="keyword">for</span>(ll x,y,i=<span class="number">1</span>;i&lt;n;i++)&#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%lld %lld"</span>,&amp;x,&amp;y);</span><br><span class="line">        add(x,y),add(y,x);</span><br><span class="line">    &#125;</span><br><span class="line">    cnt=<span class="number">0</span>,dfs1(r),dfs2(r,r);</span><br><span class="line">    cnt=<span class="number">0</span>,build(<span class="number">1</span>,n,rt=cnt++);</span><br><span class="line">    <span class="keyword">for</span>(ll op,x,y,k,i=<span class="number">1</span>;i&lt;=m;i++)&#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%lld"</span>,&amp;op);</span><br><span class="line">        <span class="keyword">if</span>(op==<span class="number">1</span>)&#123;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">"%lld %lld %lld"</span>,&amp;x,&amp;y,&amp;k);</span><br><span class="line">            updates(x,y,k);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(op==<span class="number">2</span>)&#123;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">"%lld %lld"</span>,&amp;x,&amp;y);</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,sum(x,y));</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(op==<span class="number">3</span>)&#123;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">"%lld %lld"</span>,&amp;x,&amp;y);</span><br><span class="line">            update(id[x],id[x]+size[x]<span class="number">-1</span>,y,rt);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">"%lld"</span>,&amp;x);</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,query(id[x],id[x]+size[x]<span class="number">-1</span>,rt));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;最为经典的树链剖分就是对于树删一条链进行同时加或者减操作，然后每次询问。&lt;/p&gt;
    
    </summary>
    
      <category term="数据结构" scheme="http://yoursite.com/categories/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
    
  </entry>
  
  <entry>
    <title>Educational Codeforces Round 68(Rated for Div.2)</title>
    <link href="http://yoursite.com/2019/07/15/cf190714/"/>
    <id>http://yoursite.com/2019/07/15/cf190714/</id>
    <published>2019-07-15T05:50:45.879Z</published>
    <updated>2019-07-15T08:09:46.494Z</updated>
    
    <content type="html"><![CDATA[<p><del>日常掉分</del></p><a id="more"></a><h2 id="A-Remove-a-Progression"><a href="#A-Remove-a-Progression" class="headerlink" title="A.Remove a Progression"></a><a href="https://codeforces.com/contest/1194/problem/A" target="_blank" rel="noopener">A.Remove a Progression</a></h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> t;</span><br><span class="line">    <span class="keyword">int</span> n,x;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;t);</span><br><span class="line">    <span class="keyword">while</span>(t--)&#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d %d"</span>,&amp;n,&amp;x);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,<span class="number">2</span>*x);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="B-Yet-Another-Crosses-Problem"><a href="#B-Yet-Another-Crosses-Problem" class="headerlink" title="B.Yet Another Crosses Problem"></a><a href="https://codeforces.com/contest/1194/problem/B" target="_blank" rel="noopener">B.Yet Another Crosses Problem</a></h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">int</span> n,m;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn=<span class="number">5e4</span>+<span class="number">10</span>;</span><br><span class="line"><span class="built_in">vector</span>&lt;<span class="keyword">char</span>&gt;mp[maxn];</span><br><span class="line"><span class="keyword">char</span> s[maxn];</span><br><span class="line"><span class="keyword">int</span> an[maxn];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> t;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;t);</span><br><span class="line">    <span class="keyword">while</span>(t--)&#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d %d"</span>,&amp;n,&amp;m);</span><br><span class="line">        getchar();</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;n; i++)&#123;</span><br><span class="line">            mp[i].clear();</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">"%s"</span>,&amp;s);</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>; j&lt;m; j++)&#123;</span><br><span class="line">                mp[i].push_back(s[j]);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>; j&lt;m; j++)&#123;</span><br><span class="line">            <span class="keyword">int</span> jj=<span class="number">0</span>;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;n; i++)&#123;</span><br><span class="line">                <span class="keyword">if</span>(mp[i][j] == <span class="string">'*'</span>) jj++;</span><br><span class="line">            &#125;</span><br><span class="line">            an[j]=jj;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">int</span> ans=<span class="number">0x3f3f3f3f</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;n; i++)&#123;</span><br><span class="line">            <span class="keyword">int</span> q=<span class="number">0</span>;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>; j&lt;m; j++)&#123;</span><br><span class="line">                <span class="keyword">if</span>(mp[i][j]==<span class="string">'*'</span>) q++;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">int</span> pp=<span class="number">0</span>,pos=<span class="number">-1</span>;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>; j&lt;m; j++)&#123;</span><br><span class="line">                <span class="keyword">if</span>(pp&lt;an[j])&#123;</span><br><span class="line">                    pos=j;</span><br><span class="line">                    pp=an[j];</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">if</span>(pp==an[j])&#123;</span><br><span class="line">                    <span class="keyword">if</span>(mp[i][j]==<span class="string">'.'</span>) pos=j;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(pos==<span class="number">-1</span>)&#123;</span><br><span class="line">                ans=min(ans,m+n<span class="number">-1</span>-q);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="keyword">if</span>(mp[i][pos]==<span class="string">'*'</span>) ans=min(ans,m+n<span class="number">-1</span>-q-pp+<span class="number">1</span>);</span><br><span class="line">                <span class="keyword">else</span> ans=min(ans,m+n<span class="number">-1</span>-pp-q);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,ans);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="C-From-S-To-T"><a href="#C-From-S-To-T" class="headerlink" title="C.From S To T"></a><a href="https://codeforces.com/contest/1194/problem/C" target="_blank" rel="noopener">C.From S To T</a></h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn=<span class="number">110</span>;</span><br><span class="line"><span class="keyword">char</span> s[maxn],t[maxn],p[maxn];</span><br><span class="line"><span class="keyword">int</span> vis[<span class="number">300</span>];</span><br><span class="line"><span class="keyword">int</span> vi[<span class="number">300</span>];</span><br><span class="line"><span class="keyword">int</span> v[<span class="number">300</span>];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> tt;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;tt);</span><br><span class="line">    <span class="keyword">while</span>(tt--)&#123;</span><br><span class="line">        <span class="built_in">memset</span>(vis,<span class="number">0</span>,<span class="keyword">sizeof</span> vis);</span><br><span class="line">        <span class="built_in">memset</span>(vi,<span class="number">0</span>,<span class="keyword">sizeof</span> vi);</span><br><span class="line">        <span class="built_in">memset</span>(v,<span class="number">0</span>,<span class="keyword">sizeof</span> v);</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%s %s %s"</span>,s,t,p);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;<span class="built_in">strlen</span>(s); i++)&#123;</span><br><span class="line">            vis[s[i]]++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;<span class="built_in">strlen</span>(t); i++)&#123;</span><br><span class="line">            vi[t[i]]++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;<span class="built_in">strlen</span>(p); i++)&#123;</span><br><span class="line">            v[p[i]]++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">bool</span> flag=<span class="literal">true</span>;</span><br><span class="line">        <span class="keyword">int</span> j=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;<span class="built_in">strlen</span>(s); i++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(j==<span class="built_in">strlen</span>(t))&#123;</span><br><span class="line">                flag=<span class="literal">false</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">for</span>(; j&lt;<span class="built_in">strlen</span>(t); j++)&#123;</span><br><span class="line">                <span class="keyword">if</span>(t[j] == s[i])&#123;</span><br><span class="line">                    <span class="comment">//printf("%c\n",t[j]);</span></span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">continue</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(t[j]!=s[i])&#123;</span><br><span class="line">                flag=<span class="literal">false</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> j++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="string">'a'</span>; i&lt;=<span class="string">'z'</span>; i++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(vis[i]==vi[i]) <span class="keyword">continue</span>;</span><br><span class="line">            <span class="keyword">if</span>(vis[i]&lt;vi[i] &amp;&amp; vis[i]+v[i]&gt;=vi[i])&#123;</span><br><span class="line">                v[i]--;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span>&#123;</span><br><span class="line">                flag=<span class="literal">false</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(flag) <span class="built_in">puts</span>(<span class="string">"YES"</span>);</span><br><span class="line">        <span class="keyword">else</span> <span class="built_in">puts</span>(<span class="string">"NO"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="D-1-2-K-Game"><a href="#D-1-2-K-Game" class="headerlink" title="D.1-2-K Game"></a><a href="https://codeforces.com/contest/1194/problem/D" target="_blank" rel="noopener">D.1-2-K Game</a></h2><p>题意：给你一堆石子数量为n，你一次只能拿走1或2或k，最后一个没有石子拿的人输（描述与题目说法不一样，本质是一样的）</p><p>思路：博弈题。</p><p>分情况讨论，首先0是必败态，1，2是必胜态，然后3是必败态…一直到$k$是必胜态。<br>如果$n&lt;k$，那么我只能拿1或2，根据巴什博弈，当$n \equiv 0(mod \ 3)$必败，否则必胜。</p><p>接下来讨论$n \geq k$的情况：</p><p>那如果$k \not\equiv 0(mod \ 3)$的话，那么$k$一定是必胜态，$k-1$和$k+1$必有一个必胜态，假设$k\equiv 1(mod \ 3)$，那么$k-1$就是必败态，$k+1$就是必胜态，然后一直下去和前面巴什博弈规律一样，$k\equiv 2(mod \ 3)$也是如此。</p><p>那么如果$k\equiv 0(mod \ 3)$的话，$k-1$必胜态，$k$必胜态，$k+1$必败，$k+2$，$k+3$必胜 ……$k+k-1$ 和 $k+k$是必胜态 $2 * k+1$必胜(因为可以拿$k$使得变成必败态)，所以规律就出来了，当$n \equiv k (mod \ (k+1))$就是必胜态，否则就判断<code>n%(k+1)%3​</code>的值，如果等于0，就是必败态，否则就是必胜态。</p><p><del>不会sg函数，只能手推</del></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn=<span class="number">110</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> tt;</span><br><span class="line">    <span class="comment">//freopen("in.txt","r",stdin);</span></span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;tt);</span><br><span class="line">    <span class="keyword">int</span> cnt=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span>(tt--)&#123;</span><br><span class="line">        <span class="keyword">int</span> n,k;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d %d"</span>,&amp;n,&amp;k);</span><br><span class="line">        <span class="keyword">if</span>(n == <span class="number">0</span>)&#123;</span><br><span class="line">            <span class="comment">//printf("%d %d %d ",cnt++,n,k);</span></span><br><span class="line">            <span class="built_in">puts</span>(<span class="string">"Bob"</span>);</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(k == n || n&lt;=<span class="number">2</span>)&#123;</span><br><span class="line">            <span class="comment">//printf("%d %d %d ",cnt++,n,k);</span></span><br><span class="line">            <span class="built_in">puts</span>(<span class="string">"Alice"</span>);</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(n&lt;k||k%<span class="number">3</span>!=<span class="number">0</span>)&#123;</span><br><span class="line">            <span class="comment">//printf("%d %d %d ",cnt++,n,k);</span></span><br><span class="line">            <span class="keyword">if</span>(n%<span class="number">3</span>!=<span class="number">0</span>) <span class="built_in">puts</span>(<span class="string">"Alice"</span>);</span><br><span class="line">            <span class="keyword">else</span> <span class="built_in">puts</span>(<span class="string">"Bob"</span>);</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="comment">//printf("%d %d %d ",cnt++,n,k);</span></span><br><span class="line">            <span class="keyword">int</span> tmp=n%(k+<span class="number">1</span>);</span><br><span class="line">            <span class="keyword">if</span>(tmp == k) <span class="built_in">puts</span>(<span class="string">"Alice"</span>);</span><br><span class="line">            <span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="keyword">if</span>(tmp%<span class="number">3</span>==<span class="number">0</span>) <span class="built_in">puts</span>(<span class="string">"Bob"</span>);</span><br><span class="line">                <span class="keyword">else</span> <span class="built_in">puts</span>(<span class="string">"Alice"</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;del&gt;日常掉分&lt;/del&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="codeforces" scheme="http://yoursite.com/categories/codeforces/"/>
    
    
  </entry>
  
  <entry>
    <title>Codeforces Round#573(Div 2)</title>
    <link href="http://yoursite.com/2019/07/13/cf190712/"/>
    <id>http://yoursite.com/2019/07/13/cf190712/</id>
    <published>2019-07-13T02:42:41.852Z</published>
    <updated>2019-07-13T14:05:18.302Z</updated>
    
    <content type="html"><![CDATA[<p>又是深夜肝题，不过这次被疯狂卡题，涨分+0<del>（小幸运）</del></p><a id="more"></a><h2 id="A-Tokitsukaze-and-Enhancement"><a href="#A-Tokitsukaze-and-Enhancement" class="headerlink" title="A.Tokitsukaze and Enhancement"></a><a href="https://codeforces.com/contest/1191/problem/A" target="_blank" rel="noopener">A.Tokitsukaze and Enhancement</a></h2><p>题意：对于一个数，如果对4取余之后，余数为1,3,2,0时，等级为$A,B,C,D$，优先级降低。给你一个数，你能加0，1，2，你能达到的最高等级是什么。</p><p>思路：暴力模拟<del>，还可以找规律直接输出的</del>。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">cal</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(x%<span class="number">4</span>==<span class="number">1</span>) <span class="keyword">return</span> <span class="number">4</span>;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(x%<span class="number">4</span>==<span class="number">3</span>) <span class="keyword">return</span> <span class="number">3</span>;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(x%<span class="number">4</span>==<span class="number">2</span>) <span class="keyword">return</span> <span class="number">2</span>;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</span><br><span class="line">    <span class="keyword">int</span> x1=n,x2=n+<span class="number">1</span>,x3=n+<span class="number">2</span>;</span><br><span class="line">    <span class="keyword">int</span> a1=cal(x1),a2=cal(x2),a3=cal(x3);</span><br><span class="line">    <span class="keyword">if</span>(a1 &gt; a2 &amp;&amp; a1&gt;a3)&#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"0 %c"</span>,<span class="string">'A'</span>+<span class="number">4</span>-a1);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(a2&gt;a1 &amp; a2&gt;a3)&#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"1 %c"</span>,<span class="string">'A'</span>+<span class="number">4</span>-a2);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"2 %c"</span>,<span class="string">'A'</span>+<span class="number">4</span>-a3);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="B-Tokitsukaze-and-Mahjong"><a href="#B-Tokitsukaze-and-Mahjong" class="headerlink" title="B.Tokitsukaze and Mahjong"></a><a href="https://codeforces.com/contest/1191/problem/B" target="_blank" rel="noopener">B.Tokitsukaze and Mahjong</a></h2><p>题意：有三种花色的麻将${m,p,s }$，每个花色有1-9的数字，问你最少还要抓多少个牌就可以凑成同花顺含三个或者三个一模一样的牌。</p><p>思路：模拟题。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">int</span> s[<span class="number">11</span>],m[<span class="number">11</span>],p[<span class="number">11</span>];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">cal</span><span class="params">(<span class="keyword">char</span> c)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(c == <span class="string">'s'</span>) <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(c == <span class="string">'m'</span>) <span class="keyword">return</span> <span class="number">2</span>;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">return</span> <span class="number">3</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">ok</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=<span class="number">9</span>; i++) <span class="keyword">if</span>(s[i]==<span class="number">3</span>) <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=<span class="number">9</span>; i++) <span class="keyword">if</span>(m[i]==<span class="number">3</span>) <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=<span class="number">9</span>; i++) <span class="keyword">if</span>(p[i]==<span class="number">3</span>) <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=<span class="number">7</span>; i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(s[i]==<span class="number">1</span> &amp;&amp; s[i+<span class="number">1</span>]==<span class="number">1</span> &amp;&amp; s[i+<span class="number">2</span>]==<span class="number">1</span>) <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=<span class="number">7</span>; i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(m[i]==<span class="number">1</span> &amp;&amp; m[i+<span class="number">1</span>]==<span class="number">1</span> &amp;&amp; m[i+<span class="number">2</span>]==<span class="number">1</span>) <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=<span class="number">7</span>; i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(p[i]==<span class="number">1</span> &amp;&amp; p[i+<span class="number">1</span>]==<span class="number">1</span> &amp;&amp; p[i+<span class="number">2</span>]==<span class="number">1</span>) <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">okk</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=<span class="number">8</span>; i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(s[i]==<span class="number">1</span> &amp;&amp; s[i+<span class="number">1</span>]==<span class="number">1</span>) <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=<span class="number">8</span>; i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(m[i]==<span class="number">1</span> &amp;&amp; m[i+<span class="number">1</span>]==<span class="number">1</span>) <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=<span class="number">8</span>; i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(p[i]==<span class="number">1</span> &amp;&amp; p[i+<span class="number">1</span>]==<span class="number">1</span>) <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">okkk</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=<span class="number">7</span>; i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(s[i]==<span class="number">1</span> &amp;&amp; s[i+<span class="number">2</span>]==<span class="number">1</span>) <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=<span class="number">7</span>; i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(m[i]==<span class="number">1</span> &amp;&amp; m[i+<span class="number">2</span>]==<span class="number">1</span>) <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=<span class="number">7</span>; i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(p[i]==<span class="number">1</span> &amp;&amp; p[i+<span class="number">2</span>]==<span class="number">1</span>) <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">okkkk</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=<span class="number">9</span>; i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(s[i]==<span class="number">2</span>) <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=<span class="number">9</span>; i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(m[i]==<span class="number">2</span>) <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=<span class="number">9</span>; i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(p[i]==<span class="number">2</span>) <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> c1,c2,c3;</span><br><span class="line">    <span class="keyword">int</span> x,y,z;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d%c %d%c %d%c"</span>,&amp;x,&amp;c1,&amp;y,&amp;c2,&amp;z,&amp;c3);</span><br><span class="line">    <span class="keyword">if</span>(cal(c1)==<span class="number">1</span>) s[x]++;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(cal(c1)==<span class="number">2</span>) m[x]++;</span><br><span class="line">    <span class="keyword">else</span> p[x]++;</span><br><span class="line">    <span class="keyword">if</span>(cal(c2)==<span class="number">1</span>) s[y]++;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(cal(c2)==<span class="number">2</span>) m[y]++;</span><br><span class="line">    <span class="keyword">else</span> p[y]++;</span><br><span class="line">    <span class="keyword">if</span>(cal(c3)==<span class="number">1</span>) s[z]++;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(cal(c3)==<span class="number">2</span>) m[z]++;</span><br><span class="line">    <span class="keyword">else</span> p[z]++;</span><br><span class="line">    <span class="keyword">if</span>(ok()) <span class="built_in">puts</span>(<span class="string">"0"</span>);</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(okk() || okkk() || okkkk()) <span class="built_in">puts</span>(<span class="string">"1"</span>);</span><br><span class="line">        <span class="keyword">else</span> <span class="built_in">puts</span>(<span class="string">"2"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="C-Tokitsukaze-and-Discard-Items"><a href="#C-Tokitsukaze-and-Discard-Items" class="headerlink" title="C.Tokitsukaze and Discard Items"></a><a href="https://codeforces.com/contest/1191/problem/C" target="_blank" rel="noopener">C.Tokitsukaze and Discard Items</a></h2><p>题意：很多页面，对于每一个页面进行删除特殊数的操作，每删除一个页面的数就要从后面移动若干个数来填补，问你最终我要进行几次删除操作。</p><p>思路：由于n最多有$10^{18}$，直接在n中查找肯定不行，所以直接对m个特殊的数操作，然后就是一道模拟题。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> ll maxn=<span class="number">1e5</span>+<span class="number">10</span>;</span><br><span class="line">ll n,k,m;</span><br><span class="line">ll a[maxn];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%lld %lld %lld"</span>,&amp;n,&amp;m,&amp;k);</span><br><span class="line">    <span class="keyword">for</span>(ll i=<span class="number">0</span>; i&lt;m; i++)&#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%lld"</span>,&amp;a[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    ll ans=<span class="number">0</span>;</span><br><span class="line">    ll sum=<span class="number">0</span>;</span><br><span class="line">    ll l=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(ll i=<span class="number">0</span>; i&lt;m; i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(a[i]-ans&lt;=k)&#123;</span><br><span class="line">            l++;</span><br><span class="line">            <span class="keyword">if</span>(sum == <span class="number">0</span>) sum++;</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            ans+=l;</span><br><span class="line">            <span class="keyword">if</span>(a[i]-ans&gt;k)&#123;</span><br><span class="line">                ll tmp=(a[i]-ans<span class="number">-1</span>)/k;</span><br><span class="line">                ans+=(tmp*k);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">//printf("%lld\n",ans);</span></span><br><span class="line">            l=<span class="number">1</span>;</span><br><span class="line">            sum++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,sum);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="D-Tokitsukaze-CSL-and-Stone-Game"><a href="#D-Tokitsukaze-CSL-and-Stone-Game" class="headerlink" title="D.Tokitsukaze, CSL and Stone Game"></a><a href="https://codeforces.com/contest/1191/problem/D" target="_blank" rel="noopener">D.Tokitsukaze, CSL and Stone Game</a></h2><p>题意：两个人玩n堆石子游戏，每个人拿一颗，如果轮到一个人没石子拿了或者拿了之后存在两堆石子的数量一样，就输，问你谁赢？</p><p>思路：如果对于第一个人无论怎么取都输了，那么就直接输出第二个人赢，否则就一定会到0,1,2,3,…,n-1状态，那么只要看到这个状态拿石子数量的奇偶性即可。</p><p>对于第一个人的必输状态有如下四种</p><p>$cnt_0 \geq 2 $</p><p>$\exists  x \ ,\ cnt_x \geq 3$</p><p>$\exists {x,y} ,\ cnt_x \geq 2 \ and\ cnt_y \geq 2$</p><p>$\exists{x}, \ cnt_x\geq2 \ and \ cnt_{x-1}\geq1$</p><p>判断即可。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line">ll n;</span><br><span class="line"><span class="built_in">map</span>&lt;ll,ll&gt;ma;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%lld"</span>,&amp;n);</span><br><span class="line">    ll sum=<span class="number">0</span>,x;</span><br><span class="line">    ll aa=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">bool</span> flag=<span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">for</span>(ll i=<span class="number">0</span>; i&lt;n; i++)&#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%lld"</span>,&amp;x);</span><br><span class="line">        ma[x]++;</span><br><span class="line">        <span class="keyword">if</span>(ma[x]==<span class="number">3</span> || (ma[x]&gt;=<span class="number">2</span>&amp;&amp;ma[x<span class="number">-1</span>]&gt;<span class="number">0</span>) || (ma[x]&gt;<span class="number">0</span> &amp;&amp; ma[x+<span class="number">1</span>]&gt;=<span class="number">2</span>)) flag=<span class="literal">true</span>;</span><br><span class="line">        <span class="keyword">if</span>(ma[x]==<span class="number">2</span>) aa++;</span><br><span class="line">        sum+=x;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(flag || aa&gt;=<span class="number">2</span> || ma[<span class="number">0</span>]&gt;=<span class="number">2</span>)&#123;</span><br><span class="line">        <span class="built_in">puts</span>(<span class="string">"cslnb"</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    ll tmp=(<span class="number">0</span>+n<span class="number">-1</span>)*n/<span class="number">2</span>;</span><br><span class="line">    sum-=tmp;</span><br><span class="line">    <span class="keyword">if</span>(sum&amp;<span class="number">1</span>) <span class="built_in">puts</span>(<span class="string">"sjfnb"</span>);</span><br><span class="line">    <span class="keyword">else</span> <span class="built_in">puts</span>(<span class="string">"cslnb"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;又是深夜肝题，不过这次被疯狂卡题，涨分+0&lt;del&gt;（小幸运）&lt;/del&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="codeforces" scheme="http://yoursite.com/categories/codeforces/"/>
    
    
  </entry>
  
  <entry>
    <title>区间dp</title>
    <link href="http://yoursite.com/2019/07/11/%E5%8C%BA%E9%97%B4dp/"/>
    <id>http://yoursite.com/2019/07/11/区间dp/</id>
    <published>2019-07-11T15:03:13.833Z</published>
    <updated>2019-07-13T02:50:06.241Z</updated>
    
    <content type="html"><![CDATA[<p>复习一波区间dp，不然有时候玄学区间dp过题很难受，题目来源：<a href="https://cn.vjudge.net/contest/308873#overview" target="_blank" rel="noopener">[kuangbin带你飞]专题二十二 区间DP</a> 。</p><a id="more"></a><h2 id="A-Halloween-Costumes"><a href="#A-Halloween-Costumes" class="headerlink" title="A-Halloween Costumes"></a><a href="https://cn.vjudge.net/contest/308873#problem/A" target="_blank" rel="noopener">A-Halloween Costumes</a></h2><p>题意：有n个万圣节聚会，每个聚会有要穿一种衣服过去$a_i$，可以将一件衣服套在本来穿的衣服上，如果参加的聚会要穿的这种衣服在我外面套的衣服的里面，有两种选择，要么重新拿一件对应样式的衣服，要么脱下穿在对应样式外的所有衣服；如果里面没有对应样式的衣服，就要重新另拿一件。脱下的衣服不能重新穿回去<del>（有些拗口，建议看题目自行体会，语文水平有限）</del>，问你对于所有聚会，所需最少的衣服数量。</p><p>思路：<code>dp[i][j]</code>代表区间i到j所需最少的数目，那么首先有<code>dp[i][j]=dp[i][j-1]+1</code>，然后在枚举断点的时候，如果枚举的断点k，有<code>a[k]=a[j]</code>的话，那么对于j这一点，我可以脱下<code>dp[k+1][j-1]</code>件衣服，回到k这一个状态点，即<code>dp[i][j]=min(dp[i][j],dp[i][k]+dp[k+1][j-1])</code>，注意条件不是<code>a[i]=a[k]</code>，因为i到k中的状态可能会影响到k到j的状态（比如说在k点，我脱下了一件后面要用到的衣服，就会有矛盾）</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn=<span class="number">110</span>;</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="keyword">int</span> dp[maxn][maxn],a[maxn];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> t,cnt=<span class="number">1</span>;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;t);</span><br><span class="line">    <span class="keyword">while</span>(t--)&#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=n; i++)&#123;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;a[i]);</span><br><span class="line">            dp[i][i]=<span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> len=<span class="number">2</span>; len&lt;=n; len++)&#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=n; i++)&#123;</span><br><span class="line">                <span class="keyword">int</span> j=i+len<span class="number">-1</span>;</span><br><span class="line">                <span class="keyword">if</span>(j&gt;n) <span class="keyword">break</span>;</span><br><span class="line">                dp[i][j]=dp[i][j<span class="number">-1</span>]+<span class="number">1</span>;</span><br><span class="line">                <span class="keyword">for</span>(<span class="keyword">int</span> k=i; k&lt;j; k++)&#123;</span><br><span class="line">                    <span class="keyword">if</span>(a[k] == a[j]) dp[i][j]=min(dp[i][j],dp[i][k]+dp[k+<span class="number">1</span>][j<span class="number">-1</span>]);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"Case %d: %d\n"</span>,cnt++,dp[<span class="number">1</span>][n]);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="B-Brackets"><a href="#B-Brackets" class="headerlink" title="B-Brackets"></a><a href="https://cn.vjudge.net/contest/308873#problem/B" target="_blank" rel="noopener">B-Brackets</a></h2><p>题意：一个括号序列，问你最长的匹配子序列长为多少。</p><p>思路：区间dp，转移方程：如果k和j能匹配，<code>dp[i][j]=max(dp[i][j],dp[i][k],dp[i][k-1]+dp[k+1][j-1]+2)</code>。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn=<span class="number">110</span>;</span><br><span class="line"><span class="keyword">int</span> dp[maxn][maxn];</span><br><span class="line"><span class="keyword">char</span> a[maxn];</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">c</span><span class="params">(<span class="keyword">char</span> c1,<span class="keyword">char</span> c2)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(c1==<span class="string">'('</span> &amp;&amp; c2==<span class="string">')'</span>) <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    <span class="keyword">if</span>(c1==<span class="string">'['</span> &amp;&amp; c2==<span class="string">']'</span>) <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">scanf</span>(<span class="string">"%s"</span>,a+<span class="number">1</span>))&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="built_in">strcmp</span>(a+<span class="number">1</span>,<span class="string">"end"</span>) == <span class="number">0</span>) <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">int</span> n=<span class="built_in">strlen</span>(a+<span class="number">1</span>);</span><br><span class="line">        <span class="built_in">memset</span>(dp,<span class="number">0</span>,<span class="keyword">sizeof</span> dp);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> len=<span class="number">2</span>; len&lt;=n; len++)&#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=n; i++)&#123;</span><br><span class="line">                <span class="keyword">int</span> j=i+len<span class="number">-1</span>;</span><br><span class="line">                <span class="keyword">if</span>(j&gt;n) <span class="keyword">break</span>;</span><br><span class="line">                dp[i][j]=dp[i][j<span class="number">-1</span>];</span><br><span class="line">                <span class="keyword">for</span>(<span class="keyword">int</span> k=i; k&lt;j; k++)&#123;</span><br><span class="line">                    <span class="keyword">if</span>(c(a[k],a[j])) dp[i][j]=max(dp[i][j],dp[i][k<span class="number">-1</span>]+dp[k+<span class="number">1</span>][j<span class="number">-1</span>]+<span class="number">2</span>);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,dp[<span class="number">1</span>][n]);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="F-You-Are-the-One"><a href="#F-You-Are-the-One" class="headerlink" title="F-You Are the One"></a><a href="https://cn.vjudge.net/contest/308873#problem/F" target="_blank" rel="noopener">F-You Are the One</a></h2><p>题意：有$n$个人，每个人有一个愤怒值$a_i$，有一个小房间，根据题目意思这个小房间实现的堆栈的功能，然后对于每个人，如果他前面有$k$个人，他就会有$a_i * k$的愤怒值，小房间通过堆栈原理可以实现将位置微调，$n$个人必须依次进入小房间，问你最小的愤怒值。</p><p>思路：区间dp，而到枚举断点的时候是枚举第i个人第几个出去的，详情看代码。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> inf=<span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn=<span class="number">110</span>;</span><br><span class="line"><span class="keyword">int</span> dp[maxn][maxn];</span><br><span class="line"><span class="keyword">char</span> a[maxn];</span><br><span class="line"><span class="keyword">int</span> sum[maxn];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> t,n,cnt=<span class="number">1</span>;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;t);</span><br><span class="line">    <span class="keyword">while</span>(t--)&#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</span><br><span class="line">        <span class="built_in">memset</span>(dp,<span class="number">0</span>,<span class="keyword">sizeof</span> dp);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=n; i++)&#123;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;a[i]);</span><br><span class="line">            sum[i]=sum[i<span class="number">-1</span>]+a[i];</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j=i+<span class="number">1</span>; j&lt;=n; j++) dp[i][j]=inf;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> len=<span class="number">2</span>; len&lt;=n; len++)&#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=n; i++)&#123;</span><br><span class="line">                <span class="keyword">int</span> j=i+len<span class="number">-1</span>;</span><br><span class="line">                <span class="keyword">if</span>(j&gt;n) <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">for</span>(<span class="keyword">int</span> k=<span class="number">1</span>; k&lt;=len; k++)&#123;</span><br><span class="line">                    dp[i][j]=min(dp[i][j],dp[i+<span class="number">1</span>][k+i<span class="number">-1</span>]+dp[i+k][j]+a[i]*(k<span class="number">-1</span>)+(sum[j]-sum[i+k<span class="number">-1</span>])*k);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"Case #%d: %d\n"</span>,cnt++,dp[<span class="number">1</span>][n]);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="G-String-painter"><a href="#G-String-painter" class="headerlink" title="G-String painter"></a><a href="https://cn.vjudge.net/contest/308873#problem/G" target="_blank" rel="noopener">G-String painter</a></h2><p>题意：两个相同长度的字符串s和t，你可以选择一段区间，将其变成同一个字符，问你将第一个字符串刷成第二串最小需要多少个操作。</p><p>思路：和A题非常相似，先用A题的思路将字符串s处理好，<code>dp[i][j]</code>代表区间i到j变成任意其他的字符所需的最小步数，然后再对t字符串进行处理，也是区间dp的思维，<code>a[i]</code>代表从1到i区间所需的最小操作。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn=<span class="number">110</span>;</span><br><span class="line"><span class="keyword">int</span> dp[maxn][maxn];</span><br><span class="line"><span class="keyword">char</span> s[maxn],t[maxn];</span><br><span class="line"><span class="keyword">int</span> a[maxn];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">while</span>(~<span class="built_in">scanf</span>(<span class="string">"%s %s"</span>,s+<span class="number">1</span>,t+<span class="number">1</span>))&#123;</span><br><span class="line">        <span class="keyword">int</span> n=<span class="built_in">strlen</span>(s+<span class="number">1</span>);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=n; i++) dp[i][i]=<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> len=<span class="number">2</span>; len&lt;=n; len++)&#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=n; i++)&#123;</span><br><span class="line">                <span class="keyword">int</span> j=i+len<span class="number">-1</span>;</span><br><span class="line">                <span class="keyword">if</span>(j&gt;n) <span class="keyword">break</span>;</span><br><span class="line">                dp[i][j]=dp[i][j<span class="number">-1</span>]+<span class="number">1</span>;</span><br><span class="line">                <span class="keyword">for</span>(<span class="keyword">int</span> k=i; k&lt;j; k++)&#123;</span><br><span class="line">                    <span class="keyword">if</span>(t[k] == t[j]) dp[i][j]=min(dp[i][j],dp[i][k]+dp[k+<span class="number">1</span>][j<span class="number">-1</span>]);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=n; i++) a[i]=dp[<span class="number">1</span>][i];</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=n; i++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(s[i] == t[i]) a[i]=a[i<span class="number">-1</span>];</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>; j&lt;i; j++)</span><br><span class="line">                a[i]=min(a[i],a[j]+dp[j+<span class="number">1</span>][i]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,a[n]);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;复习一波区间dp，不然有时候玄学区间dp过题很难受，题目来源：&lt;a href=&quot;https://cn.vjudge.net/contest/308873#overview&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;[kuangbin带你飞]专题二十二 区间DP&lt;/a&gt; 。&lt;/p&gt;
    
    </summary>
    
      <category term="dp" scheme="http://yoursite.com/categories/dp/"/>
    
    
  </entry>
  
  <entry>
    <title>hash</title>
    <link href="http://yoursite.com/2019/07/11/hash/"/>
    <id>http://yoursite.com/2019/07/11/hash/</id>
    <published>2019-07-11T08:44:34.974Z</published>
    <updated>2019-08-04T11:14:37.672Z</updated>
    
    <content type="html"><![CDATA[<p><del>遇到hash的题目默默流下眼泪😥</del></p><a id="more"></a><h2 id="小w的a-b问题"><a href="#小w的a-b问题" class="headerlink" title="小w的a=b问题"></a><a href="https://ac.nowcoder.com/acm/contest/923/B" target="_blank" rel="noopener">小w的a=b问题</a></h2><p>题意：给你两个数组a和b，长度为n和m，问你$\prod_{i=1}^{n}a_i ! $是否等于$\prod_{i=1}^{m}b_i ! $，其中$1 \leq n,m \leq 10^5$,$0 \leq a_i,b_i \leq 10^5$</p><p><del>初次遇到这种题目，我以为是一个推公式的题目，把我整懵了，果然数据结构的知识还是灰常重要啊[点头]</del></p><p>思路：用两个比较大一点的质数作为模系，然后计算每个阶乘$(0 \sim10^5)$所在模系hash值，用两个可以保证不冲突的几率大大减小。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> ll maxn=<span class="number">1e5</span>+<span class="number">10</span>;</span><br><span class="line">ll mod1=<span class="number">1e9</span>+<span class="number">7</span>,mod2=<span class="number">1e9</span>+<span class="number">9</span>;</span><br><span class="line">ll m1[maxn],m2[maxn];</span><br><span class="line">ll t,n,m,a;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">init</span><span class="params">()</span></span>&#123;</span><br><span class="line">    m1[<span class="number">0</span>]=m2[<span class="number">0</span>]=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(ll i=<span class="number">1</span>; i&lt;maxn; i++)&#123;</span><br><span class="line">        m1[i]=m1[i<span class="number">-1</span>]*i%mod1;</span><br><span class="line">        m2[i]=m2[i<span class="number">-1</span>]*i%mod2;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    init();</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%lld"</span>,&amp;t);</span><br><span class="line">    <span class="keyword">while</span>(t--)&#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%lld %lld"</span>,&amp;n,&amp;m);</span><br><span class="line">        ll s1=<span class="number">1</span>,s2=<span class="number">1</span>,s3=<span class="number">1</span>,s4=<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span>(ll i=<span class="number">0</span>; i&lt;n; i++)&#123;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">"%lld"</span>,&amp;a);</span><br><span class="line">            s1=s1*m1[a]%mod1;</span><br><span class="line">            s2=s2*m2[a]%mod2;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(ll i=<span class="number">0</span>; i&lt;m; i++)&#123;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">"%lld"</span>,&amp;a);</span><br><span class="line">            s3=s3*m1[a]%mod1;</span><br><span class="line">            s4=s4*m2[a]%mod2;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(s1==s3 &amp;&amp; s2==s4) <span class="built_in">puts</span>(<span class="string">"equal"</span>);</span><br><span class="line">        <span class="keyword">else</span> <span class="built_in">puts</span>(<span class="string">"unequal"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="字符串hash"><a href="#字符串hash" class="headerlink" title="字符串hash"></a>字符串hash</h2><p>上面是手写hash，而字符串的hash就是一个$O(n)$的预处理。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="keyword">unsigned</span> <span class="keyword">long</span> <span class="keyword">long</span> ull;</span><br><span class="line"><span class="comment">//ull 会溢出取模</span></span><br><span class="line"><span class="keyword">const</span> ull base=<span class="number">233</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn=<span class="number">1e5</span>+<span class="number">10</span>;</span><br><span class="line"><span class="keyword">char</span> s[maxn];</span><br><span class="line">ull hs[maxn],p[maxn];</span><br><span class="line"><span class="function">ull <span class="title">geths</span><span class="params">(<span class="keyword">int</span> l,<span class="keyword">int</span> r)</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> (ull)hs[r]-p[r-l+<span class="number">1</span>]*hs[l<span class="number">-1</span>];</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">init</span><span class="params">()</span></span>&#123;</span><br><span class="line">    p[<span class="number">0</span>]=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;maxn; i++) p[i]=p[i<span class="number">-1</span>]*base;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%s"</span>,s+<span class="number">1</span>);</span><br><span class="line">    <span class="keyword">int</span> len=<span class="built_in">strlen</span>(s+<span class="number">1</span>);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=len; i++)&#123;</span><br><span class="line">        hs[i]=hs[i<span class="number">-1</span>]*base+s[i];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;del&gt;遇到hash的题目默默流下眼泪😥&lt;/del&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="数据结构" scheme="http://yoursite.com/categories/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
    
  </entry>
  
  <entry>
    <title>主席树</title>
    <link href="http://yoursite.com/2019/07/10/%E4%B8%BB%E5%B8%AD%E6%A0%91/"/>
    <id>http://yoursite.com/2019/07/10/主席树/</id>
    <published>2019-07-10T02:56:42.874Z</published>
    <updated>2019-07-11T10:15:36.486Z</updated>
    
    <content type="html"><![CDATA[<p><del>狂补数据结构的知识！！还需慢慢消化🐷</del>主席树的本质就是线段树，叫做可持久化线段树，最为经典的问题就是查询区间第k小的数<del>(说是第k大，<a href="http://acm.hdu.edu.cn/showproblem.php?pid=2665" target="_blank" rel="noopener">HDU2665</a>上面说the  kth big number​)</del>，分静态(不带修改)和动态(带修改)两种。</p><a id="more"></a><h2 id="POJ2104-HDU2665-静态"><a href="#POJ2104-HDU2665-静态" class="headerlink" title="POJ2104||HDU2665(静态)"></a><a href="http://poj.org/problem?id=2104" target="_blank" rel="noopener">POJ2104</a>||<a href="http://acm.hdu.edu.cn/showproblem.php?pid=2665" target="_blank" rel="noopener">HDU2665</a>(静态)</h2><p>题意：主席树入门题，题意是查询区间内第k小，主席树入门模板题，可以参考这篇<a href="https://blog.csdn.net/williamsun0122/article/details/77871278" target="_blank" rel="noopener">blog</a>。<del>POJ上面的数据好像有点弱，</del>。</p><p>每次加入一个新的节点，就要更新线段树，T[i]代表第i颗线段树的根节点，sum[i]表示节点i对应区间的个数，然后根据线段树的性质，左边的子节点总比右边的子节点的数小，那么左边子节点总数就说明左边子节点的最小的数还要小，然后根据左右子节点的个数可以判断出我要找的第k小数在哪个区间内，递归查找就可以了。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn=<span class="number">1e5</span>+<span class="number">10</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxm=maxn*<span class="number">40</span>;</span><br><span class="line"><span class="keyword">int</span> T[maxn],L[maxm],R[maxm],sum[maxm];</span><br><span class="line"><span class="keyword">int</span> sz[maxn],h[maxn]; <span class="comment">//sz为原序列,h为离散化之后的序列</span></span><br><span class="line"><span class="keyword">int</span> n,q,ql,qr,k,tot;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">build</span><span class="params">(<span class="keyword">int</span>&amp; rt,<span class="keyword">int</span> l,<span class="keyword">int</span> r)</span></span>&#123;</span><br><span class="line">    rt=++tot;</span><br><span class="line">    sum[rt]=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span>(l == r) <span class="keyword">return</span> ;</span><br><span class="line">    <span class="keyword">int</span> mid=(l+r)&gt;&gt;<span class="number">1</span>;</span><br><span class="line">    build(L[rt],l,mid);</span><br><span class="line">    build(R[rt],mid+<span class="number">1</span>,r);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">update</span><span class="params">(<span class="keyword">int</span>&amp; rt,<span class="keyword">int</span> l,<span class="keyword">int</span> r,<span class="keyword">int</span> pre,<span class="keyword">int</span> x)</span></span>&#123;</span><br><span class="line">    rt=++tot;</span><br><span class="line">    L[rt]=L[pre];</span><br><span class="line">    R[rt]=R[pre];</span><br><span class="line">    sum[rt]=sum[pre]+<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">if</span>(l == r) <span class="keyword">return</span> ;</span><br><span class="line">    <span class="keyword">int</span> mid=(l+r)&gt;&gt;<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">if</span>(x &lt;= mid) update(L[rt],l,mid,L[pre],x);</span><br><span class="line">    <span class="keyword">else</span> update(R[rt],mid+<span class="number">1</span>,r,R[pre],x);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">query</span><span class="params">(<span class="keyword">int</span> s,<span class="keyword">int</span> e,<span class="keyword">int</span> l,<span class="keyword">int</span> r,<span class="keyword">int</span> k)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(l == r) <span class="keyword">return</span> l;</span><br><span class="line">    <span class="keyword">int</span> mid=(l+r)&gt;&gt;<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">int</span> res=sum[L[e]]-sum[L[s]];</span><br><span class="line">    <span class="keyword">if</span>(k &lt;= res) <span class="keyword">return</span> query(L[s],L[e],l,mid,k);</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">return</span> query(R[s],R[e],mid+<span class="number">1</span>,r,k-res);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d %d"</span>,&amp;n,&amp;q);</span><br><span class="line">    tot=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=n; i++)&#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;sz[i]);</span><br><span class="line">        h[i]=sz[i];</span><br><span class="line">    &#125;</span><br><span class="line">    sort(h+<span class="number">1</span>,h+<span class="number">1</span>+n);</span><br><span class="line">    <span class="keyword">int</span> num=unique(h+<span class="number">1</span>,h+<span class="number">1</span>+n)-(h+<span class="number">1</span>);</span><br><span class="line">    build(T[<span class="number">0</span>],<span class="number">1</span>,num);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=n; i++) update(T[i],<span class="number">1</span>,num,T[i<span class="number">-1</span>],lower_bound(h+<span class="number">1</span>,h+<span class="number">1</span>+num,sz[i])-(h));</span><br><span class="line">    <span class="keyword">while</span>(q--)&#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d %d %d"</span>,&amp;ql,&amp;qr,&amp;k);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,h[query(T[ql<span class="number">-1</span>],T[qr],<span class="number">1</span>,num,k)]);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="ZOJ-2122-Dynamic-Rankings-动态"><a href="#ZOJ-2122-Dynamic-Rankings-动态" class="headerlink" title="ZOJ-2122.Dynamic Rankings(动态)"></a><a href="http://acm.zju.edu.cn/onlinejudge/showProblem.do?problemCode=2112" target="_blank" rel="noopener">ZOJ-2122.Dynamic Rankings(动态)</a></h2><p>题意：动态求区间第k小，可参考<a href="https://blog.csdn.net/WilliamSun0122/article/details/77885781" target="_blank" rel="noopener">blog</a>。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">6e4</span>+<span class="number">5</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxm = <span class="number">1e4</span>+<span class="number">5</span>;</span><br><span class="line"><span class="keyword">int</span> T[maxn],S[maxn],L[maxn*<span class="number">32</span>],R[maxn*<span class="number">32</span>],sum[maxn*<span class="number">32</span>];</span><br><span class="line"><span class="keyword">int</span> sz[maxn],h[maxn];</span><br><span class="line"><span class="keyword">int</span> ul[maxn],ur[maxn];</span><br><span class="line"><span class="keyword">int</span> tot,num,n,q;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span>&#123;</span></span><br><span class="line">    <span class="keyword">int</span> l,r,k;</span><br><span class="line">    <span class="keyword">bool</span> flag; <span class="comment">//ture代表Q，false代表C</span></span><br><span class="line">&#125;Q[maxm];  <span class="comment">//存储询问</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">build</span><span class="params">(<span class="keyword">int</span>&amp; rt,<span class="keyword">int</span> l,<span class="keyword">int</span> r)</span></span>&#123;</span><br><span class="line">    rt = ++tot;</span><br><span class="line">    sum[rt]=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span>(l==r) <span class="keyword">return</span>;</span><br><span class="line">    <span class="keyword">int</span> mid = (l+r)&gt;&gt;<span class="number">1</span>;</span><br><span class="line">    build(L[rt],l,mid);</span><br><span class="line">    build(R[rt],mid+<span class="number">1</span>,r);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">update</span><span class="params">(<span class="keyword">int</span>&amp; rt,<span class="keyword">int</span> pre,<span class="keyword">int</span> l,<span class="keyword">int</span> r,<span class="keyword">int</span> x,<span class="keyword">int</span> val)</span></span>&#123;</span><br><span class="line">    rt = ++tot;</span><br><span class="line">    L[rt] = L[pre];</span><br><span class="line">    R[rt] = R[pre];</span><br><span class="line">    sum[rt] = sum[pre]+val;</span><br><span class="line">    <span class="keyword">if</span>(l==r) <span class="keyword">return</span>;</span><br><span class="line">    <span class="keyword">int</span> mid = (l+r)&gt;&gt;<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">if</span>(x&lt;=mid) update(L[rt],L[pre],l,mid,x,val);</span><br><span class="line">    <span class="keyword">else</span> update(R[rt],R[pre],mid+<span class="number">1</span>,r,x,val);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">lowbit</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> x&amp;(-x);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> val)</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> res = lower_bound(h+<span class="number">1</span>,h+<span class="number">1</span>+num,sz[x])-h;</span><br><span class="line">    <span class="keyword">while</span>(x&lt;=n)&#123;</span><br><span class="line">        update(S[x],S[x],<span class="number">1</span>,num,res,val);</span><br><span class="line">        x += lowbit(x);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">Sum</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">bool</span> flag)</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> res=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(x&gt;<span class="number">0</span>)&#123;</span><br><span class="line">        <span class="keyword">if</span>(flag) res += sum[L[ur[x]]];</span><br><span class="line">        <span class="keyword">else</span> res += sum[L[ul[x]]];</span><br><span class="line">        x -= lowbit(x);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">query</span><span class="params">(<span class="keyword">int</span> s,<span class="keyword">int</span> e,<span class="keyword">int</span> ts,<span class="keyword">int</span> te,<span class="keyword">int</span> l,<span class="keyword">int</span> r,<span class="keyword">int</span> k)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(l==r) <span class="keyword">return</span> l;</span><br><span class="line">    <span class="keyword">int</span> mid = (l+r)&gt;&gt;<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">int</span> res = Sum(e,<span class="literal">true</span>)-Sum(s,<span class="literal">false</span>)+sum[L[te]]-sum[L[ts]];</span><br><span class="line">    <span class="keyword">if</span>(k&lt;=res)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=e;i;i-=lowbit(i)) ur[i] = L[ur[i]];</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=s;i;i-=lowbit(i)) ul[i] = L[ul[i]];</span><br><span class="line">        <span class="keyword">return</span> query(s,e,L[ts],L[te],l,mid,k);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=e;i;i-=lowbit(i)) ur[i] = R[ur[i]];</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=s;i;i-=lowbit(i)) ul[i] = R[ul[i]];</span><br><span class="line">        <span class="keyword">return</span> query(s,e,R[ts],R[te],mid+<span class="number">1</span>,r,k-res);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> t;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;t);</span><br><span class="line">    <span class="keyword">while</span>(t--)&#123;</span><br><span class="line">        <span class="keyword">char</span> str[<span class="number">5</span>];</span><br><span class="line">        num=<span class="number">0</span>;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;n,&amp;q);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++) <span class="built_in">scanf</span>(<span class="string">"%d"</span>,sz+i),h[++num]=sz[i];</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=q;i++)&#123;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">"%s"</span>,str);</span><br><span class="line">            <span class="keyword">if</span>(str[<span class="number">0</span>]==<span class="string">'Q'</span>)&#123;</span><br><span class="line">                <span class="built_in">scanf</span>(<span class="string">"%d%d%d"</span>,&amp;Q[i].l,&amp;Q[i].r,&amp;Q[i].k);</span><br><span class="line">                Q[i].flag=<span class="literal">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;Q[i].l,&amp;Q[i].r);</span><br><span class="line">                Q[i].flag=<span class="literal">false</span>;</span><br><span class="line">                h[++num]=Q[i].r;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        sort(h+<span class="number">1</span>,h+<span class="number">1</span>+num);</span><br><span class="line">        <span class="keyword">int</span> tmp = unique(h+<span class="number">1</span>,h+<span class="number">1</span>+num)-h<span class="number">-1</span>;</span><br><span class="line">        num = tmp;</span><br><span class="line">        tot=<span class="number">0</span>;</span><br><span class="line">        build(T[<span class="number">0</span>],<span class="number">1</span>,num);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++) update(T[i],T[i<span class="number">-1</span>],<span class="number">1</span>,num,lower_bound(h+<span class="number">1</span>,h+<span class="number">1</span>+num,sz[i])-h,<span class="number">1</span>);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++) S[i] = T[<span class="number">0</span>];</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=q;i++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(Q[i].flag)&#123;</span><br><span class="line">                <span class="keyword">for</span>(<span class="keyword">int</span> j=Q[i].r;j;j-=lowbit(j)) ur[j] = S[j];</span><br><span class="line">                <span class="keyword">for</span>(<span class="keyword">int</span> j=Q[i].l<span class="number">-1</span>;j;j-=lowbit(j)) ul[j] = S[j];</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,h[query(Q[i].l<span class="number">-1</span>,Q[i].r,T[Q[i].l<span class="number">-1</span>],T[Q[i].r],<span class="number">1</span>,num,Q[i].k)]);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span>&#123;</span><br><span class="line">                add(Q[i].l,<span class="number">-1</span>);</span><br><span class="line">                sz[Q[i].l] = Q[i].r;</span><br><span class="line">                add(Q[i].l,<span class="number">1</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;del&gt;狂补数据结构的知识！！还需慢慢消化🐷&lt;/del&gt;主席树的本质就是线段树，叫做可持久化线段树，最为经典的问题就是查询区间第k小的数&lt;del&gt;(说是第k大，&lt;a href=&quot;http://acm.hdu.edu.cn/showproblem.php?pid=2665&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;HDU2665&lt;/a&gt;上面说the  kth big number​)&lt;/del&gt;，分静态(不带修改)和动态(带修改)两种。&lt;/p&gt;
    
    </summary>
    
      <category term="数据结构" scheme="http://yoursite.com/categories/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
    
  </entry>
  
  <entry>
    <title>莫队算法</title>
    <link href="http://yoursite.com/2019/07/08/%E8%8E%AB%E9%98%9F%E7%AE%97%E6%B3%95/"/>
    <id>http://yoursite.com/2019/07/08/莫队算法/</id>
    <published>2019-07-08T12:56:01.976Z</published>
    <updated>2019-07-11T10:15:59.106Z</updated>
    
    <content type="html"><![CDATA[<p><del>自从上次邀请赛之后说要学习莫队算法，一直拖到现在，💊</del>总的来说，莫队算法是一种离线分块的算法，将总区间分成若干个块($\sqrt{n}$)，然后对每一块更新查询$ans$的值。时间复杂度$O\ (n\sqrt{n})$</p><a id="more"></a><p>这里强烈安利一篇<a href="http://www.myblog.link/2016/01/26/MO-s-Algorithm/" target="_blank" rel="noopener">blog</a></p><h2 id="SPOJ-D-query"><a href="#SPOJ-D-query" class="headerlink" title="SPOJ D-query"></a><a href="https://www.spoj.com/problems/DQUERY/" target="_blank" rel="noopener">SPOJ D-query</a></h2><p>题意：给定一个长度为n序列，再给定m次查询，每次查询区间内出现元素的种类数</p><p>思路：<del>听说可以主席树或者离线树状数组做，</del>莫队算法的入门题，耗时270ms。将所有查询分成$\sqrt{n}$个块，再按照块排序，然后对于每个块可以利用之前算过的答案(即数量)来更新当前的答案(数量)。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn=<span class="number">1e6</span>+<span class="number">10</span>;</span><br><span class="line"><span class="keyword">int</span> a[maxn],n,m,cnt[maxn],ans=<span class="number">0</span>,anss[maxn],block;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span>&#123;</span></span><br><span class="line">    <span class="keyword">int</span> L,R,i;</span><br><span class="line">&#125;q[maxn];</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmp</span><span class="params">(node x,node y)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(x.L/block != y.L/block) <span class="keyword">return</span> x.L/block &lt; y.L/block;</span><br><span class="line">    <span class="keyword">return</span> x.R &lt; y.R;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> p)</span></span>&#123;</span><br><span class="line">    cnt[a[p]]++;</span><br><span class="line">    <span class="keyword">if</span>(cnt[a[p]] == <span class="number">1</span>) ans++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">del</span><span class="params">(<span class="keyword">int</span> p)</span></span>&#123;</span><br><span class="line">    cnt[a[p]]--;</span><br><span class="line">    <span class="keyword">if</span>(cnt[a[p]] == <span class="number">0</span>) ans--;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</span><br><span class="line">    block=<span class="built_in">sqrt</span>(n);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=n; i++) <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;a[i]);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;m);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=m; i++)&#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d %d"</span>,&amp;q[i].L,&amp;q[i].R);</span><br><span class="line">        q[i].i=i;</span><br><span class="line">    &#125;</span><br><span class="line">    sort(q+<span class="number">1</span>,q+m+<span class="number">1</span>,cmp);</span><br><span class="line">    <span class="keyword">int</span> cL=<span class="number">1</span>,cR=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=m; i++)&#123;</span><br><span class="line">        <span class="keyword">int</span> L=q[i].L,R=q[i].R;</span><br><span class="line">        <span class="keyword">while</span>(cL &lt; L) del(cL++);</span><br><span class="line">        <span class="keyword">while</span>(cL &gt; L) add(--cL);</span><br><span class="line">        <span class="keyword">while</span>(cR &lt; R) add(++cR);</span><br><span class="line">        <span class="keyword">while</span>(cR &gt; R) del(cR--);</span><br><span class="line">        anss[q[i].i]=ans;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=m; i++) <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,anss[i]);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="codeforces-Powerful-array"><a href="#codeforces-Powerful-array" class="headerlink" title="codeforces-Powerful array"></a><a href="https://codeforces.com/contest/86/problem/D" target="_blank" rel="noopener">codeforces-Powerful array</a></h2><p>题意：给定n个元素序列，m次询问，要统计区间内[l,r]元素个数乘以元素的值的和$\sum_{l}^{r}cnt_i^2*i$</p><p>思路：莫队算法，只需要修改del函数和add函数就行，在每次更新cnt前面，加上<code>ans-=(1LL*a[p]*cnt[a[p]]*cnt[a[p]]);</code>，更新之后再加上<code>ans+=(1LL*a[p]*cnt[a[p]]*cnt[a[p]]);</code>，注意不能把全部变量变成long long，会超时的😑。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn=<span class="number">1e6</span>+<span class="number">10</span>;</span><br><span class="line"><span class="keyword">int</span> a[maxn],n,m,cnt[maxn],block;</span><br><span class="line">ll ans=<span class="number">0</span>,anss[maxn];</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span>&#123;</span></span><br><span class="line">    <span class="keyword">int</span> L,R,i;</span><br><span class="line">&#125;q[maxn];</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmp</span><span class="params">(node x,node y)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(x.L/block != y.L/block) <span class="keyword">return</span> x.L/block &lt; y.L/block;</span><br><span class="line">    <span class="keyword">return</span> x.R &lt; y.R;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(ll p)</span></span>&#123;</span><br><span class="line">    ans-=(<span class="number">1L</span>L*a[p]*cnt[a[p]]*cnt[a[p]]);</span><br><span class="line">    cnt[a[p]]++;</span><br><span class="line">    ans+=(<span class="number">1L</span>L*a[p]*cnt[a[p]]*cnt[a[p]]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">del</span><span class="params">(ll p)</span></span>&#123;</span><br><span class="line">    ans-=(<span class="number">1L</span>L*a[p]*cnt[a[p]]*cnt[a[p]]);</span><br><span class="line">    cnt[a[p]]--;</span><br><span class="line">    ans+=(<span class="number">1L</span>L*a[p]*cnt[a[p]]*cnt[a[p]]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d %d"</span>,&amp;n,&amp;m);</span><br><span class="line">    block=<span class="built_in">sqrt</span>(n);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=n; i++) <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;a[i]);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=m; i++)&#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d %d"</span>,&amp;q[i].L,&amp;q[i].R);</span><br><span class="line">        q[i].i=i;</span><br><span class="line">    &#125;</span><br><span class="line">    sort(q+<span class="number">1</span>,q+m+<span class="number">1</span>,cmp);</span><br><span class="line">    <span class="keyword">int</span> cL=<span class="number">1</span>,cR=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=m; i++)&#123;</span><br><span class="line">        <span class="keyword">int</span> L=q[i].L,R=q[i].R;</span><br><span class="line">        <span class="keyword">while</span>(cL &lt; L) del(cL++);</span><br><span class="line">        <span class="keyword">while</span>(cL &gt; L) add(--cL);</span><br><span class="line">        <span class="keyword">while</span>(cR &lt; R) add(++cR);</span><br><span class="line">        <span class="keyword">while</span>(cR &gt; R) del(cR--);</span><br><span class="line">        anss[q[i].i]=ans;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(ll i=<span class="number">1</span>; i&lt;=m; i++) <span class="built_in">printf</span>(<span class="string">"%I64d\n"</span>,anss[i]);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="HDU-6534-Chika-and-Friendly-Pairs"><a href="#HDU-6534-Chika-and-Friendly-Pairs" class="headerlink" title="HDU-6534.Chika and Friendly Pairs"></a><a href="http://acm.hdu.edu.cn/showproblem.php?pid=6534" target="_blank" rel="noopener">HDU-6534.Chika and Friendly Pairs</a></h2><p><del>湘潭邀请赛C题，当时卡的题，现在补掉</del></p><p>题意：给定一个长度为$n$的序列，$m$次询问，一个数$k$。询问你在区间$[l\ ,\ r]$中，符合$|a_i-a_j|\leq k$并且$i &lt; j$有多少对这样的数。</p><p>思路：<strong>莫队+树状数组+离散化</strong>，首先对于每次查询$a_i$，我只要查询区间内$[a_i-k\ ,\ a_i+k]$的种数即可，利用树状数组就行，然后由于序列中的数最大有$10^9$，而数的个数只有$27000$，就可以通过离散化将其缩小，再用莫队算法。</p><p>对于新加进来的数$a_i$，<code>ans+=(query(up[l])-query(lowa[l]))</code>，然后再<code>add(mida[l],1)</code>，仔细想想就会发现，如果你先写add函数，就会把本身的值也算进去。</p><p>对于去掉的数$a_i$，则需要先<code>add(mida[l],-1)</code>，然后再更新ans，<code>ans-=(query(up[l])-query(lowa[l]))</code>，因为query查询的时候会把mida[l]也计算进来。</p><p>离散化的模版</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//n 原数组大小 num 原数组中的元素 lsh 离散化的数组 cnt 离散化后的数组大小 </span></span><br><span class="line"><span class="keyword">int</span> lsh[MAXN],cnt,num[MAXN],n;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=n; i++) &#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;num[i]);</span><br><span class="line">lsh[i]=num[i];</span><br><span class="line">&#125;</span><br><span class="line">sort(lsh+<span class="number">1</span>,lsh+n+<span class="number">1</span>);</span><br><span class="line">cnt = unique(lsh+<span class="number">1</span>,lsh+n+<span class="number">1</span>)-(lsh+<span class="number">1</span>);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=n; i++)</span><br><span class="line">num[i]=lower_bound(lsh+<span class="number">1</span>,lsh+cnt+<span class="number">1</span>,num[i])-lsh;</span><br></pre></td></tr></table></figure><p>该题ac的代码（390MS）</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn=<span class="number">27010</span>;</span><br><span class="line"><span class="keyword">int</span> mp[maxn*<span class="number">3</span>],a[maxn],upa[maxn],lowa[maxn],mida[maxn];</span><br><span class="line"><span class="keyword">int</span> tree[maxn*<span class="number">3</span>],ans=<span class="number">0</span>,anss[maxn];</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span>&#123;</span></span><br><span class="line">    <span class="keyword">int</span> l,r;</span><br><span class="line">    <span class="keyword">int</span> i;</span><br><span class="line">&#125;q[maxn];</span><br><span class="line"><span class="keyword">int</span> n,m,block,k;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmp</span><span class="params">(node i,node j)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(i.l/block != j.l/block) <span class="keyword">return</span> i.l/block &lt; j.l/block;</span><br><span class="line">    <span class="keyword">return</span> i.r &lt; j.r;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">lowbit</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> x&amp;(-x);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> val)</span></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=x; i&lt;maxn*<span class="number">3</span>; i+=lowbit(i)) tree[i]+=val;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">query</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> ans=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=x; i; i-=lowbit(i)) ans+=tree[i];</span><br><span class="line">    <span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d %d %d"</span>,&amp;n,&amp;m,&amp;k);</span><br><span class="line">    <span class="keyword">int</span> sum=<span class="number">1</span>;</span><br><span class="line">    block=<span class="built_in">sqrt</span>(n);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=n; i++)&#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;a[i]);</span><br><span class="line">        mp[sum++]=a[i];</span><br><span class="line">        mp[sum++]=a[i]+k;</span><br><span class="line">        mp[sum++]=a[i]-k<span class="number">-1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    sort(mp+<span class="number">1</span>,mp+sum);</span><br><span class="line">    <span class="keyword">int</span> num=unique(mp+<span class="number">1</span>,mp+sum)-(mp+<span class="number">1</span>);</span><br><span class="line">    <span class="keyword">int</span> pos;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=n; i++)&#123;</span><br><span class="line">        pos=lower_bound(mp+<span class="number">1</span>,mp+num+<span class="number">1</span>,a[i]+k)-mp;</span><br><span class="line">        upa[i]=pos;</span><br><span class="line">        pos=lower_bound(mp+<span class="number">1</span>,mp+num+<span class="number">1</span>,a[i]-k<span class="number">-1</span>)-mp;</span><br><span class="line">        lowa[i]=pos;</span><br><span class="line">        pos=lower_bound(mp+<span class="number">1</span>,mp+num+<span class="number">1</span>,a[i])-mp;</span><br><span class="line">        mida[i]=pos;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=m; i++)&#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d %d"</span>,&amp;q[i].l,&amp;q[i].r);</span><br><span class="line">        q[i].i=i;</span><br><span class="line">    &#125;</span><br><span class="line">    sort(q+<span class="number">1</span>,q+m+<span class="number">1</span>,cmp);</span><br><span class="line">    <span class="keyword">int</span> cL=<span class="number">1</span>,cR=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=m; i++)&#123;</span><br><span class="line">        <span class="keyword">int</span> L=q[i].l;</span><br><span class="line">        <span class="keyword">int</span> R=q[i].r;</span><br><span class="line">        <span class="keyword">while</span>(cR&lt;R)&#123;</span><br><span class="line">            cR++;</span><br><span class="line">            ans+=(query(upa[cR])-query(lowa[cR]));</span><br><span class="line">            add(mida[cR],<span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">while</span>(cR&gt;R)&#123;</span><br><span class="line">            add(mida[cR],<span class="number">-1</span>);</span><br><span class="line">            ans-=(query(upa[cR])-query(lowa[cR]));</span><br><span class="line">            cR--;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">while</span>(cL&lt;L)&#123;</span><br><span class="line">            add(mida[cL],<span class="number">-1</span>);</span><br><span class="line">            ans-=(query(upa[cL])-query(lowa[cL]));</span><br><span class="line">            cL++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">while</span>(cL&gt;L)&#123;</span><br><span class="line">            cL--;</span><br><span class="line">            ans+=(query(upa[cL])-query(lowa[cL]));</span><br><span class="line">            add(mida[cL],<span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        anss[q[i].i]=ans;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=m; i++) <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,anss[i]);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;del&gt;自从上次邀请赛之后说要学习莫队算法，一直拖到现在，💊&lt;/del&gt;总的来说，莫队算法是一种离线分块的算法，将总区间分成若干个块($\sqrt{n}$)，然后对每一块更新查询$ans$的值。时间复杂度$O\ (n\sqrt{n})$&lt;/p&gt;
    
    </summary>
    
      <category term="数据结构" scheme="http://yoursite.com/categories/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
    
  </entry>
  
  <entry>
    <title>牛客练习赛49</title>
    <link href="http://yoursite.com/2019/07/06/newcoder190705/"/>
    <id>http://yoursite.com/2019/07/06/newcoder190705/</id>
    <published>2019-07-06T11:15:20.753Z</published>
    <updated>2019-07-13T02:00:31.543Z</updated>
    
    <content type="html"><![CDATA[<p><del>说好的人均3.5道题呢？骗我们打代码</del></p><a id="more"></a><h4 id="A筱玛爱地理"><a href="#A筱玛爱地理" class="headerlink" title="A筱玛爱地理"></a><a href="https://ac.nowcoder.com/acm/contest/946/A" target="_blank" rel="noopener">A筱玛爱地理</a></h4><p>  在经济地理学中，交通的联结度表示交通网络的发达程度，通常用贝塔指数来计算与比较。若用$V$表示一个交通网络中结点的数量，用$E$表示边的数量，则贝塔指数的计算方式为：$ \beta = \frac{E}{V}$。 </p><p>“实践是检验真理的唯一标准”。作为一个热爱地理的好筱玛，她马上就把新学的知识应用到实践当中去。筱玛一口气出了$n$张交通网络规划图，其中第$i$张交通网络$G_i$有$V_i$个结点和$E_i$条边。筱玛一眼就看出了哪张图好、哪张图坏。但是作为一个负责任的好筱玛，她必须带领同学们一起进步。因此，她需要你将所有的$n$张图按照贝塔指数排序，并求出它们各自的贝塔指数在模$10^9+7$意义下的值</p><p>直接计算$\beta$(浮点数)，然后排序，再求逆元输出取模之后的结果就好了</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line">ll t;</span><br><span class="line">ll x,y;</span><br><span class="line"><span class="keyword">const</span> ll mod=<span class="number">1e9</span>+<span class="number">7</span>;</span><br><span class="line"><span class="function">ll <span class="title">qpow</span><span class="params">(ll x,ll n,ll mod)</span></span>&#123;</span><br><span class="line">    ll res=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span>(n)&#123;</span><br><span class="line">        <span class="keyword">if</span>(n&amp;<span class="number">1</span>) res=res*x%mod;</span><br><span class="line">        x=x*x%mod;</span><br><span class="line">        n&gt;&gt;=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> res%mod;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span>&#123;</span></span><br><span class="line">    ll v,e;</span><br><span class="line">    <span class="keyword">double</span> x;</span><br><span class="line">    ll y;</span><br><span class="line">&#125;a[<span class="number">200010</span>];</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmp</span><span class="params">(node i,node j)</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> i.x&gt;j.x;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%lld"</span>,&amp;t);</span><br><span class="line">    <span class="keyword">for</span>(ll i=<span class="number">0</span>; i&lt;t; i++)&#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%lld %lld"</span>,&amp;a[i].v,&amp;a[i].e);</span><br><span class="line">        <span class="comment">//printf("%lld\n",y*qpow(x,mod-2,mod)%mod);</span></span><br><span class="line">        a[i].y=a[i].e*qpow(a[i].v,mod<span class="number">-2</span>,mod)%mod;</span><br><span class="line">        <span class="comment">//a[i++]=y*qpow(x,mod-2,mod)%mod;</span></span><br><span class="line">        a[i].x=a[i].e*<span class="number">1.0</span>/a[i].v*<span class="number">1.0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    sort(a,a+t,cmp);</span><br><span class="line">    <span class="keyword">for</span>(ll j=<span class="number">0</span>; j&lt;t; j++) <span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,a[j].y);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="D筱玛爱线段树"><a href="#D筱玛爱线段树" class="headerlink" title="D筱玛爱线段树"></a><a href="https://ac.nowcoder.com/acm/contest/946/D" target="_blank" rel="noopener">D筱玛爱线段树</a></h4><p>筱玛的爷爷马爷在游戏中被筱玛吊打了，于是他恼羞成怒，决定给筱玛出这样一道数据结构题：<br>给定一个长度为n的数组A，刚开始每一项的值均为0。<br>支持以下两种操作，操作共m次：<br> 1 l r ：将$A_i \sim A_j$的每一项的值加上1。<br> 2 l r ：执行操作编号在[l,r]内的所有操作各一次，保证r小于当前操作的编号。<br>m次操作结束后，你要告诉马爷A数组变成什么样子了。<br>由于答案可能会很大，你只需要输出数组<br>A中的每个数在模 $10^9+7$ 意义下的值</p><p>方法一：线段树，维护了两棵线段树即可</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> ll maxn=<span class="number">100010</span>;</span><br><span class="line"><span class="keyword">const</span> ll mod=<span class="number">1e9</span>+<span class="number">7</span>;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">seg</span>&#123;</span></span><br><span class="line">    ll l,r;</span><br><span class="line">    ll mark;</span><br><span class="line">    ll val;</span><br><span class="line">&#125;s[maxn*<span class="number">4</span>],ss[maxn*<span class="number">4</span>];</span><br><span class="line">ll a[maxn];</span><br><span class="line">ll b[maxn];</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span>&#123;</span></span><br><span class="line">    ll op;</span><br><span class="line">    ll l,r;</span><br><span class="line">&#125;x[maxn];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">pushup</span><span class="params">(ll i)</span></span>&#123;</span><br><span class="line">    s[i].val=(s[i&lt;&lt;<span class="number">1L</span>L].val+s[(i&lt;&lt;<span class="number">1L</span>L)|<span class="number">1L</span>L].val)%mod;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">pushdown</span><span class="params">(ll i)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(s[i].mark)&#123;</span><br><span class="line">        s[i&lt;&lt;<span class="number">1L</span>L].val=(s[i&lt;&lt;<span class="number">1L</span>L].val+((s[i&lt;&lt;<span class="number">1L</span>L].r-s[i&lt;&lt;<span class="number">1L</span>L].l+<span class="number">1L</span>L)*s[i].mark%mod))%mod;</span><br><span class="line">        s[(i&lt;&lt;<span class="number">1L</span>L)|<span class="number">1L</span>L].val=(s[(i&lt;&lt;<span class="number">1L</span>L)|<span class="number">1L</span>L].val+((s[(i&lt;&lt;<span class="number">1L</span>L)|<span class="number">1L</span>L].r-s[(i&lt;&lt;<span class="number">1L</span>L)|<span class="number">1L</span>L].l+<span class="number">1L</span>L)*s[i].mark%mod))%mod;</span><br><span class="line">        s[i&lt;&lt;<span class="number">1L</span>L].mark=(s[i&lt;&lt;<span class="number">1L</span>L].mark+s[i].mark)%mod;</span><br><span class="line">        s[(i&lt;&lt;<span class="number">1L</span>L)|<span class="number">1L</span>L].mark=(s[(i&lt;&lt;<span class="number">1L</span>L)|<span class="number">1L</span>L].mark+s[i].mark)%mod;</span><br><span class="line">        s[i].mark=<span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">build</span><span class="params">(ll i,ll l,ll r)</span></span>&#123;</span><br><span class="line">    s[i].l=l;</span><br><span class="line">    s[i].r=r;</span><br><span class="line">    s[i].mark=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span>(l == r)&#123;</span><br><span class="line">        s[i].val=a[l];</span><br><span class="line">        <span class="keyword">return</span> ;</span><br><span class="line">    &#125;</span><br><span class="line">    ll mid=(l+r)&gt;&gt;<span class="number">1L</span>L;</span><br><span class="line">    build(i&lt;&lt;<span class="number">1L</span>L,l,mid);</span><br><span class="line">    build((i&lt;&lt;<span class="number">1L</span>L)|<span class="number">1L</span>L,mid+<span class="number">1L</span>L,r);</span><br><span class="line">    pushup(i);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">ll <span class="title">query</span><span class="params">(ll i,ll l,ll r,ll sl,ll sr)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(l&gt;=sl &amp;&amp; r&lt;=sr) <span class="keyword">return</span> s[i].val;</span><br><span class="line">    pushdown(i);</span><br><span class="line">    ll mid=(l+r)&gt;&gt;<span class="number">1L</span>L;</span><br><span class="line">    ll sum=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span>(mid&gt;=sl) sum=(sum+query(i&lt;&lt;<span class="number">1L</span>L,l,mid,sl,sr))%mod;</span><br><span class="line">    <span class="keyword">if</span>(mid&lt;sr) sum=(sum+query((i&lt;&lt;<span class="number">1L</span>L)|<span class="number">1L</span>L,mid+<span class="number">1L</span>L,r,sl,sr))%mod;</span><br><span class="line">    <span class="keyword">return</span> sum%mod;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">updata</span><span class="params">(ll i,ll l,ll r,ll sl,ll sr,ll val)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(l&gt;=sl &amp;&amp; r&lt;=sr)&#123;</span><br><span class="line">        s[i].val=(s[i].val+(s[i].r-s[i].l+<span class="number">1L</span>L)*val%mod)%mod;</span><br><span class="line">        s[i].mark=(s[i].mark+val)%mod;</span><br><span class="line">        <span class="keyword">return</span> ;</span><br><span class="line">    &#125;</span><br><span class="line">    ll mid=(l+r)&gt;&gt;<span class="number">1L</span>L;</span><br><span class="line">    pushdown(i);</span><br><span class="line">    <span class="keyword">if</span>(mid&gt;=sl) updata(i&lt;&lt;<span class="number">1L</span>L,l,mid,sl,sr,val);</span><br><span class="line">    <span class="keyword">if</span>(mid&lt;sr) updata((i&lt;&lt;<span class="number">1L</span>L)|<span class="number">1L</span>L,mid+<span class="number">1L</span>L,r,sl,sr,val);</span><br><span class="line">    pushup(i);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">pushup1</span><span class="params">(ll i)</span></span>&#123;</span><br><span class="line">    ss[i].val=(ss[i&lt;&lt;<span class="number">1L</span>L].val+ss[(i&lt;&lt;<span class="number">1L</span>L)|<span class="number">1L</span>L].val)%mod;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">pushdown1</span><span class="params">(ll i)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(ss[i].mark)&#123;</span><br><span class="line">        ss[i&lt;&lt;<span class="number">1L</span>L].val=(ss[i&lt;&lt;<span class="number">1L</span>L].val+((ss[i&lt;&lt;<span class="number">1L</span>L].r-ss[i&lt;&lt;<span class="number">1L</span>L].l+<span class="number">1L</span>L)*ss[i].mark%mod))%mod;</span><br><span class="line">        ss[(i&lt;&lt;<span class="number">1L</span>L)|<span class="number">1L</span>L].val=(ss[(i&lt;&lt;<span class="number">1L</span>L)|<span class="number">1L</span>L].val+((ss[(i&lt;&lt;<span class="number">1L</span>L)|<span class="number">1L</span>L].r-ss[(i&lt;&lt;<span class="number">1L</span>L)|<span class="number">1L</span>L].l+<span class="number">1L</span>L)*ss[i].mark%mod))%mod;</span><br><span class="line">        ss[i&lt;&lt;<span class="number">1L</span>L].mark=(ss[i&lt;&lt;<span class="number">1L</span>L].mark+ss[i].mark)%mod;</span><br><span class="line">        ss[(i&lt;&lt;<span class="number">1L</span>L)|<span class="number">1L</span>L].mark=(ss[(i&lt;&lt;<span class="number">1L</span>L)|<span class="number">1L</span>L].mark+ss[i].mark)%mod;</span><br><span class="line">        ss[i].mark=<span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">build1</span><span class="params">(ll i,ll l,ll r)</span></span>&#123;</span><br><span class="line">    ss[i].l=l;</span><br><span class="line">    ss[i].r=r;</span><br><span class="line">    ss[i].mark=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span>(l == r)&#123;</span><br><span class="line">        ss[i].val=b[l];</span><br><span class="line">        <span class="keyword">return</span> ;</span><br><span class="line">    &#125;</span><br><span class="line">    ll mid=(l+r)&gt;&gt;<span class="number">1L</span>L;</span><br><span class="line">    build1(i&lt;&lt;<span class="number">1L</span>L,l,mid);</span><br><span class="line">    build1((i&lt;&lt;<span class="number">1L</span>L)|<span class="number">1L</span>L,mid+<span class="number">1L</span>L,r);</span><br><span class="line">    pushup1(i);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">ll <span class="title">query1</span><span class="params">(ll i,ll l,ll r,ll ssl,ll ssr)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(l&gt;=ssl &amp;&amp; r&lt;=ssr) <span class="keyword">return</span> ss[i].val;</span><br><span class="line">    pushdown1(i);</span><br><span class="line">    ll mid=(l+r)&gt;&gt;<span class="number">1L</span>L;</span><br><span class="line">    ll ssum=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span>(mid&gt;=ssl) ssum=(ssum+query1(i&lt;&lt;<span class="number">1L</span>L,l,mid,ssl,ssr))%mod;</span><br><span class="line">    <span class="keyword">if</span>(mid&lt;ssr) ssum=(ssum+query1((i&lt;&lt;<span class="number">1L</span>L)|<span class="number">1L</span>L,mid+<span class="number">1L</span>L,r,ssl,ssr))%mod;</span><br><span class="line">    <span class="keyword">return</span> ssum%mod;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">updata1</span><span class="params">(ll i,ll l,ll r,ll ssl,ll ssr,ll val)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(l&gt;=ssl &amp;&amp; r&lt;=ssr)&#123;</span><br><span class="line">        ss[i].val=(ss[i].val+(ss[i].r-ss[i].l+<span class="number">1L</span>L)*val%mod)%mod;</span><br><span class="line">        ss[i].mark=(ss[i].mark+val)%mod;</span><br><span class="line">        <span class="keyword">return</span> ;</span><br><span class="line">    &#125;</span><br><span class="line">    ll mid=(l+r)&gt;&gt;<span class="number">1L</span>L;</span><br><span class="line">    pushdown1(i);</span><br><span class="line">    <span class="keyword">if</span>(mid&gt;=ssl) updata1(i&lt;&lt;<span class="number">1L</span>L,l,mid,ssl,ssr,val);</span><br><span class="line">    <span class="keyword">if</span>(mid&lt;ssr) updata1((i&lt;&lt;<span class="number">1L</span>L)|<span class="number">1L</span>L,mid+<span class="number">1L</span>L,r,ssl,ssr,val);</span><br><span class="line">    pushup1(i);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    ll n,m;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%lld"</span>,&amp;n);</span><br><span class="line">    <span class="built_in">memset</span>(a,<span class="number">0</span>,<span class="keyword">sizeof</span> a);</span><br><span class="line">    build(<span class="number">1</span>,<span class="number">1</span>,n);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%lld"</span>,&amp;m);</span><br><span class="line">    <span class="comment">//m=100000;</span></span><br><span class="line">    <span class="keyword">for</span>(ll i=<span class="number">1</span>; i&lt;=m; i++)&#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%lld %lld %lld"</span>,&amp;x[i].op,&amp;x[i].l,&amp;x[i].r);</span><br><span class="line">        <span class="comment">//if(i == 1) x[i].op=1,x[i].l=1,x[i].r=n;</span></span><br><span class="line">        <span class="comment">//else x[i].op=2,x[i].l=1,x[i].r=i-1;</span></span><br><span class="line">        b[i]=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//for(ll i=1; i&lt;=m; i++) b[i]=1;</span></span><br><span class="line">    build1(<span class="number">1</span>,<span class="number">1</span>,m);</span><br><span class="line">    <span class="comment">//cout&lt;&lt;query1(1,1,m,1,1)&lt;&lt;endl;;</span></span><br><span class="line">    <span class="keyword">for</span>(ll i=m; i&gt;<span class="number">0</span>; i--)&#123;</span><br><span class="line">        <span class="keyword">if</span>(x[i].op == <span class="number">1</span>)&#123;</span><br><span class="line">            updata(<span class="number">1</span>,<span class="number">1</span>,n,x[i].l,x[i].r,query1(<span class="number">1</span>,<span class="number">1</span>,m,i,i));</span><br><span class="line">            <span class="comment">//printf("%d\n",query1(1,1,m,i,i));</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            updata1(<span class="number">1</span>,<span class="number">1</span>,m,x[i].l,x[i].r,query1(<span class="number">1</span>,<span class="number">1</span>,m,i,i));</span><br><span class="line">            <span class="comment">//printf("%lld\n",query1(1,1,m,i,i));</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(ll i=<span class="number">1</span>; i&lt;=n; i++)&#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%lld%c"</span>,query(<span class="number">1</span>,<span class="number">1</span>,n,i,i),i&lt;n?<span class="string">' '</span>:<span class="string">'\n'</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>方法二：差分(留坑待补……)</p><h4 id="E筱玛爱游戏"><a href="#E筱玛爱游戏" class="headerlink" title="E筱玛爱游戏"></a><a href="https://ac.nowcoder.com/acm/contest/946/E" target="_blank" rel="noopener">E筱玛爱游戏</a></h4><p>  两个人轮流从桌面上取走一个数，并把这个数放入集合中。 </p><p>  如果在某次操作结束后，集合中存在一个异或和为0的<strong>非空</strong>子集，那么进行这次操作的人输。 </p><p>  如果全部取完，则最后操作的人赢。 </p><p>  筱玛和马爷都聪明绝顶，他们都会按照最优策略进行游戏。 </p><p>  马爷作为筱玛的爷爷，决定让筱玛选择先手还是后手。 </p><p>  筱玛为了稳操胜券，想提前知道对于当前的游戏，是先手必胜还是后手必胜。 </p><p>  筱玛想考考你，让你帮他解决这个问题</p><p>   思路：每一个数都是一个向量，以二进制形式的向量，此时数的异或就是向量的加法(不带进位)，就是求所有向量不相关的集合，其实就是矩阵的秩。然后就要求所有的向量组矩阵的秩，如果秩为偶数，后手赢，否则先手赢。可以通过高斯消元或者线性基，这里是线性基的方法</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line">ll n,m,a[<span class="number">100</span>];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">ran</span><span class="params">(ll x)</span></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(ll i=<span class="number">60</span>; ~i; i--)&#123;</span><br><span class="line">        <span class="keyword">if</span>(x&gt;&gt;i &amp; <span class="number">1</span>)&#123;</span><br><span class="line">            <span class="keyword">if</span>(!a[i])&#123;</span><br><span class="line">                a[i]=x;</span><br><span class="line">                <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> x^=a[i];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%lld"</span>,&amp;n);</span><br><span class="line">    ll ans=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(ll i=<span class="number">1</span>; i&lt;=n; i++)&#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%lld"</span>,&amp;m);</span><br><span class="line">        ans+=ran(m);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(ans&amp;<span class="number">1</span>) <span class="built_in">puts</span>(<span class="string">"First"</span>);</span><br><span class="line">    <span class="keyword">else</span> <span class="built_in">puts</span>(<span class="string">"Second"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;del&gt;说好的人均3.5道题呢？骗我们打代码&lt;/del&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="牛客" scheme="http://yoursite.com/categories/%E7%89%9B%E5%AE%A2/"/>
    
    
  </entry>
  
  <entry>
    <title>Codeforces Round#572(Div 2)</title>
    <link href="http://yoursite.com/2019/07/06/cf190705/"/>
    <id>http://yoursite.com/2019/07/06/cf190705/</id>
    <published>2019-07-06T09:39:24.253Z</published>
    <updated>2019-07-13T02:00:43.549Z</updated>
    
    <content type="html"><![CDATA[<p><del>这场比较简单</del>，深夜肝题，精神抖擞.jpg，不过涨分就很舒服</p><a id="more"></a><h2 id="A-Keanu-Reeves"><a href="#A-Keanu-Reeves" class="headerlink" title="A. Keanu Reeves"></a><a href="https://codeforces.com/contest/1189/problem/A" target="_blank" rel="noopener">A. Keanu Reeves</a></h2><p>题意: 是给定一个只含0和1的串，问能否能分成最少的子串，并且这些子串的0和1数量不相等</p><p>解析: 如果该串本身01数量不等，直接输出，否则就分成两部分就好，第一个字符单独一部分，剩下的为另一部分(我的代码是最后一个字符单独一部分)</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">char</span> s[<span class="number">200</span>];</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%s"</span>,s);</span><br><span class="line">    <span class="keyword">int</span> cnt0=<span class="number">0</span>,cnt1=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;n; i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(s[i] == <span class="string">'0'</span>) cnt0++;</span><br><span class="line">        <span class="keyword">else</span> cnt1++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(cnt0 != cnt1)&#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"1\n%s\n"</span>,s);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="built_in">puts</span>(<span class="string">"2"</span>);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;n<span class="number">-1</span>; i++)&#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"%c"</span>,s[i]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">" %c\n"</span>,s[n<span class="number">-1</span>]);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="B-Number-Circle"><a href="#B-Number-Circle" class="headerlink" title="B. Number Circle"></a><a href="https://codeforces.com/contest/1189/problem/B" target="_blank" rel="noopener">B. Number Circle</a></h2><p>题意: 给定一个序列，问你能否组成一个首尾相接循环的序列，使得每个数都比相邻的两个数的和小</p><p>解析: 对数组a首先排序，直接从最后一个元素a[n]开始找，找从前面找a[i]，使得a[n-1]+a[i] &gt; a[n]，如果找到a[i]，那么序列就是a[n-1] a[n] a[i] a[1] … a[n-2] (假设i不是1或者n-2)，具体看代码</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn=<span class="number">1e5</span>+<span class="number">10</span>;</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="keyword">int</span> a[maxn];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;n; i++)&#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;a[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    sort(a,a+n);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;n<span class="number">-2</span>; i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(a[i]+a[n<span class="number">-2</span>] &gt; a[n<span class="number">-1</span>])&#123;</span><br><span class="line">            <span class="built_in">puts</span>(<span class="string">"YES"</span>);</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"%d %d %d"</span>,a[n<span class="number">-2</span>],a[n<span class="number">-1</span>],a[i]);</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>; j&lt;n<span class="number">-2</span>; j++)&#123;</span><br><span class="line">                <span class="keyword">if</span>(j!=i) <span class="built_in">printf</span>(<span class="string">" %d"</span>,a[j]);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="built_in">puts</span>(<span class="string">""</span>);</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">puts</span>(<span class="string">"NO"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="C-Candies"><a href="#C-Candies" class="headerlink" title="C. Candies!"></a><a href="https://codeforces.com/contest/1189/problem/C" target="_blank" rel="noopener">C. Candies!</a></h2><p> 题意: 有这么一个操作，对于a[i], a[i+1],…,a[j],其中，j-i+1是2的幂次方，然后对于每两个数，相加得到一个新数，然后个数就变成了原来的一半，比如说{1,2,3,4}，经过一次变换之后就变成了{3，7},一直操作直到个数为1; 然后对于每次操作，如果相加得到的新数大于10，我就能得到一颗糖，并且将新数对10取模; 然后我有k次询问，对于区间内的数，经过若干次操作之后，我能拿多少糖。</p><p> 解析: 题目给的限制，每个数小于10，我只要统计区间内的总数，然后除以10取整就是答案，证明略。<del>(盲猜结论直接莽一发)</del></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn=<span class="number">1e5</span>+<span class="number">10</span>;</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="keyword">int</span> a[maxn];</span><br><span class="line"><span class="keyword">int</span> dp[maxn];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=n; i++)&#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;a[i]);</span><br><span class="line">        dp[i]=dp[i<span class="number">-1</span>]+a[i];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> m,l,r;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;m);</span><br><span class="line">    <span class="keyword">while</span>(m--)&#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d %d"</span>,&amp;l,&amp;r);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,(dp[r]-dp[l<span class="number">-1</span>])/<span class="number">10</span>);;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="D1-Add-on-a-Tree"><a href="#D1-Add-on-a-Tree" class="headerlink" title="D1. Add on a Tree"></a><a href="https://codeforces.com/contest/1189/problem/D1" target="_blank" rel="noopener">D1. Add on a Tree</a></h2><p>题意: 有一棵树，然后有一种操作，任意选择两个叶子节点，然后得到一条路径，我能在这条路径上加上某个实数(初始化每条边都是0)，这样每条边都有一个数，问对于任意一组边上的数，我能否通过有限次操作实现</p><p>解析: 透过题目看本质，其实就是一道水题，当一个节点只连接两条边，就是NO，否则就是YES</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn=<span class="number">1e5</span>+<span class="number">10</span>;</span><br><span class="line"><span class="keyword">int</span> vis[maxn];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n,x,y;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</span><br><span class="line">    <span class="keyword">int</span> s=<span class="number">0</span>;</span><br><span class="line">    <span class="built_in">memset</span>(vis,<span class="number">0</span>,<span class="keyword">sizeof</span> vis);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;n<span class="number">-1</span>; i++)&#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d %d"</span>,&amp;x,&amp;y);</span><br><span class="line">        vis[x]++;</span><br><span class="line">        vis[y]++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">bool</span> flag=<span class="literal">true</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=n; i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(vis[i] == <span class="number">2</span>)&#123;</span><br><span class="line">            flag=<span class="literal">false</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(flag) <span class="built_in">puts</span>(<span class="string">"YES"</span>);</span><br><span class="line">    <span class="keyword">else</span> <span class="built_in">puts</span>(<span class="string">"NO"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="E-Count-Pairs"><a href="#E-Count-Pairs" class="headerlink" title="E. Count Pairs"></a><a href="https://codeforces.com/contest/1189/problem/E" target="_blank" rel="noopener">E. Count Pairs</a></h2><p>题意: 有一个数组a，给定一个素数p和一个小于p的数k，问能找到多少组(i,j),使得 $(a_i+a_j)*(a_i^2+a_j^2) \equiv k\ mod \ p$</p><p>解析: 两边同时乘$a_i - a_j$，就变成了$(a_i^4-a_j^4)$ $ \equiv $ $(k * a_i-k * a_j)$ $\ mod \ p$ ,转换就是$({a_i^4}-k * {a_i})$ $ \equiv $ $(k * {a_j^4} - k * {a_j}) $ $\ mod \ p$</p><p>只要另$b_i = a_i^4 - k* a_i$ 就可以通过map统计个数了,注意取模</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line">ll a,b;</span><br><span class="line">ll n,p,k;</span><br><span class="line"><span class="built_in">map</span>&lt;ll,ll&gt;ma;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%lld %lld %lld"</span>,&amp;n,&amp;p,&amp;k);</span><br><span class="line">    ll cnt=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(ll i=<span class="number">0</span>; i&lt;n; i++)&#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%lld"</span>,&amp;a);</span><br><span class="line">        b=(a*a%p*a%p*a%p-a*k%p+p)%p;</span><br><span class="line">        <span class="comment">//printf("%lld %lld\n",b,(a*a*a*a-a*k+p)%p);</span></span><br><span class="line">        ma[b]++;</span><br><span class="line">        cnt+=(ma[b]<span class="number">-1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,cnt);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;del&gt;这场比较简单&lt;/del&gt;，深夜肝题，精神抖擞.jpg，不过涨分就很舒服&lt;/p&gt;
    
    </summary>
    
      <category term="codeforces" scheme="http://yoursite.com/categories/codeforces/"/>
    
    
  </entry>
  
</feed>
